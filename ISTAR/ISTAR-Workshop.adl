CONTEXT ISTARWorkshop IN ENGLISH
------------------------------------------------------------
CONCEPT Order "the specification of a task, consisting of at least a Situational Description, a Mission Description, an Execution Description, a Combat Service Support Description and a Command, Control and Communications Description"
PURPOSE CONCEPT Order IN ENGLISH
{+In the Defense organisation, it is often necessary for a commander to order others what they are required to do, such as fulfilling a mission, running a patrol, etc. An order therefore should not only contain the goals that are to be reached, but also a description of the situation in which the task is to be performed, constrains with respect to the task execution, etc.+}

KEY orderIDs: Order(orderID)
--IDENT orderIDs: Order(orderID) -- lokaal in de DB
--VIEW  orderIDs: Order(orderID) -- zoals 'KEY' in het verleden, met TXT, en relaties.
orderID        :: Order -> OrderID
orderWarningQ  :: Order -> "Yes/No answer"
orderFrom      :: Order -> Unit
orderTo        :: Order -> Unit

--orderContent   :: Order -> Order [] --REF "Appendix B.2 Processed Matrix"
orderSituation :: Order * "Situational Description" [UNI]
orderMission   :: Order * "Mission Description" [UNI]
orderExecution :: Order * "Execution Description" [UNI]
orderCSS       :: Order * "CSS Description" [UNI]
orderCCC       :: Order * "CCC Description" [UNI]

CONCEPT IntelRequirement "the specification of a piece of information (say, a question)."
PURPOSE CONCEPT IntelRequirement IN ENGLISH
{+In order to search for, or actively acquire information, it is necessary to specify the information that is needed.+}

irID :: IntelRequirement -> IntelRequirementID
KEY irIDs: IntelRequirement(irID)
--IDENT irIDs: IntelRequirement(irID) -- lokaal in de DB
--VIEW  irIDs: IntelRequirement(irID) -- zoals 'KEY' in het verleden, met TXT, en relaties.

CONCEPT ICO "an Order for collecting intel"
PURPOSE CONCEPT ICO IN ENGLISH
{+Whenever an Intel Requirement cannot be satisfied with known information, an order must be issued to collect the missing  information.+}

irCollectionOrder :: IntelRequirement * Order --![SUR] This is needed when Order can become an ICO
MEANING "In order to collect information for answering an Intel Requirement, an order may be issued"

irOrder     :: IntelRequirement * Order [] --REF "Appendix B.2 Processed Matrix"
MEANING "An Intel Requirement must be specified in, and is part of, an Order."

irContent   :: IntelRequirement * "Content of requirement (objective, activities to be performed)" [] --REF "Appendix B.2 Processed Matrix"
irIndicator :: IntelRequirement * Indicator [] --REF "Appendix B.2 Processed Matrix"
irProgress  :: IntelRequirement * Progress [] --REF "Appendix B.2 Processed Matrix"
irAnswer    :: IntelRequirement * Answer [] --REF "Appendix B.2 Processed Matrix"

-----------------------------------------------------------
--PROCESS "Situational Overview Maintenance"
--PURPOSE PROCESS "Situational Overview Maintenance" IN ENGLISH {+Orders that are issued to a commander are to be carried out. In order to do this in the best possible manner, the commander needs an overview of means that he may use (and their status) as well as an overview of the means of possible adversaries. In order to obtain the information he needs, the commander must specify the information he needs and the criteria (e.g. for quality) that this information must satisfy. The commander can track the status/progress of the information collection and will (ultimately) see the information he requires. This process allows commanders to specify their information needs, monitor progress in the acquisition of such information and (ultimately) see the information as it becomes available.+}


--ENDPROCESS
------------------------------------------------------------
PROCESS "Order Analysis"
PURPOSE PROCESS "Order Analysis" IN ENGLISH
{+Intelligence information that a commander needs in order to carry out an order, must become available as soon as possible. To this end, all orders containing Intel Requirements must be analysed, which means that for every Intel Requirement in the order, an answer is searched for in the information that already is available; if it turns out that an answer cannot be formulated (completely) yet, an intel collection order will be issued for obtaining the (remaining) information, which is the assurance that the answers will ultimately be supplied. 
-}

ROLE SupportedUnit MAINTAINS "Analyse orders with Intel Requirements"
PURPOSE RULE "Analyse orders with Intel Requirements" IN ENGLISH
{+Intelligence information that a commander needs in order to carry out an order, must become available as soon as possible. To this end, all orders containing Intel Requirements must be analysed, which means that for every Intel Requirement in the order, an answer is searched for in the information that already is available; if it turns out that an answer cannot be formulated (completely) yet, an intel collection order will be issued for obtaining the (remaining) information, which is the assurance that the answers will ultimately be supplied.+}
RULE "Analyse orders with Intel Requirements": I[Order] /\ (irOrder~;irOrder) |- orderAnalysed
MEANING "Analysing a (warning) order ascertains that every Intel Requirement will (eventually) be provided with an answer"
VIOLATION (TXT "(Warning) order ", SRC I[Order], TXT " remains to be analysed.")

ROLE Plans MAINTAINS "Issue intel collection order"
PURPOSE RULE "Issue intel collection order" IN ENGLISH
{+Analysing a (warning) order means: getting an idea of what kinds of information still should be collected. So, for every intel requirement that is not answered (yet), an intell collection order should exist.+}
RULE "Issue intel collection order": 
I[IntelRequirement] /\ (irOrder;irOrder~) /\ -(irAnswer;irAnswer~) |- irCollectionOrder;irCollectionOrder~
MEANING "For every Intel Requirement that is related to an Order and does not have an answer, a collection order must exist."
VIOLATION (TXT "Intel requirement ", SRC I, TXT " does not have an answer nor is there an intel collection order for it.")

ROLE Plans MAINTAINS "(Warning) order analysis"
PURPOSE RULE "(Warning) order analysis" IN ENGLISH
{+Analysis of a order consists of analysing every Intel Requirement in that order. Analysing an Intel Requirement consists of (a) searching for an already existing answer (using already available information), or (b) ordering the collection of requisite information that is not yet available. The analysis of a (warning) order is complete when every information requirement either has an answer, or an intel collection order has been issued for that information request.+}
RULE "(Warning) order analysis": 
I /\ irOrder~; -- For an order, for which there exists an IntelRequest with the property that:
              (I /\ (   -(irAnswer;irAnswer~)   -- there is NO answer AND
                     /\ -(irCollectionOrder;irCollectionOrder~) -- there is NO collection order
                    )
              ); irOrder
|- -orderAnalysed -- Such orders may NOT have the Analysed=Yes status
MEANING "A (warning) order can only have the status 'analysed' if every IntelRequirement has been analysed"
VIOLATION (TXT "(Warning) order ", SRC I[Order], TXT " can be set as 'analysed'.")

ENDPROCESS
-------------------------------------------------------------
PROCESS "Automated execution"

ROLE ExecEngine MAINTAINS "Delete irrelevant IntelRequirements"
RULE "Delete irrelevant IntelRequirements": I[IntelRequirement] |- irOrder;irOrder~
VIOLATION (TXT "{EX} DelAtom;IntelRequirement;", SRC I)

orderIsICO :: Order * Order [PROP] -- Order is an ICO
ROLE ExecEngine MAINTAINS "insorderIsICO"
RULE "insorderIsICO": I[Order] /\ irCollectionOrder~;irCollectionOrder |- orderIsICO
VIOLATION (TXT "{EX} InsPair;orderIsICO;Order;", SRC I, TXT ";Order;", TGT I)
ROLE ExecEngine MAINTAINS "delorderIsICO" -- ICO's that have no IntelRequirement any more will be deleted!!!!!!
RULE "delorderIsICO": orderIsICO |- I[Order] /\ irCollectionOrder~;irCollectionOrder
VIOLATION (TXT "{EX} DelAtom;Order;", SRC I)

orderAnswered :: Order * Order [PROP]
ROLE ExecEngine MAINTAINS "insorderAnswered"
RULE "insorderAnswered": I /\ -(irOrder~;(I /\ -(irAnswer;irAnswer~));irOrder) |- orderAnswered
VIOLATION (TXT "{EX} InsPair;orderAnswered;Order;", SRC I, TXT ";Order;", TGT I)
ROLE ExecEngine MAINTAINS "delorderAnswered"
RULE "delorderAnswered": orderAnswered |- I /\ -(irOrder~;(I /\ -(irAnswer;irAnswer~));irOrder)
VIOLATION (TXT "{EX} DelPair;orderAnswered;Order;", SRC I, TXT ";Order;", TGT I)

orderAnalysed :: Order * Order [PROP]
ROLE ExecEngine MAINTAINS "insorderAnalysed"
RULE "insorderAnalysed": I /\ -(irOrder~;(I /\ -(irAnswer;irAnswer~) /\ -(irCollectionOrder;irCollectionOrder~));irOrder) |- orderAnalysed
VIOLATION (TXT "{EX} InsPair;orderAnalysed;Order;", SRC I, TXT ";Order;", TGT I)
ROLE ExecEngine MAINTAINS "delorderAnalysed"
RULE "delorderAnalysed": orderAnalysed |- I /\ -(irOrder~;(I /\ -(irAnswer;irAnswer~) /\ -(irCollectionOrder;irCollectionOrder~));irOrder)
VIOLATION (TXT "{EX} DelPair;orderAnalysed;Order;", SRC I, TXT ";Order;", TGT I)

orderStatus    :: Order * Status [UNI]
{- Decision table for Order statuses:
----------------------------------------------------------------
Order has IntelRequirements     |   Y   |   Y   |   Y   |  N   |
Order is answered               |   Y   |   N   |   N   |  -   |
Order is analysed               |   -   |   Y   |   N   |  -   |
----------------------------------------------------------------
Statuscolor                     | Green |Yellow |  Red  |White |
----------------------------------------------------------------
-}

ROLE ExecEngine MAINTAINS "Order status 'Green'"
RULE "Order status 'Green'": I /\ irOrder~;irOrder /\ orderAnswered |- orderStatus;'Green';orderStatus~
VIOLATION (TXT "{EX} InsPair;orderStatus;Order;", SRC I, TXT ";Status;Green")

ROLE ExecEngine MAINTAINS "Order status 'Yellow'"
RULE "Order status 'Yellow'": I /\ irOrder~;irOrder /\ -orderAnswered /\ orderAnalysed |- orderStatus;'Yellow';orderStatus~
VIOLATION (TXT "{EX} InsPair;orderStatus;Order;", SRC I, TXT ";Status;Yellow")

ROLE ExecEngine MAINTAINS "Order status 'Red'"
RULE "Order status 'Red'": I /\ irOrder~;irOrder /\ -orderAnswered /\ -orderAnalysed |- orderStatus;'Red';orderStatus~
VIOLATION (TXT "{EX} InsPair;orderStatus;Order;", SRC I, TXT ";Status;Red")

ROLE ExecEngine MAINTAINS "Order status 'White'"
RULE "Order status 'White'": I /\ -(irOrder~;irOrder) |- orderStatus;'White';orderStatus~
VIOLATION (TXT "{EX} InsPair;orderStatus;Order;", SRC I, TXT ";Status;White")

irStatus    :: IntelRequirement * Status [UNI]
{- Decision table for IntelRequirement statuses:
--------------------------------------------------------------------
IntelRequirement is answered               |   Y   |   N   |   N   |
IntelRequirement has ICO                   |   -   |   Y   |   N   |
--------------------------------------------------------------------
Statuscolor                                | Green |Yellow |  Red  |
--------------------------------------------------------------------
-}

ROLE ExecEngine MAINTAINS "IntelRequirement status 'Green'"
RULE "IntelRequirement status 'Green'": I /\ irAnswer;irAnswer~ |- irStatus;'Green';irStatus~
VIOLATION (TXT "{EX} InsPair;irStatus;IntelRequirement;", SRC I, TXT ";Status;Green")

ROLE ExecEngine MAINTAINS "IntelRequirement status 'Yellow'"
RULE "IntelRequirement status 'Yellow'": I /\ -(irAnswer;irAnswer~) /\ irCollectionOrder;irCollectionOrder~ |- irStatus;'Yellow';irStatus~
VIOLATION (TXT "{EX} InsPair;irStatus;IntelRequirement;", SRC I, TXT ";Status;Yellow")

ROLE ExecEngine MAINTAINS "IntelRequirement status 'Red'"
RULE "IntelRequirement status 'Red'": I /\ -(irAnswer;irAnswer~) /\ -(irCollectionOrder;irCollectionOrder~) |- irStatus;'Red';irStatus~
VIOLATION (TXT "{EX} InsPair;irStatus;IntelRequirement;", SRC I, TXT ";Status;Red")

ENDPROCESS
-------------------------------------------------------------
ENDCONTEXT