CONTEXT ISTAR_SIAMv3_0 IN ENGLISH -- SIAM: Sessions, Identity- and Access Management
-- The purpose of this file is to provide an easy way for users of the module to include SIAM functionality.

-- This is the example loader file for SIAM v 3.0
RULE "This file expects to load SIAM version 3.x": "SIAM";moduleVsnMajor |- moduleVsnMajor;3
VIOLATION (TXT "The SIAM Module files that you have INCLUDEd have major version number ", TGT I)
   INCLUDE "../SIAMv3/SIAM_Module-versioning.adl"   -- the version definition for this module
   INCLUDE "../SIAMv3/SIAM_FrontendIntegration.adl" -- integration with front-end stuff (role selection and such)
   INCLUDE "../SIAMv3/SIAM_AccountSessionRoles.adl" -- Core functionality: UIDs, Accounts, Sessions, Roles, Logout.
   INCLUDE "../SIAMv3/SIAM_PersonRefs.adl"          -- a standard way for refering to people, not associated with the Person concept.
--   INCLUDE "../SIAMv3/SIAM_PersonReg.adl"           -- extension to PersonRefs by a basic/minimalistic Person Object registration (just first- and last names).
--   INCLUDE "../SIAMv3/SIAM_PersonRegExts.adl"       -- extensions (relations) for PersonReg that are commonly used.
--   INCLUDE "../SIAMv3/SIAM_OrgRefs.adl"             -- a standard way for refering to organizations, not associated with the Person concept.
--   INCLUDE "../SIAMv3/SIAM_OrgReg.adl"              -- extension to OrgRefs by a basic/minimalistic Organization Object registration (just abbr. and full names).
--   INCLUDE "../SIAMv3/SIAM_PersonOrgs.adl"          -- Extension that defines (and maintains the population of) relation `personOrg`.
-- INCLUDE "../SIAMv3/SIAM_Persona.adl"             -- Extension that implements Persona (based on Persons and Organizations).
   INCLUDE "../SIAMv3/SIAM_LoginWithUPW.adl"        -- Login using U/PW (Usernames and Passwords).
   INCLUDE "../SIAMv3/SIAM_RegisterWithUPW.adl"     -- Extension that registers not-yet existing users that specify a U/PW.
--   INCLUDE "../SIAMv3/SIAM_LoginWithUID.adl"        -- Login using third party identity providers.
--   INCLUDE "../SIAMv3/SIAM_RegisterWithUID.adl"     -- Extension that registers authenticated users that do not have an Account.
--   INCLUDE "../SIAMv3/SIAM_LoginLogging.adl"        -- Extension that keeps track of when logins are done. 
--   INCLUDE "../SIAMv3/SIAM_ISO_LoA.adl"             -- Extension that introduces ISO authentication levels in a basic fashion.
--   INCLUDE "../SIAMv3/SIAM_SessionSuspension.adl"   -- Extension that allows sessions to temporarily be suspended.
   INCLUDE "../SIAMv3/SIAM_AutoLoginAccount.adl"    -- Extension that implements the `autoLoginAccount` property for accounts.
--   INCLUDE "../SIAMv3/SIAM_GodAccounts.adl"         -- Extension that implements the 'God-accounts' and 'devil roles' feature (accounts that have all roles).

-- INCLUDE "../SIAMv3/SIAM_PersonReg.ifc"           -- a basic/minimalistic interface to edit Persons
-- INCLUDE "../SIAMv3/SIAM_OrgReg.ifc"              -- a basic/minimalistic interface to edit Organizations
-- INCLUDE "../SIAMv3/SIAM_Persona.ifc"             -- a basic/minimalistic interface to edit Persona
-- INCLUDE "../SIAMv3/SIAM_AccountManagement.ifc"   -- a basic/minimalistic interface to edit Accounts

-- Only one of the following can be active at any time.
--   INCLUDE "../SIAMv3/SIAM_LoginWithUPW.ifc"                      -- Interface: simple login/logout
-- INCLUDE "../SIAMv3/SIAM_LoginWithUID.ifc"                      -- Interface: login with UIDs
-- INCLUDE "../SIAMv3/SIAM_LoginWithAssistance.ifc"               -- Interface: login/logout for use by developers
-- INCLUDE "../SIAMv3/SIAM_LoginWithAssistanceAndAuthLevels.ifc"  -- Interface: login/logout for developers that need LoAs

--[[Account extensions]]--
--[Units]--
CONCEPT Unit "an organizational unit, the head of which is its commander"
PURPOSE CONCEPT Unit
{+The Defense organisation is organized in units consisting of a commander (who is in charge), other employees and materials for which the commander is accountable to his direct superior in the command-chain.+}

REPRESENT UnitID TYPE ALPHANUMERIC
unitID :: Unit * UnitID -- REF See http://nl.wikipedia.org
RULE "operational units": I[Unit] |- unitID;unitID~

accUnit :: Account * Unit [UNI]
sessionUnit :: SESSION * Unit [UNI]

ROLE ExecEngine MAINTAINS "Auto InsPair sessionUnit"
RULE "Auto InsPair sessionUnit": sessionAccount;accUnit |- sessionUnit
VIOLATION (TXT "{EX} InsPair;sessionUnit;SESSION;", SRC I, TXT ";Unit;", TGT I)
ROLE ExecEngine MAINTAINS "Auto DelPair sessionUnit"
RULE "Auto DelPair sessionUnit": sessionUnit |- sessionAccount;accUnit
VIOLATION (TXT "{EX} DelPair;sessionUnit;SESSION;", SRC I, TXT ";Unit;", TGT I)

--[[Examples of possibly useful VIEWs]]--
-- The following VIEW replaces 'dirty' SESSION identifiers with the text "My Session" or "Some other Session"
   VIEW Sessions: SESSION DEFAULT 
   { "uid": "_SESSION"[SESSION];V;"My Session"[LoginMessage] 
        \/ (I[SESSION]-"_SESSION");V;"Some other Session"[LoginMessage]
   } ENDVIEW
   POPULATION LoginMessage CONTAINS [ "My Session", "Some other Session" ] --}

-- DEFAULT view voor UIDs:
   VIEW UIDs: UID DEFAULT 
   { "Userid":uidUserid, "at":TXT"@", "IdP":uidIssuer 
   } ENDVIEW  --}

   VIEW STRONG: IfcText HTML TEMPLATE "STRONG.html" ENDVIEW
   REPRESENT IfcText TYPE ALPHANUMERIC

--[[Examples of possibly useful RULEs]]--
--[Account initialization]--
{- Creating an account (e.g. when importing through an Excel file) does not make it usable immediately.
For example, its property `accIsActive` must be set before it can be used to login with.
The property `accIsInitialized` is defined to help distinguish between Accounts that are, and those that are not initialized.
Note: setting the property `accIsActive` will automatically also set `accIsInitialized`.-}

   ROLE ExecEngine MAINTAINS "Account activation/initialization"
   RULE "Account activation/initialization": I[Account] |- accIsInitialized
   VIOLATION (TXT "{EX} InsPair;accAllowedRoles;Account;", SRC I, TXT ";Role;User"
             ,TXT "{EX} InsPair;accDefaultRoles;Account;", SRC I, TXT ";Role;User"
             ,TXT "{EX} InsPair;accIsActive;Account;", SRC I, TXT ";Account;", TGT I  -- `acIsInitialized` will now automatically be set
--           ,TXT "{EX} InsPair;accIsInitialized;Account;", SRC I, TXT ";Account;", TGT I
             )

   ROLE ExecEngine MAINTAINS "Auto activate auto-login accounts"
   RULE "Auto activate auto-login accounts": autoLoginAccount |- accIsActive
   VIOLATION (TXT "{EX} InsPair;accIsActive;Account;", SRC I, TXT ";Account;", TGT I) --}

--[Role (de)activation]--
   ROLE ExecEngine MAINTAINS "Initially, allowed roles are also default roles"
   RULE "Initially, allowed roles are also default roles": 
   (I-(accDefaultRoles;accDefaultRoles~));accAllowedRoles |- accDefaultRoles
   VIOLATION (TXT "{EX} InsPair;accDefaultRoles;Account;", SRC I, TXT ";Role;", TGT I) --}

{- orgRole :: Organization * Role MEANING "Roles that are applicable to all accounts of the organization"
   ROLE ExecEngine MAINTAINS "Automatically assign organization roles"
   RULE "Automatically assign organization roles" : accOrg;orgRole;(I-"SYSTEM") |- accAllowedRoles
   VIOLATION (TXT "{EX}InsPair;accAllowedRoles;Account;", SRC I, TXT ";Role;", TGT I) --}

-----------------------------------------------------------
{- ** Temporarily commented out ** 

{-The script below is adapted from SIAMv3/SIAM_LoginWithAssistance.ifc
It provides an interface with LOGIN functionality.
It is particularly suited for developers, since it allows you to select 
an account by which you then will be logged in, rather than that 
you have to type the actual username and password.
-}
-----------------------------------------------------------
--INCLUDE "./SIAM_AutoLoginAccount.adl"    -- Extension that implements the `autoLoginAccount` property for accounts.
--INCLUDE "./SIAM_RegisterWithUPW.adl"     -- Extension that registers not-yet existing users that specify a U/PW.

INTERFACE "Login (DEV)": "_SESSION"[SESSION] cRud BOX <ROWSNL>
   [ "Login or register": I-(sessionAccount;sessionAccount~) cRud ROWS
      [ "Login" : I cRud BOX <HCOLS>
         [ "Userid": loginUserid cRUd
         , "Password": loginPassword crUd -- crUd is needed for Passwords
--$The following two lines are meant for demonstration contexts only
         , "Please help": sessionLoginAssist cRUd
      , " ": sessionLoginAssist;(V-(V;accIsActive;V));"Cannot help - there are no (active) accounts"[LoginMessage] cRud
         ]
      , "Register": "_SESSION"-(sessionAccount;sessionAccount~) cRud BOX <HCOLS>
         [ "Userid" : loginUserid cRUd
         , "Password" : loginPassword crUd -- crUd is needed for Passwords
         , "Create?" : loginCreateAccount cRUd
         ]
      ]
--$This is for an easy login, which is just for testing purposes
   , "Active accounts": sessionLoginAssist;V[SESSION*Account];accIsActive cRud BOX <SHCOLS>
      [ "Login?": autoLoginAccount cRUd
      , "Userid": accUserid cRud
      , "Person": accPersonRef cRud
      , "Unit": accUnit cRud
--    , "Allowed roles": accAllowedRoles cRUd
--    , "Default roles": accDefaultRoles cRUd
      ]
   , "Inactive accounts": sessionLoginAssist;V[SESSION*Account];(I-accIsActive) cRud BOX <SHCOLS>
      [ "Activate?" : accIsActive cRUd
      , "Userid": accUserid cRud
      , "Person": accPersonRef cRud
      , "Unit": accUnit cRud
--    , "Allowed roles": accAllowedRoles cRUd
--    , "Default roles": accDefaultRoles cRUd
      ]
   , "Logout": I /\ sessionAccount;sessionAccount~ cRud BOX <ROWSNL>
      [ "Logout": I cRud BOX <HCOLS>
         [ "Logout?": logoutRequest cRUd
         , "UserID": sessionUserid cRud
         , "Person": sessionPersonRef cRud
         , "Unit": sessionUnit cRud
--       , "Active roles": sessionActiveRoles cRud
         ]
      ]
   ]
POPULATION LoginMessage CONTAINS [ "Cannot help - there are no (active) accounts" ]

INTERFACE "Login (DEV-Anonymous)" FOR Anonymous: "_SESSION"[SESSION] cRud BOX <ROWSNL>
   [ "Login" : I cRud BOX <HCOLS>
      [ "Userid": loginUserid cRUd
      , "Password": loginPassword crUd -- crUd is needed for Passwords
--$The following two lines are meant for demonstration contexts only
      , "Please help": sessionLoginAssist cRUd
      , " ": sessionLoginAssist;(V-(V;accIsActive;V));"Cannot help - there are no (active) accounts"[LoginMessage] cRud
      ]
--$This is for an easy login, which is just for testing purposes
   , "Active accounts": sessionLoginAssist;V[SESSION*Account];accIsActive cRud BOX <SHCOLS>
      [ "Login?": autoLoginAccount cRUd
      , "Userid": accUserid cRud
      , "Person": accPersonRef cRud
      , "Unit": accUnit cRud
--    , "Allowed roles": accAllowedRoles cRUd
--    , "Default roles": accDefaultRoles cRUd
      ]
   , "Inactive accounts": sessionLoginAssist;V[SESSION*Account];(I-accIsActive) cRud BOX <SHCOLS>
      [ "Activate?" : accIsActive cRUd
      , "Userid": accUserid cRud
      , "Person": accPersonRef cRud
      , "Unit": accUnit cRud
--    , "Allowed roles": accAllowedRoles cRUd
--    , "Default roles": accDefaultRoles cRUd
      ]
   ]

INTERFACE "Register (DEV-Anonymous)" FOR Anonymous: "_SESSION"[SESSION] cRud BOX <ROWSNL>
   [ "Register" : "_SESSION"-(sessionAccount;sessionAccount~) cRud BOX <HCOLS>
      [ "Userid" : loginUserid cRUd
      , "Password" : loginPassword crUd -- crUd is needed for Passwords
      , "Create?" : loginCreateAccount cRUd
      ]
   ]

INTERFACE "Logout (DEV)": "_SESSION"[SESSION] cRud BOX <ROWSNL>
   [ "Logout" : I /\ sessionAccount;sessionAccount~ cRud BOX <HCOLS>
      [ "Logout?": logoutRequest cRUd
      , "UserID": sessionUserid cRud
      , "Person": sessionPersonRef cRud
      , "Unit": sessionUnit cRud
--    , "Active roles": sessionActiveRoles cRUd
      ]
   ]
--}
-----------------------------------------------------------
ENDCONTEXT