CONTEXT SIAM IN ENGLISH -- SIAM: Sessions, Identity- and Access Management.
-- The purpose of this file is to provide an easy way for users of the module to include SIAM functionality.

RULE "This file expects to load SIAM version 2.x": 'SIAM';moduleVsnMajor |- moduleVsnMajor;'2'
VIOLATION (TXT "The SIAM Module files that you have INCLUDEd have major version number ", TGT I)

   INCLUDE "../SIAM/SIAM_Module-versioning.adl"   -- the version definition for this module
   INCLUDE "../SIAM/SIAM_PersonReg.adl"           -- a basic/minimalistic Person registration (just first- and last names).
   INCLUDE "../SIAM/SIAM_OrgReg.adl"              -- a basic/minimalistic Organization registration (just abbreviated and full names).
   INCLUDE "../SIAM/SIAM_PersonOrgs.adl"          -- Extension that defines (and maintains the population of) relation `personOrg`.
-- INCLUDE "../SIAM/SIAM_Persona.adl"             -- Extension that implements Persona (based on Persons and Organizations).
   INCLUDE "../SIAM/SIAM_Roles.adl"               -- Role definitions (allowed roles, default activated roles, 'god'-account property).
-- INCLUDE "../SIAM/SIAM_LoginLogging.adl"        -- Adding a timestamp to Logins. 
   INCLUDE "../SIAM/SIAM_Login.adl"               -- Core functionality: sessions, and login with username/password.
-- INCLUDE "../SIAM/SIAM_LoginUsingIdPs.adl"      -- Extension of Login: Login using third party identity providers.
   INCLUDE "../SIAM/SIAM_AutoLoginAccount.adl"    -- Extension that implements the `autoLoginAccount` property for accounts.
-- INCLUDE "../SIAM/SIAM_GodAccounts.adl"         -- Extension that implements the 'God-accounts' feature (accounts that have all roles).
   INCLUDE "../SIAM/SIAM_SessionSuspension.adl"   -- Extension that allows sessions to temporarily be suspended.
   INCLUDE "../SIAM/SIAM_LoginISOAuthLevels.adl"  -- Extension that introduces ISO authentication levels in a basic fashion.

-- INCLUDE "../SIAM/SIAM_PersonReg.ifc"           -- a basic/minimalistic interface to edit Persons
-- INCLUDE "../SIAM/SIAM_OrgReg.ifc"              -- a basic/minimalistic interface to edit Organizations
-- INCLUDE "../SIAM/SIAM_Persona.ifc"             -- a basic/minimalistic interface to edit Persona
-- INCLUDE "../SIAM/SIAM_AccountManagement.ifc"   -- a basic/minimalistic interface to edit Accounts

-- Only one of the following can be active at any time.
-- INCLUDE "../SIAM/SIAM_Login.ifc"                             -- The simplest Login/Logout interface
-- INCLUDE "../SIAM/SIAM_LoginWithAssistance.ifc"               -- Login/Logout interface, only to be used by developers
-- INCLUDE "../SIAM/SIAM_LoginWithAssistanceAndAuthLevels.ifc"  -- Login/Logout interface, only to be used by developers that need LoA's

--[Views]--
--VIEW UIDs: UID DEFAULT { "Userid":uidUserid, "at":TXT"@", "IdP":uidIdP } ENDVIEW
  VIEW Sessions: SESSION DEFAULT { "text" : TXT "User: ", "uid" : sessionUserid } ENDVIEW
--VIEW PersonFullName: Person DEFAULT {"first name": personFirstName, "space": TXT " ", "last name": personLastName} ENDVIEW
--VIEW Organizations: Organization (orgAbbrName)
VIEW Accounts: Account (accUserid)

--[Account management]--

ROLE ExecEngine MAINTAINS "The userid of a customer is its (initial) personref"
RULE "The userid of a customer is its (initial) personref":
   (I[Account]-(accUserid;accUserid~));accPersonRef |- accUserid;V
VIOLATION (TXT "{EX} InsPair;accUserid;Account;", SRC I, TXT ";UserID;", TGT I)

--[[SIAMv3 emulation]]--------------------------------------
META "authors" "Rieks Joosten (rieks.joosten@tno.nl)"

--[UIDs]----------------------------------------------------
IDENT UIDs: UID(uidIssuer,uidUserid)
RELATION uidUserid[UID*UserID] [UNI,TOT] -- Identifier for the user in the realm of the IdP that issued it.
RELATION uidIssuer[UID*IdP]    [UNI]     -- Identifier for the third-party IdP that issues the uidUserid. If none is given, the UserID is issued by the application itself.

RELATION accUID[Account*UID] [INJ] -- A UID may serve as an identifier for an Account.
MEANING "An Account registers a UID for whatever the Account applies to"

--[PersonRefs]--
REPRESENT PersonRef TYPE ALPHANUMERIC
RELATION personRef[Person*PersonRef] [UNI]
MEANING "A textstring to refer to this person"

RELATION accPersonRef[Account*PersonRef] [UNI] 
MEANING "An Account may have a textstring that refers to the Person for which the account has attributes"

RELATION sessionPersonRef[SESSION*PersonRef] [UNI]
MEANING "In a SESSION, a textstring that refers to the user (i.e. the Person that acts 'at the other side') may be known."
ROLE ExecEngine MAINTAINS "Determine the personRef in a session"
RULE "Determine the personRef in a session": sessionAccount;accPersonRef |- sessionPersonRef
VIOLATION (TXT "{EX} InsPair;sessionPersonRef;SESSION;", SRC I, TXT ";PersonRef;", TGT I)
ROLE ExecEngine MAINTAINS "Undetermine the personRef in a session"
RULE "Undetermine the personRef in a session": (I /\ sessionAccount;sessionAccount~);sessionPersonRef |- sessionAccount;accPersonRef
VIOLATION (TXT "{EX} DelPair;sessionPersonRef;SESSION;", SRC I, TXT ";PersonRef;", TGT I)

--[Automating creation and maintenance of PersonRefs]------
IDENT SIAMPersonRefComputations: SIAMPersonRefComputation(siamcompFirstName,siamcompLastName)
RELATION siamcompFirstName[SIAMPersonRefComputation*FirstName]  [UNI]
RELATION siamcompLastName[SIAMPersonRefComputation*LastName]   [UNI]
RELATION siamcompPersonRef[SIAMPersonRefComputation*PersonRef]  [UNI]

ROLE ExecEngine MAINTAINS "Auto create SIAMPersonRefComputation"
RULE "Auto create SIAMPersonRefComputation": personFirstName~;personLastName |- siamcompFirstName~;siamcompLastName
VIOLATION (TXT "{EX} NewStruct;SIAMPersonRefComputation"
              ,TXT ";siamcompFirstName;SIAMPersonRefComputation;_NEW;FirstName;", SRC I
              ,TXT ";siamcompLastName;SIAMPersonRefComputation;_NEW;LastName;", TGT I
              ,TXT ";siamcompPersonRef;SIAMPersonRefComputation;_NEW;PersonRef;{php}'", SRC I, TXT "'.' '.'", TGT I, TXT "'"
          )

ROLE ExecEngine MAINTAINS "Auto maintain 'personRef' relation"
RULE "Auto maintain 'personRef' relation": 
 (personFirstName;siamcompFirstName~ /\ personLastName;siamcompLastName~);siamcompPersonRef |- personRef
VIOLATION (TXT "{EX} InsPair;personRef;Person;", SRC I, TXT ";PersonRef;", TGT I)

ROLE ExecEngine MAINTAINS "Auto maintain 'accPersonRef' relation"
RULE "Auto maintain 'accPersonRef' relation": accPerson;personRef |- accPersonRef
VIOLATION (TXT "{EX} InsPair;accPersonRef;Account;", SRC I, TXT ";PersonRef;", TGT I)

--[OrgRefs]--
accOrgRef :: Account * OrgRef [UNI] -- a text that refers to the organization associated with the account.
MEANING "An Account may have a textstring that refers to the Organization to which the Account is related"

sessionOrgRef :: SESSION * OrgRef [UNI]
MEANING "In a SESSION, a textstring that refers to the Organization ('at the other side') may be known."
ROLE ExecEngine MAINTAINS "Determine the OrgRef in a session"
RULE "Determine the OrgRef in a session": sessionAccount;accOrgRef |- sessionOrgRef
VIOLATION (TXT "{EX} InsPair;sessionOrgRef;SESSION;", SRC I, TXT ";OrgRef;", TGT I)
ROLE ExecEngine MAINTAINS "Clear the OrgRef in a session"
RULE "Clear the OrgRef in a session": (I /\ sessionAccount;sessionAccount~);sessionOrgRef |- sessionAccount;accOrgRef
VIOLATION (TXT "{EX} DelPair;sessionOrgRef;SESSION;", SRC I, TXT ";OrgRef;", TGT I)

--[Assisted Login request]---------------------------------
RELATION sessionLoginAssist[SESSION*SESSION] [PROP] -- This flag is used by the 'LoginWithAssistance' interfaces. It has been put here to accommodate developers that want to create their own versions of such interfaces (as in the QBox project).
ROLE ExecEngine MAINTAINS "Reset login help"
RULE "Reset login help": sessionLoginAssist /\ sessionAccount;sessionAccount~ |- -V
VIOLATION (TXT "{EX} DelPair;sessionLoginAssist;SESSION;", SRC I, TXT ";SESSION;", TGT I)

--[Registration (Account creation)]--

RELATION loginCreateAccount[SESSION*SESSION] [PROP]
RULE "An account may only be created if it has not been previously registered": loginCreateAccount;loginUserid;accUserid~ |- -V
RULE "An account can only be created for users that are not logged in": loginCreateAccount /\ sessionAccount;sessionAccount~ |- -V
RULE "You must specify a username to create an account": loginCreateAccount |- loginUserid;loginUserid~
RULE "You must specify a password to create an account": loginCreateAccount |- registerPassword;registerPassword~

RELATION registerPassword[SESSION*Password] [UNI] -- cannot use `loginPassword`, as that may fire the login-rule before the account is actually created.
RELATION registerOrgRef[SESSION*OrgRef] [UNI] -- allow user to enter the organization that he works for.

ROLE ExecEngine MAINTAINS "Create Account upon request"
RULE "Create Account upon request":
      loginCreateAccount -- We create an account if:
   /\ -(sessionAccount;sessionAccount~)  -- we have an anonymous session
   /\ loginUserid;loginUserid~           -- and a userid is specified
   /\ registerPassword;registerPassword~ -- as well as a password
   /\ sessionPersonRef;sessionPersonRef~ -- and the users name.
|- (  loginUserid;accUserid~ 
   /\ registerPassword;accPassword~
   /\ sessionPersonRef;accPersonRef~
   );V
VIOLATION (TXT "{EX} NewStruct;Account"
               ,TXT ";accUserid;Account;_NEW;UserID;", SRC loginUserid
               ,TXT ";accPassword;Account;_NEW;Password;", TGT registerPassword
               ,TXT ";accOrgRef;Account;_NEW;Password;", TGT registerOrgRef
               ,TXT ";accPersonRef;Account;_NEW;PersonRef;", TGT sessionPersonRef
               ,TXT ";sessionAccount;SESSION;", SRC I, TXT ";Account;_NEW" -- immediately login to prevent account to be automatically destroyed.
          ,TXT "{EX} DelPair;loginCreateAccount;SESSION;", SRC I, TXT ";SESSION;", TGT I
          ,TXT "{EX} DelPair;loginUserid;SESSION;", SRC I, TXT ";UserID;", TGT loginUserid
          ,TXT "{EX} DelPair;loginPassword;SESSION;", SRC I, TXT ";Password;", TGT loginPassword
          ,TXT "{EX} DelPair;registerPassword;SESSION;", SRC I, TXT ";Password;", TGT registerPassword
          )

--[Login and Registration Interface]--
{- BOX <PropertyButton> -- is a custom HTML Template (i.e. it is in the local templates/views directory)
   [ disabled : <expr1> -- The button is disabled when `expr1` has one or more target atoms.
   , property : <expr2> -- `expr2` **must be a [PROP]-type relation**; it gets populated whenever the button is clicked. 
   ]
-}

INTERFACE "Login/Register": '_SESSION'[SESSION] cRud BOX <ROWSNL>
   [ "Login": '_SESSION'-(sessionAccount;sessionAccount~) cRud BOX <ROWSNL>
      [ "Login": I cRud BOX <HCOLS>
         [ "Userid": loginUserid cRUd
         , "Password": loginPassword crUd -- crUd is needed for Passwords
         , " ": I-sessionLoginAssist cRud BOX <COLSNL> --$Login support for demonstrations and/or development
            [ "Show accounts to login with": I BOX <PropertyButton> 
               [ property : sessionLoginAssist cRUd 
               , disabled : V[SESSION]-(V;I[Account];V) cRud
               ]
            ]
         ]
      ]   
--$Login support for demonstrations and/or development
   , "LoginAssist" {- FOR Developer -}: sessionLoginAssist cRud BOX <COLSNL>
      [ "Hide accounts": I BOX <PropertyButton> [ property : sessionLoginAssist cRUd ]
      , "List of accounts": V[SESSION*Account] cRud BOX <SHCOLS>
         [ "Userid": accUserid cRud
         , "Organization": accOrg cRud
         , "Person": accPerson cRud
         , "Login": I BOX <PropertyButton> [ property : autoLoginAccount cRUd ]
         ]
      ]   
--$End of login support for demonstrations and/or development
   , "Registration": ('_SESSION'-(sessionAccount;sessionAccount~))-sessionLoginAssist cRud BOX <ROWSNL>
      [ "Register": I cRud BOX <HCOLS>
         [ "Userid" : loginUserid cRUd
         , "Password" : registerPassword crUd -- crUd is needed for Passwords
         , "Your (full) name" : sessionPersonRef cRUd
         , "Your organization" : registerOrgRef cRUd
         , "Register" : I BOX <PropertyButton>
            [ disabled : '_SESSION' - -- The button is disabled when we have a session without
                         (  loginUserid;loginUserid~           -- a specified userid 
                         /\ registerPassword;registerPassword~ -- a specified  password
                         /\ sessionPersonRef;sessionPersonRef~ -- and a specified user's name.
                         )
            , property : loginCreateAccount cRUd 
            ]
         ]
      ]
   , "Show logged in user": I /\ sessionAccount;sessionAccount~ cRud BOX <ROWSNL>
      [ "Logout" : I BOX <PropertyButton> [ property : logoutRequest cRUd ]
      ]
   ]

ENDCONTEXT