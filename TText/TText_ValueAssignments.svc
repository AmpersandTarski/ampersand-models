CONTEXT TText_ValueAssignmentsService IN ENGLISH
{-This context deals with the (de)assignment of values to TTexts.
Whenever a change in the value is detected, an Assignment will be created that logs this event.
Thus, Assignments track any changes in the value of TTexts i.e. both assignments and deassignments of values. 
This is helpful if the system is required to respond to changes is assignments. 
For example, if a TText V1 depends on V2, and the value of V2 is changed,
then V1 may need to be recomputed.

Note: the latest/current (de)assignment of a TText is called the 'trace' of that TText
      (it can be found in the relation `ttTrace`).
-}

--[Assignments]--
CONCEPT Assignment "the registration of an event where either a TText was assigned a value, or its value was deleted"

RELATION ttTrace[TText*Assignment] [INJ,UNI,TOT] -- Latest/current assignment; it is TOT so that we can detect changes more easily
RELATION asmVar[Assignment*TText] [UNI,TOT] -- Every Assignment pertains to a specific TText
RELATION asmVal[Assignment*TTValue] [UNI] -- the value has been assigned to the Assignment's TText

RULE "If a TText has a value, the latest assignment of that TText must have assigned it": ttValue |- ttTrace;asmVal
RULE "If the latest assignment of a TText assigned a value, the TText must have that value": ttTrace;asmVal |- ttValue

-- Whenever the TText to which an Assignment pertains no longer exists, the Assignment must be deleted.
ROLE ExecEngine MAINTAINS "Delete obsolete Assignments"
RULE "Delete obsolete Assignments": I[Assignment] |- asmVar;asmVar~
VIOLATION (TXT "{EX} DelAtom;Assignment;", SRC I)

-- Whenever a TText has a value, an Assignment must exist that records the event that made this happen.
ROLE ExecEngine MAINTAINS "Assign new value to TTexts"
RULE "Assign new value to TTexts": ttValue |- ttTrace;asmVal
VIOLATION (TXT "{EX} NewStruct;Assignment"
--              ,TXT ";asmHasPred;Assignment;_NEW;Assignment;" SRC ttTrace
                ,TXT ";ttTrace;TText;", SRC I[TText], TXT ";Assignment;_NEW"
                ,TXT ";asmVal;Assignment;_NEW;TTValue;", TGT I
                ,TXT ";asmVar;Assignment;_NEW;TText;", SRC I[TText]
          )
-- Whenever a TText has no value, an Assignment must exist that records the event that made this happen.
ROLE ExecEngine MAINTAINS "Assign 'no value' to TTexts"
RULE "Assign 'no value' to TTexts": I[TText]-(ttValue;ttValue~) |- ttTrace;(I-(asmVal;asmVal~));ttTrace~
VIOLATION (TXT "{EX} NewStruct;Assignment"
--              ,TXT ";asmHasPred;Assignment;_NEW;Assignment;" SRC ttTrace
                ,TXT ";ttTrace;TText;", SRC I[TText], TXT ";Assignment;_NEW"
                ,TXT ";asmVar;Assignment;_NEW;TText;", SRC I[TText]
          )

--[Assignment History]--
RELATION asmHasPred[Assignment*Assignment] [UNI,INJ] -- (Src) Assignment has (Tgt) assignment as its predecessor

RULE "The trace of each TText starts with an assignment that has no successors": -(ttTrace;asmHasPred~)
RULE "Every assignment has a successor or represents the current value of a TText": V[ONE*Assignment];asmHasPred \/ V[ONE*TText];ttTrace
RULE "If one assignment precedes another, they affect the same TText": asmVar~;asmHasPred;asmVar |- I

ROLE ExecEngine MAINTAINS "Add to Assignments history"
RULE "Add to Assignments history": asmVar |- asmHasPred~;asmVar \/ ttTrace~
VIOLATION (TXT "{EX} InsPair;asmHasPred;Assignment;", TGT ttTrace, TXT ";Assignment;", SRC I)

ROLE ExecEngine MAINTAINS "Limit history size to 2 predecessors" -- i.e.: discard the third predecessor if it exists
RULE "Limit history size to 2 predecessors": asmHasPred;asmHasPred;asmHasPred |- -V
VIOLATION (TXT "{EX} DelAtom;Assignment;", TGT I) --}

ENDCONTEXT