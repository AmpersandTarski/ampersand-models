CONTEXT TParties IN ENGLISH
{-The purpose of this module is 
- to extend TTexts with the capability of referring to a so-called `TParty`, 
  i.e. a party that is also an actual user of the system, and 
- to provide a service that replaces any reference to a TParty in a ttTemplate phrase 
  with (a representation of) the Account that has succesfully claimed to be that TParty
  (all within the Scope in which both the TText and TParty reside)

To show what this means, consider a system that supports the treatment of damage claims.
In such a s sytem, every claim (case) is represented by a Scope.
Suppose that within such a Scope 'Claim1234', a TText exists with `ttTemplate` phrase:
"The [list of damages] has been validated by [expert]".
Now, a user logs in (with account 'Acc1234', which is registered to Mr. E.X. Pert).
Then, the user succesfully claims to be the TParty named "expert", which
means that relation `tpartyAccount` is populated with ("Claim1234", "Acc1234").
The effect is that every occurrence of the placeholder '[expert]' 
(that is: within a TText that is in the Scope 'Claim1234')
will be replaced with the text "Mr. E.X. Pert". Thus, 
the `ttInstance` associated with the aforementioned ttTemplate phrase thus reads:
"The [list of damages] has been validated by Mr. E.X. Pert"

**How to get this to work:**
1. Make sure that you populate the relation `ttValSupName` with pairs (TText,TTName), at least one for each TText
2. Mention 
-}
--[TText extensions: ValueSuppliers]--

INCLUDE "../TText/TText_Basics.adl" -- make sure `ttValSupName` is defined

CONCEPT TParty "a party that uses the system and may be mentioned in a TText"
CLASSIFY TParty ISA TText
tPartyReqdOrg  :: TParty * Organization      -- The organization to which a TParty instance must belong
tPartyAcc      :: TParty * Account [UNI]     -- The account that instantiates the TParty

RELATION ttValSupName[TText*TTName] -- The ttValue of the SRC TText must be supplied by the TParty whose TTName is specified as TGT
RELATION ttValSupplier[TText*TParty] -- The ttValue of the SRC TText must be supplied by the (TGT) TParty

RULE "TParties designated to (a) specific organization(s) may only be instantiated by a user of such an organization":
   (I /\ tPartyReqdOrg;tPartyReqdOrg~);tPartyAcc |- tPartyReqdOrg;accOrg~
--RULE "TParty templates cannot be assigned accounts": I-tPartyIsaCasus |- -(tPartyAcc;tPartyAcc~)

ROLE ExecEngine MAINTAINS "The TTName of a ttValSupName must refer to a TParty"
RULE "The TTName of a ttValSupName must refer to a TParty": 
   ttScope;ttScope~ /\ ttValSupName;ttName~ |- V[TText*TParty]
VIOLATION (TXT "{EX} SetConcept;TText;TParty;", TGT I[TText])
ROLE ExecEngine MAINTAINS "The TTName of a TParty must be used in a ttValSupName"
RULE "The TTName of a TParty must be used in a ttValSupName": 
   I[TParty];ttName |- V;ttValSupName
VIOLATION (TXT "{EX} ClearConcept;TParty;", SRC I[TParty])

--[Creating and deleting TParties, as specified by ttValSupName]--
ROLE ExecEngine MAINTAINS "Create TParty as specified by ttValSupName"
RULE "Create TParty as specified by ttValSupName": ttScope~;ttValSupName |- ttScope~;ttName
VIOLATION (TXT "{EX} NewStruct;TParty"
              ,TXT ";ttScope;TParty;_NEW;Scope;", SRC I
              ,TXT ";ttName;TParty;_NEW;TTName;", TGT I
          )

{-- We do not discard TParties, because the condition upon which to do so is hard to write and/or modularize.
--  For example, you need a `tPartyOwner` to prevent a TParty from being discarded when it is being created in a form while it is not yet used by a TText.
ROLE ExecEngine MAINTAINS "Discard TParties that are not used"
RULE "Discard TParties that are not used":
   {-tParty-}ttScope |-                      -- a TParty is discarded, unless
        {-tParty-}ttIsaCC;{-tParty-}ttScope;scopeIII -- it is a legitimate copy of another TParty
     \/ (ttTParty~ \/ {-tParty-}ttName;ttValSupName~);ttScope -- or it is refered to by a TText of the Scope 
     \/ tPartyOwner;sessionAccount~;V   -- or it is occupied by the sessionAccount (necessary while creating TParties in an INTERFACE, where it may not be assigned yet to a TText)
VIOLATION (TXT "{EX} DelAtom;TParty;", SRC I) --}

--[Maintain `ttValSupplier` link between TText and the TParty that is expected to provide its value]--
ROLE ExecEngine MAINTAINS "Create link between TText and the TParty that must provide its value"
RULE "Create link between TText and the TParty that must provide its value": 
  (ttScope;ttScope~ /\ ttValSupName;ttName~);I[TParty] |- ttValSupplier
VIOLATION (TXT "{EX} InsPair;ttValSupplier;TText;", SRC I[TText], TXT ";TParty;", TGT I[TParty])
ROLE ExecEngine MAINTAINS "Delete link between TText and the TParty that must provide its value"
RULE "Delete link between TText and the TParty that must provide its value": 
  ttValSupplier |- ttScope;ttScope~ /\ ttValSupName;ttName~
VIOLATION (TXT "{EX} DelPair;ttValSupplier;TText;", SRC I[TText], TXT ";TParty;", TGT I[TParty])

--[TParty value provisioning]--
-- The provisioning of TParty values depends on SIAM features, and hence:
INCLUDE "../TText/TParty_SIAM_Extensions.adl" -- SIAM Extensions for TParties (e.g. TParty Ownership)

ENDCONTEXT