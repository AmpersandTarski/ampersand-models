CONTEXT TParties IN ENGLISH
{-The purpose of this module is 
- to extend TTexts with the capability of referring to a so-called `TParty`, 
  i.e. a party that is also an actual user of the system, and 
- to provide a service that replaces any reference to a TParty in a ttTemplate phrase 
  with (a representation of) the Account that has succesfully claimed to be that TParty
  (all within the Scope in which both the TText and TParty reside)

To show what this means, consider a system that supports the treatment of damage claims.
In such a s sytem, every claim (case) is represented by a Scope.
Suppose that within such a Scope 'Claim1234', a TText exists with `ttTemplate` phrase:
"The [list of damages] has been validated by [expert]".
Now, a user logs in (with account 'Acc1234', which is registered to Mr. E.X. Pert).
Then, the user succesfully claims to be the TParty named "expert", which
means that relation `tpartyAccount` is populated with ("Claim1234", "Acc1234").
The effect is that every occurrence of the placeholder '[expert]' 
(that is: within a TText that is in the Scope 'Claim1234')
will be replaced with the text "Mr. E.X. Pert". Thus, 
the `ttInstance` associated with the aforementioned ttTemplate phrase thus reads:
"The [list of damages] has been validated by Mr. E.X. Pert"

**How to get this to work:**
1. Make sure that you populate the relation `ttValSupName` with pairs (TText,TTName), at least one for each TText
2. Mention 
-}
--[TText extensions: ValueSuppliers]--

INCLUDE "./TText_Basics.adl" -- make sure `ttValSupName` is defined

CONCEPT TParty "a party that uses the system and may be mentioned in a TText"
CLASSIFY TParty ISA TText
tPartyReqdOrg  :: TParty * Organization      -- The organization to which a TParty instance must belong
tPartyAcc      :: TParty * Account [UNI]     -- The account that instantiates the TParty

RELATION ttValSupName[TText*TTName] -- The ttValue of the SRC TText must be supplied by the TParty whose TTName is specified as TGT
RELATION ttValSupplier[TText*TParty] -- The ttValue of the SRC TText must be supplied by the (TGT) TParty

RULE "TParties designated to (a) specific organization(s) may only be instantiated by a user of such an organization":
   (I /\ tPartyReqdOrg;tPartyReqdOrg~);tPartyAcc |- tPartyReqdOrg;accOrg~
--RULE "TParty templates cannot be assigned accounts": I-tPartyIsaCasus |- -(tPartyAcc;tPartyAcc~)

ROLE ExecEngine MAINTAINS "The TTName of a ttValSupName must refer to a TParty"
RULE "The TTName of a ttValSupName must refer to a TParty": 
   V[TText] /\ ttScope;ttScope~ /\ ttValSupName;ttName~ |- V[TText*TParty]
VIOLATION (TXT "{EX} SetConcept;TText;TParty;", TGT I[TText])
ROLE ExecEngine MAINTAINS "The TTName of a TParty must be used in a ttValSupName"
RULE "The TTName of a TParty must be used in a ttValSupName": 
   I[TParty];ttName |- V[TParty*TText];ttValSupName
VIOLATION (TXT "{EX} ClearConcept;TParty;", SRC I[TParty])

--[Creating and deleting TParties, as specified by ttValSupName]--
ROLE ExecEngine MAINTAINS "Create TParty as specified by ttValSupName"
RULE "Create TParty as specified by ttValSupName": ttScope~;ttValSupName |- ttScope~;ttName
VIOLATION (TXT "{EX} NewStruct;TParty"
              ,TXT ";ttScope;TParty;_NEW;Scope;", SRC I
              ,TXT ";ttName;TParty;_NEW;TTName;", TGT I
          )

{-- We do not discard TParties, because the condition upon which to do so is hard to write and/or modularize.
--  For example, you need a `tPartyOwner` to prevent a TParty from being discarded when it is being created in a form while it is not yet used by a TText.
ROLE ExecEngine MAINTAINS "Discard TParties that are not used"
RULE "Discard TParties that are not used":
   {-tParty-}ttScope |-                      -- a TParty is discarded, unless
        {-tParty-}ttICO;{-tParty-}ttScope;scopeIII -- it is a legitimate copy of another TParty
     \/ (ttTParty~ \/ {-tParty-}ttName;ttValSupName~);ttScope -- or it is refered to by a TText of the Scope 
     \/ tPartyOwner;sessionAccount~;V   -- or it is occupied by the sessionAccount (necessary while creating TParties in an INTERFACE, where it may not be assigned yet to a TText)
VIOLATION (TXT "{EX} DelAtom;TParty;", SRC I) --}

--[Determine the text by which the placeholder [<TParty>] is replaced]-- i.e.: determine the way to refer to a TParty (actor)
-- Perhaps this should be moved to `SIAM_TText_Extensions.adl`, because the actual TTValue to be used may depend on the actual application.

INCLUDE "./SIAM_Module.adl" -- Make sure relations `accOrg` and `accPersonRef` are defined.

CLASSIFY PersonRef ISA TTValue

ROLE ExecEngine MAINTAINS "The value of a TParty (TText) is the PersonRef of the Account of that TParty"
RULE "The value of a TParty (TText) is the PersonRef of the Account of that TParty":
  tPartyAcc;accPersonRef |- ttValue
VIOLATION (TXT "{EX} InsPair;ttValue;TText;", SRC I[TText], TXT ";TTValue;", TGT I[TTValue])

ROLE ExecEngine MAINTAINS "Clear TText value when its TParty is not instantiated"
RULE "Clear TText value when its TParty is not instantiated": 
  I[TParty];ttValue |- tPartyAcc;accPersonRef
VIOLATION (TXT "{EX} DelPair;ttValue;TText;", SRC I[TParty], TXT ";TTValue;", TGT I[TTValue])

--[Copying TParty extensions]--
-- Copying `tPartyReqdOrg`:
ROLE ExecEngine MAINTAINS "Create/Update copied tPartyReqdOrg"
RULE "Create/Update copied tPartyReqdOrg": I[TParty];ttICO;tPartyReqdOrg |- tPartyReqdOrg
VIOLATION (TXT "{EX} InsPair;tPartyReqdOrg;TText;", SRC I[TParty], TXT ";Organization;", TGT I)
ROLE ExecEngine MAINTAINS "Update deleted tPartyReqdOrg"
RULE "Update deleted tPartyReqdOrg": 
   I[TParty];ttICO;(I[TParty] - tPartyReqdOrg;tPartyReqdOrg~)
|- (I[TParty] - tPartyReqdOrg;tPartyReqdOrg~);ttICO
VIOLATION (TXT "{EX} DelPair;tPartyReqdOrg;TParty;", SRC I, TXT ";Organization;", SRC tPartyReqdOrg)

-- Copying `tPartyAcc`:
ROLE ExecEngine MAINTAINS "Create/Update copied tPartyAcc"
RULE "Create/Update copied tPartyAcc": I[TParty];ttICO;tPartyAcc |- tPartyAcc
VIOLATION (TXT "{EX} InsPair;tPartyAcc;TText;", SRC I[TParty], TXT ";Account;", TGT I)
ROLE ExecEngine MAINTAINS "Update deleted tPartyAcc"
RULE "Update deleted tPartyAcc": 
   I[TParty];ttICO;(I[TParty] - tPartyAcc;tPartyAcc~)
|- (I[TParty] - tPartyAcc;tPartyAcc~);ttICO
VIOLATION (TXT "{EX} DelPair;tPartyAcc;TParty;", SRC I, TXT ";Account;", SRC tPartyAcc)

--[Copying TText extensions]--
-- Copying `ttValSupName`:
ROLE ExecEngine MAINTAINS "Create/Update copied ttValSupName"
RULE "Create/Update copied ttValSupName": ttICO;ttValSupName |- ttValSupName
VIOLATION (TXT "{EX} InsPair;ttValSupName;TText;", SRC I[TText], TXT ";TTName;", TGT I)
ROLE ExecEngine MAINTAINS "Update deleted ttValSupName"
RULE "Update deleted ttValSupName": ttICO;(I - ttValSupName;ttValSupName~) |- (I - ttValSupName;ttValSupName~);ttICO
VIOLATION (TXT "{EX} DelPair;ttValSupName;TText;", SRC I, TXT ";TTName;", SRC ttValSupName)

-- Copying `ttValSupplier`:
ROLE ExecEngine MAINTAINS "Create/Update copied ttValSupplier" -- NOTE that a different type of copying is needed here!
RULE "Create/Update copied ttValSupplier": ttScope;ttScope~ /\ ttICO;ttValSupplier;ttICO~ |- ttValSupplier
VIOLATION (TXT "{EX} InsPair;ttValSupplier;TText;", SRC I[TText], TXT ";TParty;", TGT I[TParty])
ROLE ExecEngine MAINTAINS "Update deleted ttValSupplier"
RULE "Update deleted ttValSupplier": ttICO;(I - ttValSupplier;ttValSupplier~) |- (I - ttValSupplier;ttValSupplier~);ttICO
VIOLATION (TXT "{EX} DelPair;ttValSupplier;TText;", SRC I, TXT ";TParty;", SRC ttValSupplier)

ENDCONTEXT