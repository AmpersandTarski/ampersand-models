CONTEXT TParties IN ENGLISH
{-The purpose of this module is 
- to extend TTexts with the capability of referring to a so-called `TParty`, 
  i.e. a party that is also an actual user of the system, and 
- to provide a service that replaces any reference to a TParty in a ttTemplate phrase 
  with (a representation of) the Account that has succesfully claimed to be that TParty
  (all within the Scope in which both the TText and TParty reside)

To show what this means, consider a system that supports the treatment of damage claims.
In such a s sytem, every claim (case) is represented by a Scope.
Suppose that within such a Scope 'Claim1234', a TText exists with `ttTemplate` phrase:
"The [list of damages] has been validated by [expert]".
Now, a user logs in (with account 'Acc1234', which is registered to Mr. E.X. Pert).
Then, the user succesfully claims to be the TParty named "expert", which
means that relation `tpartyAccount` is populated with ("Claim1234", "Acc1234").
The effect is that every occurrence of the placeholder '[expert]' 
(that is: within a TText that is in the Scope 'Claim1234')
will be replaced with the text "Mr. E.X. Pert". Thus, 
the `ttInstance` associated with the aforementioned ttTemplate phrase thus reads:
"The [list of damages] has been validated by Mr. E.X. Pert"

How to get this to work:
1. Make sure that you populate the relation `ttValSupName` with pairs (TText,TTName), at least one for each TText
2. Mention 
-}
--**Do we want to make `ttTemplateDefiner[TText*TParty]`** the TParty that supplies the value for that TText's `ttTemplate`? Doing so may allow us to get rid of or redefine `ttOwner`.
--[TText extensions: ValueSuppliers]--

INCLUDE "../TText/TText_Basics.adl" -- make sure `ttValSupName` is defined

{- **We no longer use the concept TParty as a specialization of TText**, because it gives all sorts of problems:
1. (temporal) problems when copying stuff. 
   For example, in order to copy the tPartyAcc[TParty*Account], the TText must be a TParty.
   However, in order to ascertain that a TText is a TParty, 
   its name must be referred to as a ttValSupName of some (other) TText.
   When copying TTexts, it takes several runs to do so.
   In the meantime, cleaning-up rules may fire. 
   For example, if there is a rule that says that a TText can be deleted
   when its tValSupplier (which is a TParty) has left, 
   that TText will be deleted before the TParty can be created.
2. There is a performance problem with rules that need conversions between
   Classifications - see ticket #628
   
-}
ttIsaTParty    :: TText * TText [PROP]  -- A TText may have the property that it describes a `TParty`, i.e. a party that uses the system and may be mentioned in a TText
tPartyReqdOrg  :: TText * Organization  -- The organization to which a TParty instance must belong
tPartyAcc      :: TText * Account [UNI] -- The account that instantiates the TParty

ttValSupName   :: TText * TTName -- The ttValue of the SRC TText must be supplied by the TParty whose TTName is specified as TGT
ttValSupplier  :: TText * TText  -- The ttValue of the SRC TText must be supplied by the (TGT) TParty
ttValSupAcc    :: TText * Account -- The Account that may supply values for the SRC TText

RULE "'tPartyReqdOrg' must have a TParty-type atom as its source": tPartyReqdOrg |- ttIsaTParty;tPartyReqdOrg
RULE "'tPartyAcc' must have a TParty-type atom as its source": tPartyAcc |- ttIsaTParty;tPartyAcc
RULE "'ttValSupplier' must have a TParty-type atom as its target": ttValSupplier |- ttValSupplier;ttIsaTParty
RULE "TParty-type atoms may not have (an explicit) value supplier": ttIsaTParty;ttValSupplier |- -V

RULE "TParties designated to (a) specific organization(s) may only be instantiated by a user of such an organization":
   (I /\ tPartyReqdOrg;tPartyReqdOrg~);tPartyAcc |- tPartyReqdOrg;accOrg~

RULE "Value suppliers can only supply values for TTexts in the same scope, and vice versa": ttValSupplier |- ttScope;ttScope~

ROLE ExecEngine MAINTAINS "Determine ttIsaTParty property for TTexts whose TTName is the ttValSupName of some (other) TText"
RULE "Determine ttIsaTParty property for TTexts whose TTName is the ttValSupName of some (other) TText": 
   I[TText] /\ ttName;ttValSupName~;ttScope;ttScope~ |- ttIsaTParty
VIOLATION (TXT "{EX} InsPair;ttIsaTParty;TText;", SRC I[TText], TXT ";TText;", TGT I[TText])
ROLE ExecEngine MAINTAINS "Revoke ttIsaTParty property for TTexts whose TTName is the ttValSupName of some (other) TText"
RULE "Revoke ttIsaTParty property for TTexts whose TTName is the ttValSupName of some (other) TText": 
   ttIsaTParty |- ttName;ttValSupName~;ttScope;ttScope~
VIOLATION (TXT "{EX} DelPair;ttIsaTParty;TText;", SRC I[TText], TXT ";TText;", TGT I[TText])

ROLE ExecEngine MAINTAINS "Auto InsPair ttValSupAcc"
RULE "Auto InsPair ttValSupAcc": ttValSupplier;tPartyAcc |- ttValSupAcc
VIOLATION (TXT "{EX} InsPair;ttValue;TText;", SRC I, TXT ";TTValue;", TGT I)
ROLE ExecEngine MAINTAINS "Auto DelPair ttValSupAcc"
RULE "Auto DelPair ttValSupAcc": ttValSupAcc |- ttValSupplier;tPartyAcc
VIOLATION (TXT "{EX} DelPair;ttValue;TText;", SRC I, TXT ";TTValue;", TGT I)

--[Creating and deleting TParties, as specified by ttValSupName]--
ROLE ExecEngine MAINTAINS "Create TParty as specified by ttValSupName"
RULE "Create TParty as specified by ttValSupName": ttScope~;ttValSupName |- ttScope~;ttName
VIOLATION (TXT "{EX} NewStruct;TText"
              ,TXT ";ttIsaTParty;TText;_NEW;TText;_NEW"
              ,TXT ";ttScope;TText;_NEW;Scope;", SRC I
              ,TXT ";ttName;TText;_NEW;TTName;", TGT I
          )

{-- We do not discard TParties, because the condition upon which to do so is hard to write and/or modularize.
--  For example, you need a `ttOwner` to prevent a TParty from being discarded when it is being created in a form while it is not yet used by a TText.
ROLE ExecEngine MAINTAINS "Discard TParties that are not used"
RULE "Discard TParties that are not used":
   ttScope |-                      -- a TParty is discarded, unless
        ttIsaCC;ttScope;scopeIII -- it is a legitimate copy of another TParty
     \/ (ttTParty~ \/ ttName;ttValSupName~);ttScope -- or it is refered to by a TText of the Scope 
     \/ ttOwner;sessionAccount~;V   -- or it is occupied by the sessionAccount (necessary while creating TParties in an INTERFACE, where it may not be assigned yet to a TText)
VIOLATION (TXT "{EX} DelAtom;TParty;", SRC I) --}

--[Maintain `ttValSupplier` link between TText and the TParty that is expected to provide its value]--
ROLE ExecEngine MAINTAINS "Create link between TText and the TParty that must provide its value"
RULE "Create link between TText and the TParty that must provide its value": 
  (ttScope;ttScope~ /\ ttValSupName;ttName~);ttIsaTParty |- ttValSupplier
VIOLATION (TXT "{EX} InsPair;ttValSupplier;TText;", SRC I[TText], TXT ";TText;", TGT I[TText])
ROLE ExecEngine MAINTAINS "Delete link between TText and the TParty that must provide its value"
RULE "Delete link between TText and the TParty that must provide its value": 
  ttValSupplier |- (ttScope;ttScope~ /\ ttValSupName;ttName~);ttIsaTParty
VIOLATION (TXT "{EX} DelPair;ttValSupplier;TText;", SRC I[TText], TXT ";TText;", TGT I[TText])

--[TParty value provisioning]--
-- The provisioning of TParty values depends on SIAM features, and hence:
INCLUDE "../TText/TParty_SIAM_Extensions.adl" -- SIAM Extensions for TParties (e.g. TParty Ownership)

ENDCONTEXT