CONTEXT TText IN ENGLISH
{-This file provides an example of how you can include (a selection of features) from the TText Module-}

--[Imported Modules]--
--**RJ: Scopes worden op termijn een zelfstandige module. Nu hou ik ze hier nog voor mijn gemak**
--INCLUDE "./Scopes_Module.adl"
INCLUDE "./Scopes_Ontology.adl"               -- Scoping basics
--INCLUDE "./SIAM_Module.adl"

--[The following files MUST be included]--
INCLUDE "./TText_Ontology.adl"                -- TText basics
INCLUDE "./TText_PlaceholderExtraction.svc"   -- Service that extracts placeholders from template texts and maintains the corresponding administration
INCLUDE "./TText_PlaceholderReplacement.svc"  -- Service that replaces placeholders in instance texts with the values assigned to the referred-to TTexts

--[Extension services (optional)]--
INCLUDE "./TText_ValueAssignments.svc"        -- Service that keeps track of changes in TText value-assignments
INCLUDE "./TText_ValueComputations.svc"       -- Service that allows values of TTexts to be computed (manually (later perhaps also automatically))

--[Copying stuff]--
--**RJ: Als er andere content in Scopes komt te hangen, kan je hier de service laden die dit meekopieert.**
INCLUDE "./Scopes_Copying.svc"                 -- Service that enables various ways of copying Scopes and their contents
INCLUDE "./TText_Copying.svc"                  -- Service that copies TText contents of a scope

--[Example interfaces (optional)]--
INCLUDE "./TText_Basics.ifc"                  -- Simple Interfaces for TTExts
INCLUDE "./TText_ValueComputations.ifc"       -- Simple Interfaces for doing compuations

--[Stuff to look at]--
sessionAccount :: SESSION * Account [UNI]   -- Stub for SIAM; this is needed for the ScopeCopyintService.

{-- To ensure ownership of all Scopes, the following rule should be activated when SIAM is being used,
RULE "Every Scope must be owned": I[Scope] |- scopeOwner;scopeOwner~ --}

{-- Non-toplevel TTexts may be destroyed when they are no longer used. For general purposes, this rule is too restrictive. Therefore, we leave the destruction of TTexts to the application that uses it. The following rule is an example that destroys a TText if it is not used, and it is also not a the toplevel
ROLE ExecEngine MAINTAINS "Delete TText that are auto-created and no longer used"
RULE "Delete TText that are auto-created and no longer used": 
   I-ttTopLevel |- ttName;ttPlaceholders~;ttScope;ttScope~ 
VIOLATION (TXT "{EX} DelAtom;TText;", SRC I) --}

ENDCONTEXT