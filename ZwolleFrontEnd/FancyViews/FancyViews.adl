CONTEXT FancyViews IN ENGLISH
{- Example for the new view functionality
-}

RELATION dummy[SESSION*SESSION]


SPEC Color ISA String

RELATION gName[Ghost*String] [UNI,TOT] = [("ghost_1","Blinky"); ("ghost_2", "Pinky"); ("ghost_3","Inky"); ("ghost_4", "Clyde") ]
RELATION gColor[Ghost*Color] [UNI,TOT]  = [("ghost_1","red")   ; ("ghost_2", "pink");  ("ghost_3","cyan"); ("ghost_4", "orange")]
RELATION gIsEdible[Ghost*BOOL] [UNI,TOT]   = [("ghost_1","false") ; ("ghost_2", "false"); ("ghost_3","false"); ("ghost_4", "true") ]
RELATION gCharacter[Ghost*String] [UNI,TOT] = [("ghost_1","Shadow"); ("ghost_2", "Speedy"); ("ghost_3","Bashful"); ("ghost_4", "Pokey") ]

-- Old syntax:
--VIEW ColoredGhostOld: Ghost(TXT "Name:", ghostName: gName, TXT "Color:", ghostColor: gColor)

VIEW ColoredGhost: Ghost DEFAULT { ghostName: gName, ghostCharacter: gCharacter, ghostColor: gColor, ghostIsEdible: gIsEdible }
HTML TEMPLATE "ColoredGhost.html"
ENDVIEW

VIEW StringGhost: Ghost { ghostName: gName, ghostCharacter: gCharacter }
HTML TEMPLATE "StringGhost.html"
ENDVIEW

VIEW YesNoBool: BOOL { value: I }
HTML TEMPLATE "YesNoBool.html"
ENDVIEW

VIEW QuotedString: String DEFAULT { value: I }
HTML TEMPLATE "QuotedString.html"
ENDVIEW

INTERFACE GhostlyInterface (gIsEdible) : I[Ghost]
COLS [ "Ghost": I <ColoredGhost>
     , "Is edible switch": gIsEdible <YesNoBool>
     , "Is edible": gIsEdible -- gets default view for BOOL (builtin, maybe we want a name to refer to it, or include it in a prelude)
     , "Color" : gColor       -- gets default view for superconcept String: <QuotedString>
     ]


INTERFACE Main (gIsEdible) FOR Dummy : I[SESSION]
BOX
  [ "Fancy ghosts" : V[SESSION*Ghost]
     INTERFACE GhostlyInterface
  , "String ghosts " : V[SESSION*Ghost]<StringGhost>
  ]

INTERFACE OldFE_Main : I[ONE] -- for old front-end
BOX
  [ "Ghosts" : V[ONE*Ghost]
  ]
ENDCONTEXT
