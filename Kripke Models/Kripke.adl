CONTEXT Kripke
PURPOSE CONTEXT Kripke MARKDOWN
{+ This model was built as an exercise to understand the paper [Appendix A: Kripke models for modal logic](https://plato.stanford.edu/entries/dynamic-epistemic/appendix-A-kripke.html)
+}

PATTERN Basic
RELATION agent[Arrow*Agent] [UNI,TOT]
RELATION entertain[Arrow*World] [UNI,TOT]
RELATION actual[Arrow*World] [UNI,TOT]
RELATION fact[Proposition*World]
RELATION know[Agent*Proposition]
RULE know = entertain~;agent \ fact~
ENDPATTERN

PATTERN Example
POPULATION agent[Arrow*Agent] CONTAINS
  [("p0","a"),("p1","a"),("p2","a"),("p3","a"),("p4","b"),("p5","b"),("p6","b"),("p7","b")]
POPULATION entertain CONTAINS
  [("p0","w"),("p1","v"),("p2","w"),("p3","v"),("p4","w"),("p5","v"),("p6","w"),("p7","v")]
POPULATION actual CONTAINS
  [("p0","w"),("p1","w"),("p2","v"),("p3","v"),("p4","w"),("p5","w"),("p6","v"),("p7","v")]
POPULATION fact CONTAINS
  [("p","w"),("q","w"),("q","v")]
POPULATION know CONTAINS
  [("a","q"),("b","q")]

POPULATION model CONTAINS
  [("p0","M0"),("p1","M0"),("p2","M0"),("p3","M0"),("p4","M0"),("p5","M0"),("p6","M0"),("p7","M0")]
POPULATION point CONTAINS
  [("M0","w")]
POPULATION holds CONTAINS
  [("M0","p"),("M0","q")]
ENDPATTERN

PATTERN Formulas
CLASSIFY Formula ISA Proposition
CLASSIFY Ground, Conjunction, Negation, Modal ISA Formula
RELATION lft[Conjunction*Formula] [UNI,TOT]
RELATION rht[Conjunction*Formula] [UNI,TOT]
RELATION arg[Negation*Formula] [UNI,TOT]
RELATION agent[Modal*Agent] [UNI,TOT]
RELATION stmt[Modal*Formula] [UNI,TOT]
RULE I[Conjunction];fact = lft;fact /\ rht;fact
RULE I[Negation];arg;fact;point~ = V[Negation*KModel]-fact;point~
RULE I[Modal];(stmt;fact/\agent;agent~;actual);point~ = I[Modal];stmt;fact;entertain~;actual;point~
ENDPATTERN

PATTERN "Kripke models"
RELATION model[Arrow*KModel] [UNI,TOT]
RELATION point[KModel*World] [UNI]
RELATION holds[KModel*Formula]
RULE holds = point;fact~
ENDPATTERN

PATTERN Exercise
POPULATION lft CONTAINS [("f0","p")]
POPULATION rht CONTAINS [("f0","f1")]
POPULATION stmt CONTAINS [("f1","p")]
POPULATION agent[Modal*Agent] CONTAINS [("f1","a")]

{-
POPULATION stmt CONTAINS [("f2","f3")]
POPULATION agent[Modal*Agent] CONTAINS [("f2","b")]
POPULATION arg CONTAINS [("f3","f4")]
POPULATION stmt CONTAINS [("f4","p")]
POPULATION agent[Modal*Agent] CONTAINS [("f4","a")]
-}

ENDPATTERN
ENDCONTEXT