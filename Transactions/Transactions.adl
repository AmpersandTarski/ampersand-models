CONTEXT Transactions MARKDOWN

PURPOSE CONTEXT Transactions
{+
In globally distributed information systems such as Netflix and Amazon.com, the store in which data resides has become less relevant.
This requires rethinking the concept of a transaction.
Ideas such as commit, rollback, or ACID-transaction are not so obvious anymore.
This pattern attempts to develop a theory that is independent of stores in which data resides.

Change is the essence of a transaction.
+}

PATTERN States
CONCEPT State "The state of an information system at a given point in time contains a set (of things), which represents the contents (data) in that information system."
CONCEPT Event "An event is a change of the state of an information system."
CONCEPT Item "An item is a thing that resides in an information system. Items are the elements of the state of a system."

PURPOSE CONCEPT Event
{+Each event yields a new state.
To identify Events with states means that the creation of a new event
implicitly creates a new state. This simplifies the theory, because relations `to[Event*State]`
and `from[Event*State]` come together in one relation `pred[Event*State]`.
+}
CLASSIFY Event ISA State

RELATION pred[Event*State]
RELATION elem[State*Item]
RELATION ins[Event*Item]
RELATION del[Event*Item]

RULE del |-   pred;elem
MESSAGE "Cannot delete elements that do not exist. (click to see elements)"
VIOLATION (TGT I)
RULE ins |- -(pred;elem)
MESSAGE "Cannot insert elements that exist already. (click to see elements)"
VIOLATION (TGT I)
RULE ins~;pred;pred~;del \/ del~;pred;pred~;ins |- -I
VIOLATION (TXT "Conflict: trying to insert and delete ", TGT I, TXT " in this commit.")
--alternative formulation of this rule: RULE pred;pred~ |- ins;-I;del~ /\ del;-I;ins~

ROLE ExecEngine MAINTAINS IncrState, DecrState
RULE IncrState : (I[Event]-I[EndTransaction]);(pred;elem\/ins)-del |- elem
   VIOLATION (TXT "{EX} InsPair;elem;State;", SRC I[State], TXT ";Item;", TGT I)
RULE DecrState : elem |- -I[Event]/del~
   VIOLATION (TXT "{EX} DelPair;elem;State;", SRC I, TXT ";Item;", TGT I)

ENDPATTERN

PURPOSE PATTERN Transactions
{+
+}
PATTERN Transactions
CONCEPT BeginTransaction "The beginning of a transaction is an event that precedes more than one state."
CLASSIFY BeginTransaction ISA Event
ROLE ExecEngine MAINTAINS beginTransaction
RULE beginTransaction : pred~;-I;pred/\I[Event] |- I[BeginTransaction]
   VIOLATION (TXT "{EX} InsAtom;BeginTransaction;", SRC I[Event])
CONCEPT EndTransaction "The end of a transaction is an event that succedes more than one state."
CLASSIFY EndTransaction ISA Event
ROLE ExecEngine MAINTAINS endTransaction
RULE endTransaction : pred;-I;pred~/\I[Event] |- I[EndTransaction]
   VIOLATION (TXT "{EX} InsAtom;EndTransaction;", SRC I[Event])

RELATION insCum[Event*Item]
RELATION delCum[Event*Item]
ROLE ExecEngine MAINTAINS resetInsCum, resetDelCum, composeInsCum, composeDelCum, MergeIncr, MergeDecr
RULE resetInsCum : I[BeginTransaction];insCum |- -V
   VIOLATION (TXT "{EX} DelPair;insCum;Event;", SRC I, TXT ";Item;", TGT I)
RULE resetDelCum : I[BeginTransaction];delCum |- -V
   VIOLATION (TXT "{EX} DelPair;delCum;Event;", SRC I, TXT ";Item;", TGT I)
RULE composeInsCum : (I[Event]-I[BeginTransaction]);((pred;insCum-ins)\/ins) |- insCum
   VIOLATION (TXT "{EX} InsPair;insCum;Event;", SRC I[Event], TXT ";Item;", TGT I)
RULE composeDelCum : (I[Event]-I[BeginTransaction]);(del\/pred;delCum) |- delCum
   VIOLATION (TXT "{EX} InsPair;delCum;Event;", SRC I[Event], TXT ";Item;", TGT I)
RULE MergeIncr : I[EndTransaction];(pred;elem\/insCum)-delCum |- elem
   VIOLATION (TXT "{EX} InsPair;elem;State;", SRC I[State], TXT ";Item;", TGT I)
RULE MergeDecr : elem |- (V[State*State] - I[EndTransaction])/delCum~
   VIOLATION (TXT "{EX} DelPair;elem;State;", SRC I[State], TXT ";Item;", TGT I)
ENDPATTERN

INTERFACE State : "_SESSION" cRud
TABS [ Events : V[SESSION*Event] CRuD
       COLS [ id :   I     cRud
            , pred : pred  CRUd
            , ins :  ins   CRUD
            , del :  del   CRUD
--            , insCum :  insCum   cRud
--            , delCum :  delCum   cRud
            , elem : elem  cRud
            ]
     , Transactions : V[SESSION*BeginTransaction]\/V[SESSION*EndTransaction] cRud
       COLS [ id :   I[Event]     cRud
            , pred :      pred  CRUd
            , inserted :  insCum   cRud
            , deleted :   delCum   cRud
            , elem :      elem  cRud
            ]
     ]

ENDCONTEXT