CONTEXT Transactions MARKDOWN

PURPOSE CONTEXT Transactions
{+
In globally distributed information systems such as Netflix and Amazon.com, the store in which data resides has become less relevant.
This requires rethinking the concept of a transaction.
Ideas such as commit, rollback, or ACID-transaction are not so obvious anymore.
This pattern attempts to develop a theory that is independent of stores in which data resides.

Change is the essence of a transaction.
+}

PATTERN Events
CONCEPT Event "An event is a change of the state of an information system."
CONCEPT Item "An item is a thing that resides in an information system. Items are the elements of the state of a system."

PURPOSE CONCEPT Event
{+Each event yields a new state.
To identify Events with states means that the creation of a new event
implicitly creates a new state. This simplifies the theory, because relations `to[Event*Event]`
and `from[Event*Event]` come together in one relation `pred[Event*Event]`.
+}

RELATION pred[Event*Event]
RELATION elem[Event*Item]
RELATION ins[Event*Item]
RELATION del[Event*Item]

RULE del |-   pred;elem
MESSAGE "Cannot delete elements that do not exist. (click to see elements)"
VIOLATION (TGT I)
RULE ins |- -(pred;elem)
MESSAGE "Cannot insert elements that exist already. (click to see elements)"
VIOLATION (TGT I)
RULE ins~;pred;pred~;del \/ del~;pred;pred~;ins |- -I
VIOLATION (TXT "Conflict: trying to insert and delete ", TGT I, TXT " in this commit.")
--alternative formulation of this rule: RULE pred;pred~ |- ins;-I;del~ /\ del;-I;ins~

ROLE ExecEngine MAINTAINS IncrEvent, DecrEvent
RULE IncrEvent : (I[Event]-I[EndTransaction]);((pred;elem\/ins)-del) |- elem
   VIOLATION (TXT "{EX} InsPair;elem;Event;", SRC I[Event], TXT ";Item;", TGT I)
RULE DecrEvent : elem |- ((pred;elem\/ins)-del)
   VIOLATION (TXT "{EX} DelPair;elem;Event;", SRC I[Event], TXT ";Item;", TGT I)

ENDPATTERN

PURPOSE PATTERN Transactions
{+
+}
PATTERN Transactions
CONCEPT BeginTransaction "The beginning of a transaction is an event that precedes more than one state."
CLASSIFY BeginTransaction ISA Event
CLASSIFY PushOut ISA Event
ROLE ExecEngine MAINTAINS beginTransaction
RULE beginTransaction : pred~;-I;pred/\I[Event] |- I[BeginTransaction]
   VIOLATION (TXT "{EX} InsAtom;BeginTransaction;", SRC I[Event])
CONCEPT EndTransaction "The end of a transaction is an event that succedes more than one state."
CLASSIFY EndTransaction ISA Event
ROLE ExecEngine MAINTAINS pushout1, pushout2 -- , pushout3, pushout4, pushout5
RULE pushout1 : (pred;-I;pred~/\I[Event]) - (I[Event]/\pred;I[PushOut];pred~) |- I[PushOut]
   VIOLATION (TXT "{EX} InsAtom;PushOut;", SRC I[Event]
             )
RULE pushout2 : (I[Event]-I[PushOut]);pred~;I[PushOut];pred;(I[Event]-I[PushOut])/\(V[Event]-I[Event])
                |-               pred;pred~;I[PushOut];pred;pred~                /\(V[Event]-I[Event])
   VIOLATION (TXT "{EX} NewStruct;Event;pred;Event;", SRC I[Event], TXT ";Event;_NEW"
             ,TXT "{EX} NewStruct;Event;pred;Event;", TGT I[Event], TXT ";Event;_NEW"
             )
--RULE pushout3 : pred;pred~;I[PushOut];pred;pred~/\(V[Event]-I[Event]) |- pred~;I[EndTransaction];pred
--   VIOLATION (TXT "{EX} NewStruct;EndTransaction"
--               ,TXT ";pred;Event;", SRC I,TXT ";EndTransaction;_NEW"
--               ,TXT ";pred;Event;", TGT I,TXT ";EndTransaction;_NEW"
--             )
--RULE pushout4 : ((pred;I[PushOut];pred~)/\-I[Event]);pred |- insCum;ins~
--   VIOLATION (TXT "{EX} InsPair;ins;Event;", TGT I[Event], TXT ";Item;", SRC insCum)
--RULE pushout5 : ((pred;I[PushOut];pred~)/\-I[Event]);pred |- delCum;del~
--   VIOLATION (TXT "{EX} InsPair;del;Event;", TGT I[Event], TXT ";Item;", SRC delCum)

RELATION insCum[Event*Item]
RELATION delCum[Event*Item]
ROLE ExecEngine MAINTAINS resetInsCum, resetDelCum, composeInsCum, composeDelCum -- , MergeIncr, MergeDecr
RULE resetInsCum : I[BeginTransaction];insCum |- -V
   VIOLATION (TXT "{EX} DelPair;insCum;Event;", SRC I, TXT ";Item;", TGT I)
RULE resetDelCum : I[BeginTransaction];delCum |- -V
   VIOLATION (TXT "{EX} DelPair;delCum;Event;", SRC I, TXT ";Item;", TGT I)
RULE composeInsCum : (I[Event]-I[BeginTransaction]);(pred;insCum\/ins) |- insCum
   VIOLATION (TXT "{EX} InsPair;insCum;Event;", SRC I[Event], TXT ";Item;", TGT I)
RULE composeDelCum : (I[Event]-I[BeginTransaction]);(pred;delCum\/del) |- delCum
   VIOLATION (TXT "{EX} InsPair;delCum;Event;", SRC I[Event], TXT ";Item;", TGT I)
--RULE MergeIncr : I[EndTransaction];pred;(elem\/insCum)-delCum |- elem
--   VIOLATION (TXT "{EX} InsPair;elem;Event;", SRC I[Event], TXT ";Item;", TGT I)
--RULE MergeDecr : elem |- (V[Event*Event] - I[EndTransaction])/delCum~
--   VIOLATION (TXT "{EX} DelPair;elem;Event;", SRC I[Event], TXT ";Item;", TGT I)
ENDPATTERN

INTERFACE Event : "_SESSION" cRud
TABS [ Events : V[SESSION*Event] CRuD
       COLS [ id :     I        cRud
            , pred :   pred     CRUd
            , succ :   pred~    CRUd
            , ins :    ins      CRUD
            , del :    del      CRUD
            , insCum : insCum   cRud
            , delCum : delCum   cRud
            , elem :   elem     cRud
            ]
     , PushOuts : V[SESSION*PushOut] cRud
       COLS [ id :       I[Event] cRud
            , pred :     pred     CRUd
            , predL :    pred~;pred-I CRUd
            , predR :    pred;pred~-I CRUd
            , succ :     pred~    CRUd
            , ins :      ins      CRUD
            , del :      del      CRUD
            , inserted : insCum   cRud
            , deleted :  delCum   cRud
            , elem :     elem     cRud
            ]
     , BeginTransactions : V[SESSION*BeginTransaction] cRud
       COLS [ id :       I[Event] cRud
            , pred :     pred     CRUd
            , inserted : insCum   cRud
            , deleted :  delCum   cRud
            , elem :     elem     cRud
            ]
     , EndTransactions : V[SESSION*EndTransaction] cRud
       COLS [ id :       I[Event] cRud
            , pred :     pred     CRUd
            , inserted : insCum   cRud
            , deleted :  delCum   cRud
            , elem :     elem     cRud
            ]
     ]

ENDCONTEXT