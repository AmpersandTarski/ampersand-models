CONTEXT Transactions MARKDOWN

PURPOSE CONTEXT Transactions
{+
In globally distributed information systems such as Netflix and Amazon.com, the store in which data resides has become less relevant.
This requires rethinking the concept of a transaction.
Ideas such as commit, rollback, or ACID-transaction are not so obvious anymore.
This pattern attempts to develop a theory that is independent of stores in which data resides.

Change is the essence of a transaction.
+}

PATTERN Events
CONCEPT Event "An event is a change of the state of an information system."
CONCEPT Item "An item is a thing that resides in an information system. Items are the elements of the state of a system."

PURPOSE CONCEPT Event
{+Each event yields a new state.
To identify Events with states means that the creation of a new event
implicitly creates a new state. This simplifies the theory, because relations `to[Event*Event]`
and `from[Event*Event]` come together in one relation `pred[Event*Event]`.
+}

RELATION pred[Event*Event]
RELATION elem[Event*Item]
RELATION ins[Event*Item]
RELATION del[Event*Item]

ROLE ExecEngine MAINTAINS IncrEvent, DecrEvent
RULE IncrEvent : (I[Event]-I[EndTransaction]);((pred;elem-del)\/ins) |- elem
   VIOLATION (TXT "{EX} InsPair;elem;Event;", SRC I[Event], TXT ";Item;", TGT I)
RULE DecrEvent : (I[Event]-I[EndTransaction]);elem |- (pred;elem-del)\/ins
   VIOLATION (TXT "{EX} DelPair;elem;Event;", SRC I[Event], TXT ";Item;", TGT I)
ENDPATTERN

PURPOSE PATTERN Transactions
{+
+}
PATTERN Transactions
CONCEPT BeginTransaction "The beginning of a transaction is an event that precedes more than one state."
CLASSIFY BeginTransaction ISA Event
ROLE ExecEngine MAINTAINS beginTransaction
RULE beginTransaction : pred~;-I;pred/\I[Event] |- I[BeginTransaction]
   VIOLATION (TXT "{EX} InsAtom;BeginTransaction;", SRC I[Event])
CONCEPT EndTransaction "The end of a transaction is an event that succedes more than one state."
CLASSIFY EndTransaction ISA Event
ROLE ExecEngine MAINTAINS endTransaction
RULE endTransaction : pred;-I;pred~/\I[Event] |- I[EndTransaction]
   VIOLATION (TXT "{EX} InsAtom;EndTransaction;", SRC I[Event])

RELATION insCum[Event*Item]
RELATION delCum[Event*Item]

ROLE ExecEngine MAINTAINS resetInsCum, resetDelCum
RULE resetInsCum : I[BeginTransaction];insCum |- -V
   VIOLATION (TXT "{EX} DelPair;insCum;Event;", SRC I, TXT ";Item;", TGT I)
RULE resetDelCum : I[BeginTransaction];delCum |- -V
   VIOLATION (TXT "{EX} DelPair;delCum;Event;", SRC I, TXT ";Item;", TGT I)

ROLE ExecEngine MAINTAINS composeInsCum, composeDelCum, restoreInsCum, restoreDelCum
RULE composeInsCum : (I[Event]-I[BeginTransaction]);((pred;insCum-del)\/ins) |- insCum
   VIOLATION (TXT "{EX} InsPair;insCum;Event;", SRC I[Event], TXT ";Item;", TGT I)
RULE composeDelCum : (I[Event]-I[BeginTransaction]);((pred;delCum\/del)-elem) |- delCum
   VIOLATION (TXT "{EX} InsPair;delCum;Event;", SRC I[Event], TXT ";Item;", TGT I)
RULE restoreInsCum : (I[Event]-I[BeginTransaction]);insCum |- (pred;insCum-del)\/ins
   VIOLATION (TXT "{EX} DelPair;insCum;Event;", SRC I[Event], TXT ";Item;", TGT I)
RULE restoreDelCum : (I[Event]-I[BeginTransaction]);delCum |- (pred;delCum\/del)-elem
   VIOLATION (TXT "{EX} DelPair;delCum;Event;", SRC I[Event], TXT ";Item;", TGT I)

ROLE ExecEngine MAINTAINS MergeIncr, MergeDecr
RULE conflicts : pred~;pred-I |- (insCum~\-I)/delCum
   VIOLATION (TXT "Conflict: event ", SRC I[Event], TXT " and Event ", TGT I, TXT " have overlapping elements.")
RULE MergeIncr : I[EndTransaction];(pred;elem-delCum)\/insCum |- elem
   VIOLATION (TXT "{EX} InsPair;elem;Event;", SRC I[Event], TXT ";Item;", TGT I)
RULE MergeDecr : I[EndTransaction];elem |- (pred;elem-delCum)\/insCum
   VIOLATION (TXT "{EX} DelPair;elem;Event;", SRC I[Event], TXT ";Item;", TGT I)
ENDPATTERN

INTERFACE Event : "_SESSION" cRud
TABS [ Events : V[SESSION*Event] CRuD
       COLS [ id :     I        cRud
            , succ :   pred~    CRUd
            , ins :    ins      CRUD
            , del :    del      CRUD
            , insCum : insCum   cRud
            , delCum : delCum   cRud
            , elem :   elem     cRud
            ]
     ]

ENDCONTEXT