CONTEXT "ButtonCRUD Test/Demo" IN ENGLISH 

INCLUDE "./XXXX.adl"

--[XXXX_ButtonCRUD - Switching between different portals]
-- 6. If you choose to use `INTERFACE "XXXXPortal"`, you must either
--    - use the conditional-compilation variable `NoXXXXHeaderBar`
--      which ensures that this interface will not be called/used.
--    - or you must create `INTERFACE "XXXXHeaderBar"`
--      This interface must provide a header/buttonbar for global navigation purposes.
--      It is particularly useful to populate this header/buttonbar with buttons 
--      that allow the user to switch between XXXXPortal, YYYYPortal, ZZZZPortal, etc.
--      Note that this file specifies `INTERFACE "GoToXXXXPortalButton"`, that contains a
--      single button that, when clicked, navigates the user to `INTERFACE "XXXXPortal"`.
--      Here is some example code for you to use and adapt in your application script:

ROLE ExecEngine MAINTAINS "Initialize sessionCurrentPortalIfc as XXXXPortal"
RULE "Initialize sessionCurrentPortalIfc as XXXXPortal": 
   (I - sessionCurrentPortalIfc;sessionCurrentPortalIfc~);sessionXXContext |- sessionXXContext;sfChangePortalToXXReq
VIOLATION (TXT "{EX} InsPair;sfChangePortalToXXReq;XXContext;", TGT I, TXT ";XXContext;", TGT I)

--[Switching between ButtonCRUDPortal and other portals (e.g. YYYYPortal or ZZZZPortal)]
-- The purpose of the following code is to allow applications to switch between the ButtonCRUDPortal as defined below
-- and other portals, e.g. a YYYYPortal or a ZZZZPortal that are defined elsewhere in the application.
sessionChangeToApplicationHomePortalReq :: SESSION * SESSION [PROP]
ROLE ExecEngine MAINTAINS "Service sessionChangeToApplicationHomePortalReq"
RULE "Service sessionChangeToApplicationHomePortalReq": sessionChangeToApplicationHomePortalReq |- -I
VIOLATION (TXT "{EX} DelPair;sessionChangeToApplicationHomePortalReq;SESSION;", SRC I, TXT ";SESSION;", TGT I
          ,TXT "{EX} InsPair;sessionCurrentPortalIfc;SESSION;", SRC I, TXT ";IfcName;/ButtonCRUDPortal"
          ,TXT "{EX} SetNavToOnCommit;/ButtonCRUDPortal"
          )
-- The below interface can be called e.g. from `INTERFACE "XXXXHeaderBar"` to navigate to the ButtonCRUDPortal
INTERFACE "GoToButtonCRUDPortal": I[SESSION] cRud BOX <DIV>
   [  "ButtonCRUDPortal": I cRud BOX <PROPBUTTON>
      [ property: sessionChangeToApplicationHomePortalReq cRUd
      , disabled: I /\ sessionCurrentPortalIfc;"/ButtonCRUDPortal";sessionCurrentPortalIfc~ cRud
      ]
   ]

--[Interfaces]
INTERFACE "ButtonCRUDPortal": sessionXXContext cRud BOX
[  "HEADERBAR": I[XXContext] INTERFACE "XXXXHeaderBar"
,  "XXContext": I[XXContext] cRud COLS
   [ "XXContextID": I cRud
   , "Create": sfCreateXXIsAllowed cRUd
   , "sfSelectedXX": I cRud BOX <CDIV>
      [ "XX": sfSelectedXX cRud
      , "Deassign": I cRud BOX <PROPBUTTON> 
         [ property: sfXXDeselectReq cRUd
         , disabled: I - sfSelectedXX;sfSelectedXX~ cRud
         ]
      ]
   , "sfUpdatingXX": I cRud BOX <CDIV>
      [ "XX": sfUpdatingXX cRud
      , "Done": I cRud BOX <PROPBUTTON> 
         [ property: sfXXDoneUpdReq cRUd
         , disabled: I - sfUpdatingXX;sfUpdatingXX~ cRud
         ]
      ]
   , "Upd": sfXXIsUpdating cRud
   , "Permissions": I cRud BOX <CDIV>
      [ "Set Default Permissions": I cRud BOX <PROPBUTTON> [ property: sfSetDefaultPermissionsForXXs cRUd ]
      ]
   ]
, "XXXXs": V[XXContext*XXXX] CRuD COLS
   [ "XXXX": I cRud
   , "Name": xxxName cRUd
   , "Priv": I cRud <Privileges>
   , "Props": I cRud <Properties>
   , "Change privileges into": I cRud BOX <CDIV>
      [ "Set S": I  - sfAllowSelectOnXX~;sessionXXContext~;"_SESSION";sessionXXContext;sfAllowSelectOnXX BOX <PROPBUTTON> [ property: setSReq cRUd ]
      , "Clr S": I /\ sfAllowSelectOnXX~;sessionXXContext~;"_SESSION";sessionXXContext;sfAllowSelectOnXX BOX <PROPBUTTON> [ property: clrSReq cRUd ]
      , "Set U": I  - sfAllowUpdateOnXX~;sfAllowUpdateOnXX BOX <PROPBUTTON> [ property: setUReq cRUd ]
      , "Clr U": I /\ sfAllowUpdateOnXX~;sfAllowUpdateOnXX BOX <PROPBUTTON> [ property: clrUReq cRUd ]
      , "Set D": I  - sfAllowDeleteOnXX~;sfAllowDeleteOnXX BOX <PROPBUTTON> [ property: setDReq cRUd ]
      , "Clr D": I /\ sfAllowDeleteOnXX~;sfAllowDeleteOnXX BOX <PROPBUTTON> [ property: clrDReq cRUd ]
      ]
   , "Ed": xxxIsBeingEdited cRud
   , "IC": xxxIsClean cRud
   ]
]

--[ButtonCRUD testing facility]
-- In regular projects, this file would control the (minimal) portal interface functionality.
-- However, for testing purposes we add functionality to control the XXXX-ButtonCRUD context.
POPULATION Stxt CONTAINS [ "S", "s", "C", "c", "U", "u", "E", "e", "D", "d", "P", "p", "I", "i" ]

VIEW STRONG: IfcText HTML TEMPLATE "View-STRONG.html" ENDVIEW   REPRESENT IfcText TYPE ALPHANUMERIC
VIEW Privileges: XXXX
{ "S":  sfAllowSelectOnXX~;V[XXContext*Stxt];"S"
, "s": -sfAllowSelectOnXX~;V[XXContext*Stxt];"s"
, "U":  sfAllowUpdateOnXX~;V[XXContext*Stxt];"U"
, "u": -sfAllowUpdateOnXX~;V[XXContext*Stxt];"u"
, "D":  sfAllowDeleteOnXX~;V[XXContext*Stxt];"D"
, "d": -sfAllowDeleteOnXX~;V[XXContext*Stxt];"d"
} ENDVIEW

VIEW Properties: XXXX
{ "Persistent":        xxxIsPersistent;V[XXXX*Stxt];"P"
, "Non-Persistent": (I-xxxIsPersistent);V[XXXX*Stxt];"p"
, "Clean":             xxxIsClean;V[XXXX*Stxt];"C"
, "Non-Clean":      (I-xxxIsClean);V[XXXX*Stxt];"c"
, "Inited":            xxxIsInitialized;V[XXXX*Stxt];"I"
, "Non-Inited":     (I-xxxIsInitialized);V[XXXX*Stxt];"i"
} ENDVIEW

-- EQUIVALENCE xxxIsBeingEdited[XXXX] [PROP] == I /\ sfUpdatingXX~;sfUpdatingXX
xxxIsBeingEdited :: XXXX * XXXX [PROP] -- define relation xxxIsBeingEdited as shorthand for I /\ sfUpdatingXX~;sfUpdatingXX
ROLE ExecEngine MAINTAINS "Equivalence - InsPair xxxIsBeingEdited"
RULE "Equivalence - InsPair xxxIsBeingEdited": I /\ sfUpdatingXX~;sfUpdatingXX |- xxxIsBeingEdited[XXXX]
VIOLATION (TXT "{EX} InsPair;xxxIsBeingEdited;XXXX;", SRC I, TXT ";XXXX;", TGT I)
ROLE ExecEngine MAINTAINS "Equivalence - DelPair xxxIsBeingEdited"
RULE "Equivalence - DelPair xxxIsBeingEdited": xxxIsBeingEdited[XXXX] |- I /\ sfUpdatingXX~;sfUpdatingXX
VIOLATION (TXT "{EX} DelPair;xxxIsBeingEdited;XXXX;", SRC I, TXT ";XXXX;", TGT I)

setSReq :: XXXX * XXXX [PROP]
ROLE ExecEngine MAINTAINS "Allow S" 
RULE "Allow S": setSReq |- -I
VIOLATION (TXT "{EX} DelPair;setSReq;XXXX;", SRC I, TXT ";XXXX;", TGT I
          ,TXT "{EX} InsPair;sfAllowSelectOnXX;XXContext;", SRC V;"_SESSION";sessionXXContext, TXT ";XXXX;", TGT I)
clrSReq :: XXXX * XXXX [PROP]
ROLE ExecEngine MAINTAINS "Deny S" 
RULE "Deny S": clrSReq |- -I
VIOLATION (TXT "{EX} DelPair;clrSReq;XXXX;", SRC I, TXT ";XXXX;", TGT I
          ,TXT "{EX} DelPair;sfAllowSelectOnXX;XXContext;", SRC V;"_SESSION";sessionXXContext, TXT ";XXXX;", TGT I)

setUReq :: XXXX * XXXX [PROP]
ROLE ExecEngine MAINTAINS "Allow U" 
RULE "Allow U": setUReq |- -I
VIOLATION (TXT "{EX} DelPair;setUReq;XXXX;", SRC I, TXT ";XXXX;", TGT I
          ,TXT "{EX} InsPair;sfAllowUpdateOnXX;XXContext;", SRC V;"_SESSION";sessionXXContext, TXT ";XXXX;", TGT I)
clrUReq :: XXXX * XXXX [PROP]
ROLE ExecEngine MAINTAINS "Deny U" 
RULE "Deny U": clrUReq |- -I
VIOLATION (TXT "{EX} DelPair;clrUReq;XXXX;", SRC I, TXT ";XXXX;", TGT I
          ,TXT "{EX} DelPair;sfAllowUpdateOnXX;XXContext;", SRC V;"_SESSION";sessionXXContext, TXT ";XXXX;", TGT I)

setDReq :: XXXX * XXXX [PROP]
ROLE ExecEngine MAINTAINS "Allow D" 
RULE "Allow D": setDReq |- -I
VIOLATION (TXT "{EX} DelPair;setDReq;XXXX;", SRC I, TXT ";XXXX;", TGT I
          ,TXT "{EX} InsPair;sfAllowDeleteOnXX;XXContext;", SRC V;"_SESSION";sessionXXContext, TXT ";XXXX;", TGT I)
clrDReq :: XXXX * XXXX [PROP]
ROLE ExecEngine MAINTAINS "Deny D" 
RULE "Deny D": clrDReq |- -I
VIOLATION (TXT "{EX} DelPair;clrDReq;XXXX;", SRC I, TXT ";XXXX;", TGT I
          ,TXT "{EX} DelPair;sfAllowDeleteOnXX;XXContext;", SRC V;"_SESSION";sessionXXContext, TXT ";XXXX;", TGT I)

ENDCONTEXT
