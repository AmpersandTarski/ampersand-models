CONTEXT EURentBRANCHInterfaces IN ENGLISH
-----------------------------------------------------------
sessionPickupPerson :: SESSION * PersonRef [UNI]
sessionDroppedoffRC  :: SESSION * RentalCase [UNI]
sessionDroppedOffCar :: SESSION * Car [UNI]
sessionDroppedOffPerson :: SESSION * PersonRef [UNI]

--[Functionality for logged in users]----------------------
sessionCustomerRef :: SESSION * PersonRef [UNI]
sessionDrivingLicense :: SESSION * DrivingLicense [UNI]
sessionCarID :: SESSION * LicensePlate [UNI]

INTERFACE "EU-Rent Branch Office": '_SESSION' cRud BOX <ROWSNL>
   [ "Branch-related Sessions": I /\ sessionBranch;sessionBranch~ cRud TABS
      [ "My Session" : I cRud BOX <ROWSNL>
         [ "Todays date" : I cRud BOX [ "Today is": sessionToday cRud ]
         , "Logout" : I cRud INTERFACE "Logout"
         ]
      , "New rental" : I cRuD BOX <ROWSNL>
         [ "Create rental" : sessionRC CRud BOX
            [ "Customer"       : I cRud INTERFACE "Edit Customer Details"
            , "Rental"         : I cRud INTERFACE "Edit Contract Details"
            , "Car assignment" : I cRud INTERFACE "Car Assignment and Pickup"
            , "Costs"          : I cRud INTERFACE "Show Projected Regular Costs"
            ]
         , "Workitems" : (sessionActiveRoles;workitemRole~ /\ sessionRC;rcWorkItem);workitemText cRud
         ]
      , "Pick-ups": I cRud BOX <ROWSNL>
         [ "Search arguments": I COLS
            [ "Customer (PersonRef)": sessionCustomerRef cRUd
            , "Driving License" : sessionDrivingLicense cRUd
            ]
         , "Found rental cases" : 
               (   sessionBranch;rcPickupBranch~
               /\ (sessionDrivingLicense;rcDrivingLicense~ \/ -sessionDrivingLicense;V[DrivingLicense*RentalCase])
               /\ (sessionCustomerRef;(rcRenter \/ rcDriver)~ \/ -sessionCustomerRef;V[PersonRef*RentalCase])
               );(rentalHasBeenPromised-rentalHasBeenStarted) cRud INTERFACE "View Rental Cases"
         ]
      , "Drop-offs" :  I cRud BOX <ROWSNL>
         [ "Search arguments": I COLS
            [ "Car (License plate)": sessionCarID cRUd
            , "Customer (PersonRef)": sessionCustomerRef cRUd
            , "Driving License" : sessionDrivingLicense cRUd
            ]
         , "Found rental cases" : 
               (   sessionBranch;rcDropOffBranch~
               /\ (sessionCarID;(rcAssignedCar;carID)~ \/ -sessionCarID;V[LicensePlate*RentalCase])
               /\ (sessionDrivingLicense;rcDrivingLicense~ \/ -sessionDrivingLicense;V[DrivingLicense*RentalCase])
               /\ (sessionCustomerRef;(rcRenter \/ rcDriver)~ \/ -sessionCustomerRef;V[PersonRef*RentalCase])
               );(rentalHasBeenStarted-rentalHasBeenEnded) cRud INTERFACE "View Rental Cases"
         ]
      , "Available cars" : sessionBranch;carAvailableAt~ cRud COLS
            [ "License plate" : I cRud
            , "Type" : carType cRud
            ]
      , "Branch rental history" : sessionBranch;
            (rcPickupBranch \/ rcDropOffBranch \/ rcDroppedOffBranch)~;rentalHasBeenEnded cRud INTERFACE "View Rental Cases"
      ]
   , "Non-branch related sessions": (I-(sessionBranch;sessionBranch~)) cRud BOX <ROWSNL>
      [ "Message": V;'You must login as an EURent employee to use this interface'[IfcMsg] cRud
      , "Login"  : I-(sessionAccount;sessionAccount~)  cRud INTERFACE "Login as EURent employee"
      , "Logout" : I /\ sessionAccount;sessionAccount~ cRud INTERFACE "Logout"
      ]
   ] 
POPULATION IfcMsg CONTAINS [ "You must login as an EURent employee to use this interface" ]

--[Creating a new Rental at a Branch office]---------------

INTERFACE "New Branch Rental" FOR Branch : '_SESSION' /\ sessionBranch;sessionBranch~ cRud BOX <ROWSNL>
   [ "Create new car rental" : sessionRC CRud BOX
      [ "Customer details" : I cRud INTERFACE "Edit Customer Details"
      , "Contract details" : I cRud INTERFACE "Edit Contract Details"
      , "Car assignment"   : I cRud INTERFACE "Car Assignment and Pickup"
      , "Projected costs"  : I cRud INTERFACE "Show Projected Regular Costs"
      ]
   , "Submitting the request" : sessionRC;(rcMayBeRequested-rentalHasBeenPromised) cRud BOX
      [ "Submit?" : rentalHasBeenRequested cRUd
      ]
   , "Rental has been created": (I-(sessionRC;sessionRC~))
                                 ;V;'Rental has been created'[IfcMsg] cRud
   ]
POPULATION IfcMsg CONTAINS [ "Rental has been created" ]

-----------------------------------------------------------
INTERFACE "New Branch Rental2" FOR Branch : I-rentalHasBeenRequested cRud BOX
   [ "Customer details" : I cRud INTERFACE "Edit Customer Details"
   , "Contract details" : I cRud INTERFACE "Edit Contract Details"
   , "Car assignment"   : I cRud INTERFACE "Car Assignment and Pickup"
   , "Projected costs"  : I cRud INTERFACE "Show Projected Regular Costs"
   , "Rental request" : I cRud BOX
      [ "Submit this rental request?" : rentalHasBeenRequested cRUd
      , "Has rental been requested?" : rentalHasBeenRequested cRud
      , "Has rental been promised?" : rentalHasBeenPromised cRud
      , "Has rental car been picked up?" : rentalCarHasBeenPickedUp cRud
      , "Has rental been started?" : rentalHasBeenStarted cRud
      ]
   ]

INTERFACE "Pick-up" FOR Branch : I[RentalCase]
                  /\ (rcRenter \/ rcDriver);sessionPickupPerson~;'_SESSION';sessionBranch;rcPickupBranch~
               -- /\ rentalHasBeenPromised
                  /\ -rentalHasBeenStarted cRud BOX
   [ "Customer details" : I cRud INTERFACE "Edit Customer Details"
   , "Contract details" : I cRud INTERFACE "Edit Contract Details"
   , "Car assignment"   : I cRud INTERFACE "Car Assignment and Pickup"
   , "Projected costs"  : I cRud INTERFACE "Show Projected Regular Costs"
   , "Rental status" : I cRud BOX
      [ "Request submitted?" : rentalHasBeenRequested cRud
      , "Has rental been promised?" : rentalHasBeenPromised cRud
      , "Has rental car been picked up?" : rentalCarHasBeenPickedUp cRud
      , "Has rental been started?" : rentalHasBeenStarted cRud
      ]
   ]
-----------------------------------------------------------
PROCESS "Branch New Rental and Pick-up Signaling"

ROLE Branch MAINTAINS "Car assignment"
RULE "Car assignment":
   rentalHasBeenPromised /\ V;'_SESSION';(sessionRC \/ sessionPickupPerson;(rcRenter \/ rcDriver)~)
|- rcAssignedCar;rcAssignedCar~
VIOLATION (TXT "A car must be assigned to the current rental")

ROLE Branch MAINTAINS "Car key handover"
RULE "Car key handover": 
   rentalHasBeenPromised
   /\ V;'_SESSION';(sessionRC \/ sessionPickupPerson;(rcRenter \/ rcDriver)~)
   /\ rcAssignedCar;rcAssignedCar~
   /\ rcDriver;rcDriver~
|- rcKeysHandedOver
VIOLATION (TXT "Keys for ", SRC rcAssignedCar, TXT " must be handed over to ", SRC rcDriver)

ENDPROCESS
-----------------------------------------------------------
PROCESS "Branch Interface: Handling New Rentals and Pickups"
PURPOSE PROCESS "Branch Interface: Handling New Rentals and Pickups"
{+The interfaces provided for branch offices, related to handling new rentals and pickups, provide some automated functionality. This section describes the features for filling in or changing the contents of forms that are presented in such interfaces. The assumption is that this interface is only provided within branch offices, allowing EU-Rent employees to create new rental applications for 'walk in customers' (see P2:1).+}

ROLE ExecEngine MAINTAINS "Discard session new branch rental"
RULE "Discard session new branch rental": '_SESSION';sessionRC;(rentalHasBeenPromised /\ rentalCarHasBeenPickedUp) |- -sessionRC
MEANING "When a rental has been picked up, a new branch rental no longer exists."
VIOLATION (TXT "{EX} DelPair;sessionRC;SESSION;", SRC I, TXT ";RentalCase;", TGT I)

ROLE ExecEngine MAINTAINS "Discard session pickup person"
RULE "Discard session pickup person": 
   '_SESSION';sessionPickupPerson;(rcRenter \/ rcDriver)~;(rentalHasBeenPromised /\ rentalCarHasBeenPickedUp) |- (V[SESSION*PersonRef] - sessionPickupPerson);V
MEANING "When a rental has been picked up, a person to pick it up no longer exists."
VIOLATION (TXT "{EX} DelPair;sessionPickupPerson;SESSION;", SRC I, TXT ";PersonRef;", SRC sessionPickupPerson)

PURPOSE RULE "Single available car assignment"
{+If there is only one car available at the pick-up branch when a rental is being picked up, it shall be automatically assigned to a rental.+} 
ROLE ExecEngine MAINTAINS "Single available car assignment"
RULE "Single available car assignment":
    (  I[RentalCase]
       /\ V;'_SESSION';(sessionRC \/ sessionPickupPerson;(rcRenter \/ rcDriver)~)
       /\ -((rcCarType;carType~ /\ rcPickupBranch;carAvailableAt~);-I[Car];(rcCarType;carType~ /\ rcPickupBranch;carAvailableAt~)~)
    );(rcCarType;carType~ /\ rcPickupBranch;carAvailableAt~)
|- rcAssignedCar
MEANING "If there is only one car available of the selected type, it will be assigned to the rental"
VIOLATION (TXT "{EX} InsPair;rcAssignedCar;RentalCase;", SRC I, TXT ";Car;", TGT I)

PURPOSE RULE "Remove car assignments"
{+When a car has been assigned, and the type of the requested car has changed, it should be removed.+}
ROLE ExecEngine MAINTAINS "Remove car assignments"
RULE "Remove car assignments":
   (I[RentalCase] /\ V;'_SESSION';(sessionRC \/ sessionPickupPerson;(rcRenter \/ rcDriver)~));rcAssignedCar
|- rcCarType;carType~
MEANING "If the car type changes, the assigned car must be removed."
VIOLATION (TXT "{EX} DelPair;rcAssignedCar;RentalCase;", SRC I, TXT ";Car;", TGT I)

PURPOSE RULE "The branch that fills in the request is the pick-up branch"
{+When a rental request is filled in by a branch, this branch will play the role of pick-up branch.+}
ROLE ExecEngine MAINTAINS "The branch that fills in the request is the pick-up branch"
RULE "The branch that fills in the request is the pick-up branch":
   (I /\ -rentalHasBeenStarted)
  ;(sessionRC~ \/ rentalHasBeenPromised;(rcRenter \/ rcDriver);sessionPickupPerson~)
  ;'_SESSION';sessionBranch |- rcPickupBranch
MEANING "When a rental has not been started the default pickup branch will be the branch that handles it."
VIOLATION (TXT "{EX} InsPair;rcPickupBranch;RentalCase;", SRC I, TXT ";Branch;", TGT I)

PURPOSE RULE "Default start date of rental"
{+The date at which a rental request is filled in at a branch, is the default date at which the rental will start.+}
ROLE ExecEngine MAINTAINS "Default start date of rental"
RULE "Default start date of rental":
   (I /\ -(rcStartDate;rcStartDate~))
   ;(sessionRC~ \/ (rcRenter \/ rcDriver);sessionPickupPerson~)
   ;(I /\ sessionBranch;sessionBranch~)
   ;'_SESSION';sessionToday |- rcStartDate
MEANING "When the start date of a rental is empty, the default value will be the date at which it is handled at the branch."
VIOLATION (TXT "{EX} InsPair;rcStartDate;RentalCase;", SRC I, TXT ";Date;", TGT I)

PURPOSE RULE "Car availability at branch"
{+When a contract is being created, cars and/or branches may only be selected if such cars are available at these branches.+}
RULE "Car availability at branch":  rcCarType~;(I /\ -rentalCarHasBeenPickedUp /\ sessionRC~;'_SESSION';sessionRC);rcPickupBranch |- carType~;carAvailableAt
MEANING "When creating a new rental contract, car types and pick-up branch must be selected such that the branch has cars of that type available."
VIOLATION (TXT "Cars of type ", SRC I, TXT " are not available at ", TGT I)

PURPOSE RULE "Auto submit new branch request"
{+When a rental request in a branch is filled in, and they keys have already been handed over, the request is considered to be submitted.+}
ROLE ExecEngine MAINTAINS "Auto submit new branch request"
RULE "Auto submit new branch request": '_SESSION';sessionRC;rcKeysHandedOver |- sessionRC;rentalHasBeenRequested
MEANING "A rental that is newly created at a branch office, for which the car keys have been handed over, is considered to be requested."
VIOLATION (TXT "{EX} InsPair;rentalHasBeenRequested;RentalCase;", TGT I, TXT ";RentalCase;", TGT I)

PURPOSE RULE "Assigning a car to a rental"
{+Branch offices may only assign a car to a (new or existing) rental if this car is available at that branch.+}
RULE "Assigning a car to a rental":
   '_SESSION'
   ;( sessionRC
    \/ (  sessionBranch;rcPickupBranch~
       /\ sessionPickupPerson;(rcRenter \/ rcDriver)~
       )
   );(rentalHasBeenPromised /\ -rentalCarHasBeenPickedUp);rcAssignedCar 
|- sessionBranch;carAvailableAt~
MEANING "A branch office may only assign cars that are available at that location."
VIOLATION (TGT I, TXT "is not available at ", SRC sessionBranch)

PURPOSE RULE "Car key handover to the driver"
{+When a branch office has assigned a car to a (new or existing) rental, the keys must be handed to the contracted driver.+}
ROLE Branch MAINTAINS "Car key handover to the driver"
RULE "Car key handover to the driver": 
   '_SESSION'
   ;(  ( sessionRC
        \/ (  sessionBranch;rcPickupBranch~
           /\ sessionPickupPerson;(rcRenter \/ rcDriver)~
           )
      );(rentalHasBeenPromised /\ -rentalCarHasBeenPickedUp)
      ;rcAssignedCar
   /\ 
      sessionBranch;carAvailableAt~
   )   
|- sessionRC;rcKeysHandedOver;V
MEANING "The key handover must be registered."
VIOLATION (TXT "When keys are handed over, answer 'Are car keys handed over?' with 'TRUE'.")

ENDPROCESS
------------------------------------------------------------
sessionDroppedOffCar :: SESSION * Car [UNI]
sessionDroppedoffRC  :: SESSION * RentalCase [UNI]

INTERFACE "Drop-off" FOR Branch : I[RentalCase];(sessionDroppedoffRC~;'_SESSION';sessionDroppedoffRC)
                  /\ rentalCarHasBeenPickedUp /\ -rentalHasBeenEnded  cRud BOX
   [ "Contract details" : I cRud INTERFACE "Show Contract Details"
   , "Customer details" : I cRud INTERFACE "Show Customer Details"
   , "Drop-off details" : I cRud INTERFACE "Edit Drop-off Details"
   , "Billing details"  : I cRud INTERFACE "Show Billing Details"
   , "Payment received?": rentalIsPaid cRUd
   , "Rental status": I cRud BOX
      [ "Has rental been started?" : rentalHasBeenStarted cRud
      , "Has car been dropped-off?" : rentalCarHasBeenDroppedOff cRud
      , "Has payment been requested?" : paymentHasBeenRequested cRud
      , "Has payment been received?" : rentalIsPaid cRud
      , "Has rental been ended?" : rentalHasBeenEnded cRud
      ]
   ]

-----------------------------------------------------------
PROCESS "Branch Drop-offs and Payment Signaling"

ROLE Branch MAINTAINS "Register dropped-off car"
RULE "Register dropped-off car":
   I /\ sessionDroppedoffRC~;'_SESSION';sessionDroppedoffRC
|- rcDroppedOffCar;rcDroppedOffCar~
VIOLATION (TXT "After acceptance of the dropped-off car and having received the keys, please register the car's license plate.")

ROLE Branch MAINTAINS "Request rental payment"
RULE "Request rental payment": 
   I /\ sessionDroppedoffRC~;'_SESSION';sessionDroppedoffRC
     /\ rentalCarHasBeenDroppedOff
|- paymentHasBeenRequested
VIOLATION (TXT "Request ", SRC rcRenter, TXT " to pay ", SRC rentalCharge, TXT " Euros, for having rented ", SRC rcDroppedOffCar, TXT ".")

ROLE Branch MAINTAINS "Obtain rental payment"
RULE "Obtain rental payment": 
   I /\ sessionDroppedoffRC~;'_SESSION';sessionDroppedoffRC
     /\ paymentHasBeenRequested
|- rentalIsPaid
VIOLATION (TXT "Obtain payment from ", SRC rcRenter, TXT " for the amount of ", SRC rentalCharge, TXT " Euros, for having rented ", SRC rcDroppedOffCar, TXT ".")

ENDPROCESS
-----------------------------------------------------------
PROCESS "Branch Interface: Handling Drop-offs and Payment"
PURPOSE PROCESS "Branch Interface: Handling Drop-offs and Payment"
{+The interfaces provided for branch offices, related to handling drop-offs, bill presentment and receiving payment, provide some automated functionality. This section describes the features for filling in or changing the contents of forms that are presented in such interfaces. The assumption is that this interface is only provided within branch offices, allowing EU-Rent employees to handle the dropping off of cars and obtaining rental payments.+}

PURPOSE RULE "Fetching the rental case for a drop-off"
{+Whenever a drop-off is requested, the associated rental case must be identified. This rental case has the following properties:
/start{itemize}
/item it lists the returned car as being rented
/item it shows that the car has been picked up and the rental has not yet been ended
/item the person returning the car is either the renter or the driver
/end{itemize}
-}
ROLE ExecEngine MAINTAINS "Fetching the rental case for a drop-off"
RULE "Fetching the rental case for a drop-off":
   '_SESSION';(I /\ sessionBranch;sessionBranch~)
   ;(sessionDroppedOffCar;rcAssignedCar~ \/ sessionDroppedOffPerson;(rcRenter \/ rcDriver)~)
   ;(I /\ rentalCarHasBeenPickedUp  /\ -rentalHasBeenEnded)
|- sessionDroppedoffRC
MEANING "The rental case of a drop-off is one where"
VIOLATION (TXT "{EX} InsPair;sessionDroppedoffRC;SESSION;", SRC I, TXT ";RentalCase;", TGT I)

sessionDroppedoffRC  :: SESSION * RentalCase [UNI] -- automatically filled in.
sessionDroppedOffCar :: SESSION * Car [UNI]
sessionDroppedOffPerson :: SESSION * PersonRef [UNI]

PURPOSE RULE "Drop-off sanity check"
{+In order to be sure that the car that is presented for a drop-off should be processed, it must be verified that there is a rental contract for this car that says that the car has been picked-up but not yet dropped-off.+}
RULE "Drop-off sanity check": 
   I /\ sessionDroppedOffCar~;'_SESSION';(I /\ -(sessionDroppedoffRC;sessionDroppedoffRC~));sessionDroppedOffCar
|- rcAssignedCar~;(I /\ rentalCarHasBeenPickedUp  /\ -rentalCarHasBeenDroppedOff);rcAssignedCar 
MEANING "A car can only be dropped off if it has been rented (and not yet returned)."
VIOLATION (TGT I, TXT " cannot be processed (it is available at branch ", TGT carAvailableAt, TXT ").")

PURPOSE RULE "Accepting dropped-off car"
{+When the keys of a car are returned (and the branch employee has checked that the car has been returned is in good order), the car's license plate must be entered to complete the drop-off.+}
ROLE ExecEngine MAINTAINS "Accepting dropped-off car"
RULE "Accepting dropped-off car": (I /\ rentalCarHasBeenPickedUp /\ -rentalCarHasBeenDroppedOff);rcAssignedCar;(I /\ sessionDroppedOffCar~;'_SESSION';sessionDroppedOffCar) |- rcDroppedOffCar
MEANING "A car will be registered as having been dropped off in the rental case that says that this car has been picked up but not yet dropped off."
VIOLATION (TXT "{EX} InsPair;rcDroppedOffCar;RentalCase;", SRC I, TXT ";Car;", TGT I)

--$ Merk op: het is veel eenvoudiger om elke interface/interactie/transactie te onderscheiden naar precondities, omdat dan het uitwerken veel gemakkelijker wordt. Aan de andere kant is het ook zo dat als je dan 'algemere' drop-off regels zou wijzigen, deze weer in elke interface een plekje zouden moeten krijgen. Hoe doe je dat op een goede en gestructureerde manier zodat je altijd maar op 1 plaats bezig hoeft te zijn?

PURPOSE RULE "Cars are returned to the drop-off branch"
{+When a car is returned to a branch, this branch will play the role of drop-off branch.+}
ROLE ExecEngine MAINTAINS "Cars are returned to the drop-off branch"
RULE "Cars are returned to the drop-off branch":
   (I /\ -rentalCarHasBeenDroppedOff /\ rcDroppedOffCar;rcDroppedOffCar~)
  ;(rcDroppedOffCar;sessionDroppedOffCar~ \/ (rcRenter \/ rcDriver);sessionDroppedOffPerson~)
  ;'_SESSION';sessionBranch |- rcDroppedOffBranch
MEANING "The (actual) drop-off branch is the branch at which the car is presented for drop-off."
VIOLATION (TXT "{EX} InsPair;rcDroppedOffBranch;RentalCase;", SRC I, TXT ";Branch;", TGT I)

PURPOSE RULE "Cars are returned on the drop-off date"
{+When a car is returned to a branch, that date is the drop-off date.+}
ROLE ExecEngine MAINTAINS "Cars are returned on the drop-off date"
RULE "Cars are returned on the drop-off date":
   (I /\ -rentalCarHasBeenDroppedOff /\ rcDroppedOffCar;rcDroppedOffCar~)
  ;(rcDroppedOffCar;sessionDroppedOffCar~ \/ (rcRenter \/ rcDriver);sessionDroppedOffPerson~)
  ;'_SESSION';sessionToday |- rcDroppedOffDate
MEANING "The (actual) drop-off date is the date at which the car is presented for drop-off at a branch."
VIOLATION (TXT "{EX} InsPair;rcDroppedOffDate;RentalCase;", SRC I, TXT ";Date;", TGT I)

ENDPROCESS
-----------------------------------------------------------
ENDCONTEXT