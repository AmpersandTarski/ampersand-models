CONTEXT EURentBRANCHInterfaces IN ENGLISH
-----------------------------------------------------------
sessionBranch :: SESSION * Branch [UNI]
sessionNewBranchRC :: SESSION * RentalCase [UNI]
sessionPickupPerson :: SESSION * Person [UNI]
sessionDroppedoffRC  :: SESSION * RentalCase [UNI]
sessionDroppedOffCar :: SESSION * Car [UNI]
sessionDroppedOffPerson :: SESSION * Person [UNI]

INTERFACE "EU-Rent Branch Office" 
   ( sessionToday
   , sessionBranch
   , sessionNewBranchRC
   , sessionPickupPerson
   , sessionDroppedOffCar
   , sessionDroppedOffPerson 
   ) FOR Branch : V[ONE*SESSION];'_SESSION'
BOX[ "Session context" : I[SESSION]
   BOX[ "Branch" : sessionBranch
      , "Todays date" : sessionToday
      , "Pick-up": I
      BOX[ "New Rental" : sessionNewBranchRC
         , "Pick-up (Person)" : sessionPickupPerson
         ]
      , "Drop-off": I
      BOX[ "Car" : sessionDroppedOffCar
         , "Renter or driver" : sessionDroppedOffPerson
         , "Drop-off Rental"  : sessionDroppedoffRC
         ]
      ]
   , "Available cars" : sessionBranch;carAvailableAt~ BOX[ "License plate" : I, "Type" : carType ]
   , "Rentals to be picked up"   : (I /\ sessionBranch;sessionBranch~)
                                   ;(  sessionPickupPerson;(rcDriver \/ rcRenter)~
                                    \/ (I /\ -(sessionPickupPerson;sessionPickupPerson~)
                                       );sessionBranch;contractedPickupBranch~
                                    )  
                                   ;(I {-/\ rentalHasBeenPromised-} /\ -rentalHasBeenStarted)
   , "Rentals to be dropped off" : sessionBranch;contractedDropOffBranch~;(I /\ rentalHasBeenStarted /\ -rentalHasBeenEnded)
   , "Branch rental history" : sessionBranch;(contractedPickupBranch \/ contractedDropOffBranch \/ rcDroppedOffBranch)~;(I /\  rentalHasBeenEnded)
   ]

-----------------------------------------------------------
INTERFACE "New Branch Rental" 
   ( sessionToday
   , sessionBranch
   , sessionNewBranchRC
   , sessionPickupPerson
   , sessionDroppedOffCar
   , sessionDroppedOffPerson 
-- Edit Contract Details
   , contractedStartDate
   , contractedEndDate
   , contractedCarType
   , contractedPickupBranch
   , contractedDropOffBranch
-- Edit Customer Details
   , rcRenter
   , rcDriver
   , rcDrivingLicense
-- Car Assignment
   , contractedCarType
   , rcAssignedCar
   , rcKeysHandedOverQ
-- Other stuff
   , rcBranchRequestedQ
   ) FOR Branch : I[RentalCase];(I /\ sessionNewBranchRC~;'_SESSION';sessionNewBranchRC)
BOX[ "Customer details" : I --INTERFACE "Edit Customer Details"
   BOX[ "* Driver" : rcDriver
      , "* VALID driving license" : rcDrivingLicense
      , "Renter (if different from driver)" : rcRenter
      ]
   , "Contract details" : I --INTERFACE "Edit Contract Details"
   BOX[ "Pick-up branch" : contractedPickupBranch
      , "* Drop-off branch" : contractedDropOffBranch
      , "* Start date" : contractedStartDate
      , "* End date" : contractedEndDate
      , "* Car type" : contractedCarType
      , "Available car types at pick-up branch" : contractedPickupBranch;carAvailableAt~;carType
      ]
   , "Car assignment"       : I --INTERFACE "Car Assignment and Pickup"
   BOX[ "Available Types" : contractedPickupBranch;carAvailableAt~;carType
      BOX[ "Type"     : I
         , "Euro/day" : rentalTariffPerDay
         ]
      , "Selected Type"  : contractedCarType
      , "Available cars" : contractedCarType;carType~ /\ sessionNewBranchRC~;sessionBranch;carAvailableAt~
      , "Selected car"   : rcAssignedCar
      , "Are car keys handed over?" : rcKeysHandedOverQ
      ]
   , "Projected costs" : I  --INTERFACE "Show Projected Costs"
   BOX[ "Daily charge (Eur)" : contractedCarType;rentalTariffPerDay
      , "Period (days)"      : contractualRentalPeriod
      , "Rental charge (Eur)": contractualBasicCharge
      ]
   , "Rental request" : I
   BOX[ "Submit this rental request?" : rcBranchRequestedQ
      , "Request submitted?" : (rcUserRequestedQ \/ rcBranchRequestedQ);'Yes' \/ (I /\ -((rcUserRequestedQ \/ rcBranchRequestedQ);'Yes';(rcUserRequestedQ \/ rcBranchRequestedQ)~));V;'No'[YesNoAnswer]
      , "Has rental been promised?" : rentalHasBeenPromised;V;'Yes'[YesNoAnswer] \/ (I /\ -rentalHasBeenPromised);V;'No'[YesNoAnswer]
      , "Has rental car been picked up?" : rentalCarHasBeenPickedUp;V;'Yes'[YesNoAnswer] \/ (I /\ -rentalCarHasBeenPickedUp);V;'No'[YesNoAnswer]
      , "Has rental been started?" : rentalHasBeenStarted;V;'Yes'[YesNoAnswer] \/ (I /\ -rentalHasBeenStarted);V;'No'[YesNoAnswer]
      ]
   ]

INTERFACE "Pick-up" 
   ( sessionToday
   , sessionBranch
   , sessionNewBranchRC
   , sessionPickupPerson
   , sessionDroppedOffCar
   , sessionDroppedOffPerson 
-- Edit Contract Details
-- , contractedStartDate
   , contractedEndDate
   , contractedCarType
-- , contractedPickupBranch
   , contractedDropOffBranch
-- Edit Customer Details
   , rcRenter
   , rcDriver
   , rcDrivingLicense
-- Car Assignment
   , contractedCarType
   , rcAssignedCar
   , rcKeysHandedOverQ
-- Other stuff
   , rcBranchRequestedQ
   ) FOR Branch : I[RentalCase]
                  /\ (rcRenter \/ rcDriver);sessionPickupPerson~;'_SESSION';sessionBranch;contractedPickupBranch~
               -- /\ rentalHasBeenPromised
                  /\ -rentalHasBeenStarted
BOX[ "Customer details" : I --INTERFACE "Edit Customer Details"
   BOX[ "* Driver" : rcDriver
      , "* VALID driving license" : rcDrivingLicense
      , "Renter (if different from driver)" : rcRenter
      ]
   , "Contract details" : I --INTERFACE "Edit Contract Details"
   BOX[ "Pick-up branch" : contractedPickupBranch
      , "* Drop-off branch" : contractedDropOffBranch
      , "* Start date" : contractedStartDate
      , "* End date" : contractedEndDate
      , "* Car type" : contractedCarType
      , "Available car types at pick-up branch" : contractedPickupBranch;carAvailableAt~;carType
      BOX[ "Type" : I
         , "Rental tariff (Euro/day)" : rentalTariffPerDay
         , "Excess tariff (Euro/day)" : excessTariffPerDay
         ]
      ]
   , "Car assignment"       : I --INTERFACE "Car Assignment and Pickup"
   BOX[ "Selected Type"  : contractedCarType
      , "Available cars" : contractedCarType;carType~ /\ contractedPickupBranch;carAvailableAt~
      , "Selected car"   : rcAssignedCar
      , "Are car keys handed over?" : rcKeysHandedOverQ
      ]
   , "Projected costs" : I  --INTERFACE "Show Projected Costs"
   BOX[ "Daily charge (Eur)" : contractedCarType;rentalTariffPerDay
      , "Period (days)"      : contractualRentalPeriod
      , "Rental charge (Eur)": contractualBasicCharge
      ]
   , "Rental status" : I
   BOX[ "Request submitted?" : (rcUserRequestedQ \/ rcBranchRequestedQ);'Yes' \/ (I /\ -((rcUserRequestedQ \/ rcBranchRequestedQ);'Yes';(rcUserRequestedQ \/ rcBranchRequestedQ)~));V;'No'[YesNoAnswer]
      , "Has rental been promised?" : rentalHasBeenPromised;V;'Yes'[YesNoAnswer] \/ (I /\ -rentalHasBeenPromised);V;'No'[YesNoAnswer]
      , "Has rental car been picked up?" : rentalCarHasBeenPickedUp;V;'Yes'[YesNoAnswer] \/ (I /\ -rentalCarHasBeenPickedUp);V;'No'[YesNoAnswer]
      , "Has rental been started?" : rentalHasBeenStarted;V;'Yes'[YesNoAnswer] \/ (I /\ -rentalHasBeenStarted);V;'No'[YesNoAnswer]
      ]
   ]
-----------------------------------------------------------
PROCESS "Branch New Rental and Pick-up Signaling"

ROLE Branch MAINTAINS "Driver license checking"
RULE "Driver license checking":   I[RentalCase] /\ V;'_SESSION';(sessionNewBranchRC \/ sessionPickupPerson;(rcRenter \/ rcDriver)~)
                         |- rcDrivingLicense;rcDrivingLicense~
VIOLATION (TXT "A valid driver license must be entered")

ROLE Branch MAINTAINS "Car assignment"
RULE "Car assignment":   I[RentalCase] /\ V;'_SESSION';(sessionNewBranchRC \/ sessionPickupPerson;(rcRenter \/ rcDriver)~)
                         |- rcAssignedCar;rcAssignedCar~
VIOLATION (TXT "A car must be assigned to the current rental")

ROLE Branch MAINTAINS "Car key handover"
RULE "Car key handover": I[RentalCase] /\ V;'_SESSION';(sessionNewBranchRC \/ sessionPickupPerson;(rcRenter \/ rcDriver)~)
                                       /\ rcAssignedCar;rcAssignedCar~
                                       /\ rcDriver;rcDriver~
                         |- rcKeysHandedOverQ;'Yes';rcKeysHandedOverQ~
VIOLATION (TXT "Keys for ", SRC rcAssignedCar, TXT " must be handed over to ", SRC rcDriver)

ENDPROCESS
-----------------------------------------------------------
PROCESS "Branch Interface: Handling New Rentals and Pickups"
PURPOSE PROCESS "Branch Interface: Handling New Rentals and Pickups"
{+The interfaces provided for branch offices, related to handling new rentals and pickups, provide some automated functionality. This section describes the features for filling in or changing the contents of forms that are presented in such interfaces. The assumption is that this interface is only provided within branch offices, allowing EU-Rent employees to create new rental applications for 'walk in customers' (see P2:1).-}

ROLE ExecEngine MAINTAINS "Discard session new branch rental"
RULE "Discard session new branch rental": '_SESSION';sessionNewBranchRC;(rentalHasBeenPromised /\ rentalCarHasBeenPickedUp) |- -sessionNewBranchRC
MEANING "When a rental has been picked up, a new branch rental no longer exists."
VIOLATION (TXT "{EX} DelPair;sessionNewBranchRC;SESSION;", SRC I, TXT ";RentalCase;", TGT I)

ROLE ExecEngine MAINTAINS "Discard session pickup person"
RULE "Discard session pickup person": 
   '_SESSION';sessionPickupPerson;(rcRenter \/ rcDriver)~;(rentalHasBeenPromised /\ rentalCarHasBeenPickedUp) |- -sessionPickupPerson;V
MEANING "When a rental has been picked up, a person to pick it up no longer exists."
VIOLATION (TXT "{EX} DelPair;sessionPickupPerson;SESSION;", SRC I, TXT ";Person;", SRC sessionPickupPerson)

PURPOSE RULE "Single available car assignment"
{+If there is only one car available at the pick-up branch when a rental is being picked up, it shall be automatically assigned to a rental.-} 
ROLE ExecEngine MAINTAINS "Single available car assignment"
RULE "Single available car assignment":
    (  I[RentalCase]
       /\ V;'_SESSION';(sessionNewBranchRC \/ sessionPickupPerson;(rcRenter \/ rcDriver)~)
       /\ -((contractedCarType;carType~ /\ contractedPickupBranch;carAvailableAt~);-I[Car];(contractedCarType;carType~ /\ contractedPickupBranch;carAvailableAt~)~)
    );(contractedCarType;carType~ /\ contractedPickupBranch;carAvailableAt~)
|- rcAssignedCar
MEANING "If there is only one car available of the selected type, it will be assigned to the rental"
VIOLATION (TXT "{EX} InsPair;rcAssignedCar;RentalCase;", SRC I, TXT ";Car;", TGT I)

PURPOSE RULE "Remove car assignments"
{+When a car has been assigned, and the type of the requested car has changed, it should be removed.-}
ROLE ExecEngine MAINTAINS "Remove car assignments"
RULE "Remove car assignments":
   (I[RentalCase] /\ V;'_SESSION';(sessionNewBranchRC \/ sessionPickupPerson;(rcRenter \/ rcDriver)~));rcAssignedCar
|- contractedCarType;carType~
MEANING "If the car type changes, the assigned car must be removed."
VIOLATION (TXT "{EX} DelPair;rcAssignedCar;RentalCase;", SRC I, TXT ";Car;", TGT I)

PURPOSE RULE "The branch that fills in the request is the pick-up branch"
{+When a rental request is filled in by a branch, this branch will play the role of pick-up branch.-}
ROLE ExecEngine MAINTAINS "The branch that fills in the request is the pick-up branch"
RULE "The branch that fills in the request is the pick-up branch":
   (I /\ -rentalHasBeenStarted)
  ;(sessionNewBranchRC~ \/ rentalHasBeenPromised;(rcRenter \/ rcDriver);sessionPickupPerson~)
  ;'_SESSION';sessionBranch |- contractedPickupBranch
MEANING "When a rental has not been started the default pickup branch will be the branch that handles it."
VIOLATION (TXT "{EX} InsPair;contractedPickupBranch;RentalCase;", SRC I, TXT ";Branch;", TGT I)

PURPOSE RULE "Default start date of rental"
{+The date at which a rental request is filled in at a branch, is the default date at which the rental will start.-}
ROLE ExecEngine MAINTAINS "Default start date of rental"
RULE "Default start date of rental":
   (I /\ -(contractedStartDate;contractedStartDate~))
   ;(sessionNewBranchRC~ \/ (rcRenter \/ rcDriver);sessionPickupPerson~)
   ;'_SESSION';sessionToday |- contractedStartDate
MEANING "When the start date of a rental is empty, the default value will be the date at which it is handled at the branch."
VIOLATION (TXT "{EX} InsPair;contractedStartDate;RentalCase;", SRC I, TXT ";Date;", TGT I)

PURPOSE RULE "Car availability at branch"
{+When a contract is being created, cars and/or branches may only be selected if such cars are available at these branches.-}
RULE "Car availability at branch":  contractedCarType~;(I /\ -rentalCarHasBeenPickedUp /\ sessionNewBranchRC~;'_SESSION';sessionNewBranchRC);contractedPickupBranch |- carType~;carAvailableAt
MEANING "When creating a new rental contract, car types and pick-up branch must be selected such that the branch has cars of that type available."
VIOLATION (TXT "Cars of type ", SRC I, TXT " are not available at ", TGT I)

PURPOSE RULE "Auto submit new branch request"
{+When a rental request in a branch is filled in, and they keys have already been handed over, the request is considered to be submitted.-}
ROLE ExecEngine MAINTAINS "Auto submit new branch request"
RULE "Auto submit new branch request": '_SESSION';sessionNewBranchRC;(I /\ rcKeysHandedOverQ;'Yes';rcKeysHandedOverQ~) |- sessionNewBranchRC;rcBranchRequestedQ;'Yes';rcBranchRequestedQ~
MEANING "A rental that is newly created at a branch office, for which the car keys have been handed over, is considered to be requested."
VIOLATION (TXT "{EX} InsPair;rcBranchRequestedQ;RentalCase;", TGT I, TXT ";YesNoAnswer;Yes")

PURPOSE RULE "Assigning a car to a rental"
{+Branch offices may only assign a car to a (new or existing) rental if this car is available at that branch.-}
RULE "Assigning a car to a rental":
   '_SESSION'
   ;( sessionNewBranchRC
    \/ (  sessionBranch;contractedPickupBranch~
       /\ sessionPickupPerson;(rcRenter \/ rcDriver)~
       )
   );(rentalHasBeenPromised /\ -rentalCarHasBeenPickedUp);rcAssignedCar 
|- sessionBranch;carAvailableAt~
MEANING "A branch office may only assign cars that are available at that location."
VIOLATION (TGT I, TXT "is not available at ", SRC sessionBranch)

PURPOSE RULE "Car key handover to the driver"
{+When a branch office has assigned a car to a (new or existing) rental, the keys must be handed to the contracted driver.-}
ROLE Branch MAINTAINS "Car key handover to the driver"
RULE "Car key handover to the driver": 
   '_SESSION'
   ;(  ( sessionNewBranchRC
        \/ (  sessionBranch;contractedPickupBranch~
           /\ sessionPickupPerson;(rcRenter \/ rcDriver)~
           )
      );(rentalHasBeenPromised /\ -rentalCarHasBeenPickedUp)
      ;rcAssignedCar
   /\ 
      sessionBranch;carAvailableAt~
   )   
|- sessionNewBranchRC;rcKeysHandedOverQ;'Yes';V
MEANING "The key handover must be registered."
VIOLATION (TXT "When keys are handed over, answer 'Are car keys handed over?' with 'Yes'.")

ENDPROCESS
------------------------------------------------------------
sessionDroppedOffCar :: SESSION * Car [UNI]
sessionDroppedoffRC  :: SESSION * RentalCase [UNI]

INTERFACE "Drop-off" 
   ( sessionToday
   , sessionBranch
   , sessionNewBranchRC
   , sessionPickupPerson
   , sessionDroppedOffCar
   , sessionDroppedOffPerson 
-- Drop-off details
-- , contractedDropOffBranch
-- , contractedEndDate
   , rcDroppedOffCar
-- , rcDroppedOffBranch
-- , rcDroppedOffDate
-- Other stuff
   , rentalIsPaidQ
   ) FOR Branch : I[RentalCase];(sessionDroppedoffRC~;'_SESSION';sessionDroppedoffRC)
                  /\ rentalCarHasBeenPickedUp /\ -rentalHasBeenEnded 
BOX[ "Contract details" : I  -- INTERFACE "Show Contract Details"
   BOX[ "Pick-up branch" : contractedPickupBranch
      , "Drop-off branch" : contractedDropOffBranch
      , "Start date" : contractedStartDate
      , "End date" : contractedEndDate
      , "Car type" : contractedCarType
      , "Issued car" : rcAssignedCar
      ]
   , "Customer details" : I  -- INTERFACE "Show Customer Details"
   BOX[ "Driver" : rcDriver
      , "VALID driving license" : rcDrivingLicense
      , "Renter" : rcRenter
      ]
   , "Drop-off details" : I  -- INTERFACE "Edit Drop-off Details"
   BOX[ "Contracted drop-off branch" : contractedDropOffBranch
      , "Contracted drop-off end date" : contractedEndDate
      , "Dropped-off car" : rcDroppedOffCar
      , "Actual drop-off branch" : rcDroppedOffBranch
      , "Acutal drop-off date" : rcDroppedOffDate
      ]
   , "Billing details"  : I  -- INTERFACE "Show Billing Details"
   BOX[ "Part 1: Basic Charge" : I
      BOX[ "Number of days" : rentalPeriod
         , "Tariff per day" : rcAssignedCar;carType;rentalTariffPerDay
         , "Basic charge" : rentalBasicCharge
         ]
      , "Part 2: Penalty charge for exceeding contracted duration" : I
      BOX[ "Number of days" : rentalExcessPeriod
         , "Tariff per day" : rcAssignedCar;carType;excessTariffPerDay
         , "Penalty charge" : rentalPenaltyCharge
         ]
      , "Part 3: Penalty charge for uncontractual drop-off": I
      BOX[ "Contracted drop-off branch" : contractedDropOffBranch
         , "Actual drop-off branch" : rcDroppedOffBranch
         , "Distance (km)": (I /\ rcDroppedOffBranch;contractedDropOffBranch~);V;'0'[Distance] \/ 
                            (I /\ rcDroppedOffBranch;-I;contractedDropOffBranch~);(rcDroppedOffBranch;distbranch~ /\ contractedDropOffBranch;distbranch~);distance
   --       , "Distance tariff" : yyy
         , "Penalty charge" : rentalLocationPenaltyCharge
         ]
     , "TOTAL charge" : rentalCharge
     ]
   , "Payment received?" : rentalIsPaidQ
   , "Rental status" : I
   BOX[ "Has rental been started?" : rentalHasBeenStarted;V;'Yes'[YesNoAnswer] \/ (I /\ -rentalHasBeenStarted);V;'No'[YesNoAnswer]
      , "Has car been dropped-off?" : rentalCarHasBeenDroppedOff;V;'Yes'[YesNoAnswer] \/ (I /\ -rentalCarHasBeenDroppedOff);V;'No'[YesNoAnswer]
      , "Has payment been requested?" : paymentHasBeenRequested;V;'Yes'[YesNoAnswer] \/ (I /\ -paymentHasBeenRequested);V;'No'[YesNoAnswer]
      , "Has payment been received?" : rentalIsPaidQ \/ (I /\ -(rentalIsPaidQ;rentalIsPaidQ~));V;'No'[YesNoAnswer]
      , "Has rental been ended?" : rentalHasBeenEnded;V;'Yes'[YesNoAnswer] \/ (I /\ -rentalHasBeenEnded);V;'No'[YesNoAnswer]
      ]
   ]

-----------------------------------------------------------
PROCESS "Branch Drop-offs and Payment Signaling"

ROLE Branch MAINTAINS "Register dropped-off car"
RULE "Register dropped-off car":
   I /\ sessionDroppedoffRC~;'_SESSION';sessionDroppedoffRC
|- rcDroppedOffCar;rcDroppedOffCar~
VIOLATION (TXT "After acceptance of the dropped-off car and having received the keys, please register the car's license plate.")

ROLE Branch MAINTAINS "Request rental payment"
RULE "Request rental payment": 
   I /\ sessionDroppedoffRC~;'_SESSION';sessionDroppedoffRC
     /\ rentalCarHasBeenDroppedOff
|- paymentHasBeenRequested
VIOLATION (TXT "Request ", SRC rcRenter, TXT " to pay ", SRC rentalCharge, TXT " Euros, for having rented ", SRC rcDroppedOffCar, TXT ".")

ROLE Branch MAINTAINS "Obtain rental payment"
RULE "Obtain rental payment": 
   I /\ sessionDroppedoffRC~;'_SESSION';sessionDroppedoffRC
     /\ paymentHasBeenRequested
|- rentalIsPaidQ;'Yes';rentalIsPaidQ~
VIOLATION (TXT "Obtain payment from ", SRC rcRenter, TXT " for the amount of ", SRC rentalCharge, TXT " Euros, for having rented ", SRC rcDroppedOffCar, TXT ".")

ENDPROCESS
-----------------------------------------------------------
PROCESS "Branch Interface: Handling Drop-offs and Payment"
PURPOSE PROCESS "Branch Interface: Handling Drop-offs and Payment"
{+The interfaces provided for branch offices, related to handling drop-offs, bill presentment and receiving payment, provide some automated functionality. This section describes the features for filling in or changing the contents of forms that are presented in such interfaces. The assumption is that this interface is only provided within branch offices, allowing EU-Rent employees to handle the dropping off of cars and obtaining rental payments.-}

PURPOSE RULE "Fetching the rental case for a drop-off"
{+Whenever a drop-off is requested, the associated rental case must be identified. This rental case has the following properties:
/start{itemize}
/item it lists the returned car as being rented
/item it shows that the car has been picked up and the rental has not yet been ended
/item the person returning the car is either the renter or the driver
/end{itemize}
-}
ROLE ExecEngine MAINTAINS "Fetching the rental case for a drop-off"
RULE "Fetching the rental case for a drop-off":
   '_SESSION';(I /\ sessionBranch;sessionBranch~)
   ;(sessionDroppedOffCar;rcAssignedCar~ \/ sessionDroppedOffPerson;(rcRenter \/ rcDriver)~)
   ;(I /\ rentalCarHasBeenPickedUp  /\ -rentalHasBeenEnded)
|- sessionDroppedoffRC
MEANING "The rental case of a drop-off is one where"
VIOLATION (TXT "{EX} InsPair;sessionDroppedoffRC;SESSION;", SRC I, TXT ";RentalCase;", TGT I)

sessionDroppedoffRC  :: SESSION * RentalCase [UNI] -- automatically filled in.
sessionDroppedOffCar :: SESSION * Car [UNI]
sessionDroppedOffPerson :: SESSION * Person [UNI]

PURPOSE RULE "Drop-off sanity check"
{+In order to be sure that the car that is presented for a drop-off should be processed, it must be verified that there is a rental contract for this car that says that the car has been picked-up but not yet dropped-off.-}
RULE "Drop-off sanity check": 
   I /\ sessionDroppedOffCar~;'_SESSION';(I /\ -(sessionDroppedoffRC;sessionDroppedoffRC~));sessionDroppedOffCar
|- rcAssignedCar~;(I /\ rentalCarHasBeenPickedUp  /\ -rentalCarHasBeenDroppedOff);rcAssignedCar 
MEANING "A car can only be dropped off if it has been rented (and not yet returned)."
VIOLATION (TGT I, TXT " cannot be processed (it is available at branch ", TGT carAvailableAt, TXT ").")

PURPOSE RULE "Accepting dropped-off car"
{+When the keys of a car are returned (and the branch employee has checked that the car has been returned is in good order), the car's license plate must be entered to complete the drop-off.-}
ROLE ExecEngine MAINTAINS "Accepting dropped-off car"
RULE "Accepting dropped-off car": (I /\ rentalCarHasBeenPickedUp /\ -rentalCarHasBeenDroppedOff);rcAssignedCar;(I /\ sessionDroppedOffCar~;'_SESSION';sessionDroppedOffCar) |- rcDroppedOffCar
MEANING "A car will be registered as having been dropped off in the rental case that says that this car has been picked up but not yet dropped off."
VIOLATION (TXT "{EX} InsPair;rcDroppedOffCar;RentalCase;", SRC I, TXT ";Car;", TGT I)

--$ Merk op: het is veel eenvoudiger om elke interface/interactie/transactie te onderscheiden naar precondities, omdat dan het uitwerken veel gemakkelijker wordt. Aan de andere kant is het ook zo dat als je dan 'algemere' drop-off regels zou wijzigen, deze weer in elke interface een plekje zouden moeten krijgen. Hoe doe je dat op een goede en gestructureerde manier zodat je altijd maar op 1 plaats bezig hoeft te zijn?

PURPOSE RULE "Cars are returned to the drop-off branch"
{+When a car is returned to a branch, this branch will play the role of drop-off branch.-}
ROLE ExecEngine MAINTAINS "Cars are returned to the drop-off branch"
RULE "Cars are returned to the drop-off branch":
   (I /\ -rentalCarHasBeenDroppedOff /\ rcDroppedOffCar;rcDroppedOffCar~)
  ;(rcDroppedOffCar;sessionDroppedOffCar~ \/ (rcRenter \/ rcDriver);sessionDroppedOffPerson~)
  ;'_SESSION';sessionBranch |- rcDroppedOffBranch
MEANING "The (actual) drop-off branch is the branch at which the car is presented for drop-off."
VIOLATION (TXT "{EX} InsPair;rcDroppedOffBranch;RentalCase;", SRC I, TXT ";Branch;", TGT I)

PURPOSE RULE "Cars are returned on the drop-off date"
{+When a car is returned to a branch, that date is the drop-off date.-}
ROLE ExecEngine MAINTAINS "Cars are returned on the drop-off date"
RULE "Cars are returned on the drop-off date":
   (I /\ -rentalCarHasBeenDroppedOff /\ rcDroppedOffCar;rcDroppedOffCar~)
  ;(rcDroppedOffCar;sessionDroppedOffCar~ \/ (rcRenter \/ rcDriver);sessionDroppedOffPerson~)
  ;'_SESSION';sessionToday |- rcDroppedOffDate
MEANING "The (actual) drop-off date is the date at which the car is presented for drop-off at a branch."
VIOLATION (TXT "{EX} InsPair;rcDroppedOffDate;RentalCase;", SRC I, TXT ";Date;", TGT I)

ENDPROCESS
-----------------------------------------------------------
ENDCONTEXT