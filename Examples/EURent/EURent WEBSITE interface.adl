CONTEXT EURentWEBSITEInterfaces IN ENGLISH
------------------------------------------------------------
{- You can do the following things on the EURent Website:
1. Register yourself (i.e. create an account)
   After registration, you are automatically logged in with that account
   This part of the functionality is provided by the SIAM module
2. Login.
   This allows you to view the RentalCases that you have requested (as well as historical ones)
   This part of the functionality is provided by the SIAM module
3. Apply for a rental (i.e.: create a RentalCase, fill in the required fields, and submit the request)
   Applying for a rental requires you to register yourself, or use an existing account
   This part of the functionality is what this file is about.
-}

INTERFACE "Customer Car Rentals": '_SESSION'[SESSION] cRud BOX <ROWSNL>
   [ "Anonymous sessions" : (I-(sessionAccount;sessionAccount~)) cRud BOX <ROWSNL>
      [ "Create new car rental" : I-(sessionRC;sessionRC~) cRud BOX -- Show 'button' if there is no current rental case
         [ "Login or Register" : I-(sessionAccount;sessionAccount~) cRud INTERFACE "Login/Register"
         , "Create new rental?" : sessionRCCreateReq cRUd
         ]
      , "Edit unpromised car rental" : I /\ sessionRC;(I-rentalHasBeenPromised);sessionRC~ 
                                       cRud INTERFACE "Edit unpromised car rental"
      ]
   , "Customer sessions" : I /\ sessionAccount;I[Customer];sessionAccount~ cRud BOX <ROWSNL>
      [ "Create new car rental" : I-(sessionRC;sessionRC~) cRud BOX -- Show 'button' if there is no current rental case
         [ "Create new rental?" : sessionRCCreateReq cRUd
         ]
      , "Edit unpromised car rental" : I /\ sessionRC;(I-rentalHasBeenPromised);sessionRC~ 
                                       cRud INTERFACE "Edit unpromised car rental"
      , "Show current promised car rentals" :  sessionRC;rentalHasBeenPromised cRud INTERFACE "View Rental Case" 
      , "List other promised car rentals" : ('_SESSION';V - sessionRC);rentalHasBeenPromised cRud INTERFACE "View Rental Cases"
      ]
   , "Employee sessions": I /\ sessionAccount;I[Employee];sessionAccount~ cRud BOX <ROWSNL>
      [ "Message": V;'You must be logged in as a customer to use this interface.'[IfcMsg] cRud
      , "Login or Register" : I-(sessionAccount;sessionAccount~) cRud INTERFACE "Login/Register"
      ]
   ]
POPULATION IfcMsg CONTAINS [ "You must be logged in as a customer to use this interface." ]

INTERFACE "Edit unpromised car rental" : I /\ sessionRC;(I-rentalHasBeenPromised);sessionRC~ cRud BOX <ROWSNL> -- If we have an unpromised current rental case
   [ "Login or Register" : I-(sessionAccount;sessionAccount~) cRud INTERFACE "Login/Register"
   , "Customer" : sessionRC cRud INTERFACE "Edit Customer Details"
   , "Rental"   : sessionRC cRud INTERFACE "Edit Contract Details"
   , "Workitems" : (sessionActiveRoles;workitemRole~ /\ sessionRC;rcWorkItem);workitemText cRud
--! following 3 lines do not generate a proper interface - to be discussed with @Michiel, so we do a workaround !--
--!, "Workitems" : '_SESSION' /\ sessionRC;rcWorkItem;workitemRole;sessionActiveRoles~ cRud ROWS
--!   [ "To do" : (sessionActiveRoles;workitemRole~ /\ sessionRC;rcWorkItem);workitemText cRud
--!   ]
   , "Costs"    : sessionRC cRud INTERFACE "Show Projected Regular Costs"
   , "Request submittal" : sessionRC;(rcMayBeRequested-rentalHasBeenPromised) cRud BOX
      [ "Submit?" : rentalHasBeenRequested cRUd
      ]
   ]

--[Signaling rules for field completion]-------------------
{-
rcSig :: RentalCase * RentalCase [PROP] -- Use RentalCase signalling only if one or more fields are filled in.

ROLE ExecEngine MAINTAINS "InsPair rcSig"
RULE "InsPair rcSig":  -- see https://github.com/AmpersandTarski/Ampersand/issues/579)
   I[RentalCase] /\ V;'_SESSION';(V[SESSION*Branch]-sessionBranch);V /\ 
   (  rcDrivingLicense;rcDrivingLicense~
   \/ rcPickupBranch;rcPickupBranch~
   \/ rcDropOffBranch;rcDropOffBranch~
-- \/ rcStartDate;rcStartDate~
   \/ rcEndDate;rcEndDate~
   \/ rcCarType;rcCarType~
   ) |- rcSig
VIOLATION (TXT "{EX} InsPair;rcSig;RentalCase;", SRC I, TXT ";RentalCase;", TGT I)

ROLE ExecEngine MAINTAINS "DelPair rcSig"
RULE "DelPair rcSig": -- see https://github.com/AmpersandTarski/Ampersand/issues/579)
rcSig
|- I[RentalCase] /\ V;'_SESSION';(V[SESSION*Branch]-sessionBranch);V /\ 
   (  rcDrivingLicense;rcDrivingLicense~
   \/ rcPickupBranch;rcPickupBranch~
   \/ rcDropOffBranch;rcDropOffBranch~
-- \/ rcStartDate;rcStartDate~
   \/ rcEndDate;rcEndDate~
   \/ rcCarType;rcCarType~
   )
VIOLATION (TXT "{EX} DelPair;rcSig;RentalCase;", SRC I, TXT ";RentalCase;", TGT I)

ROLE User MAINTAINS "Required field: Driver"
RULE "Required field: Driver"          : rcSig |- rcDriver;rcDriver~
VIOLATION (TXT "Required field 'Driver' must be filled in")

ROLE User MAINTAINS "Required field: Driving license"
RULE "Required field: Driving license" : rcSig |- rcDrivingLicense;rcDrivingLicense~
VIOLATION (TXT "Required field 'Driver' must be filled in")

ROLE User MAINTAINS "Required field: Pick-up branch"
RULE "Required field: Pick-up branch"  : rcSig |- rcPickupBranch;rcPickupBranch~
VIOLATION (TXT "Required field 'Pick-up branch' must be filled in")

ROLE User MAINTAINS "Required field: Drop-off branch"
RULE "Required field: Drop-off branch" : rcSig |- rcDropOffBranch;rcDropOffBranch~
VIOLATION (TXT "Required field 'Drop-off branch' must be filled in")

ROLE User MAINTAINS "Required field: Start date"
RULE "Required field: Start date"      : rcSig |- rcStartDate;rcStartDate~
VIOLATION (TXT "Required field 'Start date' must be filled in")

ROLE User MAINTAINS "Required field: End date"
RULE "Required field: End date"        : rcSig |- rcEndDate;rcEndDate~
VIOLATION (TXT "Required field 'End date' must be filled in")

ROLE User MAINTAINS "Required field: Car type"
RULE "Required field: Car type"        : rcSig |- rcCarType;rcCarType~
VIOLATION (TXT "Required field 'Car type' must be filled in")
-}
-----------------------------------------------------------
ENDCONTEXT