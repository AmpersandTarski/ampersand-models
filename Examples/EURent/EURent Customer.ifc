CONTEXT EURentWEBSITEInterfaces IN ENGLISH
------------------------------------------------------------
{- You can do the following things on the EURent Website:
1. Register yourself (i.e. create an account)
   After registration, you are automatically logged in with that account
   This part of the functionality is provided by the SIAM module
2. Login.
   This allows you to view the RentalCases that you have requested (as well as historical ones)
   This part of the functionality is provided by the SIAM module
3. Apply for a rental (i.e.: create a RentalCase, fill in the required fields, and submit the request)
   Applying for a rental requires you to register yourself, or use an existing account
   This part of the functionality is what this file is about.
-}

--[Customer website main interfaces]-----------------------

   INCLUDE "EURent Interfaces.adl"          -- Use predefined (smaller) user interfaces


--! Uitlog mogelijkheid toevoegen (zie EURent Employees)
--! Inzien van eigen rentals toevoegen (vgl EURent Employees)

PURPOSE INTERFACE "Customer Car Rentals"
{+ The "Customer Car Rentals" interface is the main interface for non-EURent Employees.
It is a tree of 'levels' (that can nicely be accommodated by using <ROWSNL>-type boxes,
because they do not show a box unless there is actually something to show).
At the highest level, we distinguish between 
- anonymous sessions (i.e. sessions in which no user has logged in)
- customer sessions (i.e. sessions in which a user has logged in with a Customer account)
- employee sessions (i.e. sessions in which a user has logged in with an Employee account)
(note that this exhausts all kinds of accounts)
Anonymous and Customer sessions allow the user to create, or continue the creation of a rental.
In order to submit a rental request, anonymous users need to register or login to make them 'own' the rental.
+}
INTERFACE "Customer Car Rentals": '_SESSION'[SESSION] cRud BOX <ROWSNL>
   [ "Anonymous sessions" : (I-(sessionAccount;sessionAccount~)) cRud BOX <ROWSNL>
      [ "Create new car rental" : I-(sessionStartRC;sessionStartRC~) cRud BOX -- Show 'button' if there is no current rental case
         [ "Login or Register" : I-(sessionAccount;sessionAccount~) cRud INTERFACE "Login/Register"
         , "Create new rental?" : sessionRCCreateReq cRUd
         ]
      , "Edit unpromised car rental" : I /\ sessionStartRC;(I-rentalHasBeenPromised);sessionStartRC~ 
                                       cRud INTERFACE "Edit unpromised car rental"
      ]
   , "Customer sessions" : I /\ sessionAccount;I[Customer];sessionAccount~ cRud BOX <ROWSNL>
      [ "Create new car rental" : I-(sessionStartRC;sessionStartRC~) cRud BOX -- Show 'button' if there is no current rental case
         [ "Create new rental?" : sessionRCCreateReq cRUd
         ]
      , "Edit unpromised car rental" : I /\ sessionStartRC;(I-rentalHasBeenPromised);sessionStartRC~ 
                                       cRud INTERFACE "Edit unpromised car rental"
      , "Show current promised car rentals" :  sessionStartRC;rentalHasBeenPromised cRud INTERFACE "View Rental Case" 
      , "List other promised car rentals" : ('_SESSION';V - sessionStartRC);rentalHasBeenPromised cRud INTERFACE "View Rental Cases"
      ]
   , "Employee sessions": I /\ sessionAccount;I[Employee];sessionAccount~ cRud BOX <ROWSNL>
      [ "Message": V;'You must be logged in as a customer to use this interface.'[IfcMsg] cRud
      , "Login or Register" : I-(sessionAccount;sessionAccount~) cRud INTERFACE "Login/Register"
      ]
   ]
POPULATION IfcMsg CONTAINS [ "You must be logged in as a customer to use this interface." ]

INTERFACE "Edit unpromised car rental" : '_SESSION' /\ sessionStartRC;(I-rentalHasBeenPromised);sessionStartRC~ cRud BOX <ROWSNL> -- If we have an unpromised current rental case
   [ "Login or Register" : I-(sessionAccount;sessionAccount~) cRud INTERFACE "Login/Register"
   , "Customer" : sessionStartRC cRud INTERFACE "Edit Customer Details"
   , "Rental"   : sessionStartRC cRud INTERFACE "Edit Contract Details"
--! @Michiel: following 3 lines do not generate a proper interface
   , "Workitems that do not work": '_SESSION' /\ sessionStartRC;rcWorkItem;workitemRole;sessionActiveRoles~ cRud ROWS
      [ "To do" : (sessionActiveRoles;workitemRole~ /\ sessionStartRC;rcWorkItem);workitemText cRud
      ]
--! Here is a workaround
   , "Workitems" : (sessionActiveRoles;workitemRole~ /\ sessionStartRC;rcWorkItem);workitemText cRud
--! End of workaround.
   , "Show costs?" : sessionStartRC;(I /\ rcCarType;V;contractualRentalPeriod~) cRud BOX
      [ "Projected costs" : I cRud INTERFACE "Show Projected Regular Costs"
      ]
   , "Request submittal" : sessionStartRC;(rcIsClean-rentalHasBeenPromised) cRud BOX
      [ "Submit?" : rentalHasBeenRequested cRUd
      ]
   ]

--[Login and Registration for Customers (and Developers)]--
INTERFACE "Login/Register": '_SESSION'[SESSION] cRud BOX <ROWSNL>
   [ "Login": '_SESSION'-(sessionAccount;sessionAccount~) cRud ROWS
      [ "Login": I cRud BOX <HCOLS>
         [ "Userid": loginUserid cRUd
         , "Password": loginPassword crUd -- crUd is needed for Passwords
--$The following two lines are meant for demonstration/development contexts only
         , "Please help": sessionLoginAssist cRUd
         , " ": sessionLoginAssist;(V-(V;I[Customer];V));'Cannot help - there are no Customer-accounts'[LoginMessage] cRud
         ]
      ]
--$This is for an easy login, for ease of demonstration/development
   , "LoginAssist ": sessionLoginAssist;V[SESSION*Customer] cRud ROWS
      [ " ": I cRud BOX <SHCOLS>
         [ "Login?": autoLoginAccount cRUd
         , "Userid": accUserid cRud
         , "Organization": accOrg cRud
         , "Person": accPerson cRud
         ]
      ]
   , "Register": ('_SESSION'-(sessionAccount;sessionAccount~))-sessionLoginAssist cRud ROWS
      [ "Register": I cRud BOX <HCOLS>
         [ "Userid" : loginUserid cRUd
         , "Password" : loginPassword crUd -- crUd is needed for Passwords
         , "Register?" : loginCreateAccount cRUd
         ]
      ]
   , "Show logged in user": I /\ sessionAccount;sessionAccount~ cRud BOX
      [ "Logged in as" : sessionAccount;accPersonRef cRud
      ]
   ]
POPULATION LoginMessage CONTAINS [ "Cannot help - there are no Customer-accounts" ]

--[Customer account management]----------------------------

ROLE ExecEngine MAINTAINS "Remember the most recently used driving-license of a customer"
RULE "Remember the most recently used driving-license of a customer":
   (I[Customer] /\ sessionAccount~;'_SESSION';sessionStartRC;rcDriver;accPersonRef~)
   ;sessionAccount~;'_SESSION';sessionStartRC;rcDrivingLicense
|- custDrivingLicense
VIOLATION (TXT "{EX} InsPair;custDrivingLicense;Account;", SRC I, TXT ";DrivingLicense;", TGT I)

ROLE ExecEngine MAINTAINS "The userid of a customer is its (initial) personref"
RULE "The userid of a customer is its (initial) personref":
   (I[Customer]-(accUserid;accUserid~));accPersonRef |- accUserid;V
VIOLATION (TXT "{EX} InsPair;accUserid;Account;", SRC I, TXT ";UserID;", TGT I)

-----------------------------------------------------------
ENDCONTEXT