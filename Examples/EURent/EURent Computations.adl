CONTEXT EURentComputations IN ENGLISH
-----------------------------------------------------------
PROCESS "Enforcing maximum rental duration"
RELATION rcMaxRentalDuration[RentalCase*NumberOfDays] [UNI]
MEANING "Rental contracts may specify the maximum rental duration."

RELATION rcRentalPeriodIsChecked[RentalCase*RentalCase] [PROP]
RELATION rcRentalPeriodIsWithinMaxRentalDuration[RentalCase*RentalCase] [PROP]
ROLE ExecEngine MAINTAINS "Check rental duration"
RULE "Check rental duration": I /\ rcStartDate;rcStartDate~ /\ rcEndDate;rcEndDate~ /\ rcMaxRentalDuration;rcMaxRentalDuration~ |- rcRentalPeriodIsChecked
VIOLATION (TXT "{EX} MaxDurationTest;", SRC I          -- RentalCase
                    ,TXT ";", SRC rcStartDate  -- StartDate
                    ,TXT ";", SRC rcEndDate    -- EndDate
                    ,TXT ";", SRC rcMaxRentalDuration  -- MaxDuration
          )
ENDPROCESS
-----------------------------------------------------------
PROCESS "Compute total rental charge"
RELATION arg1[CompRentalCharge*Amount] [UNI,TOT]
RELATION arg2[CompRentalCharge*Amount] [UNI,TOT]
RELATION arg3[CompRentalCharge*Amount] [UNI,TOT]
RELATION computedRentalCharge[CompRentalCharge*Amount] [UNI]
RULE "Uniqueness of rental charge computations": arg1;arg1~ /\ arg2;arg2~ /\ arg3;arg3~ |- I[CompRentalCharge]

-- Create a computation when there is a need for it
ROLE ExecEngine MAINTAINS "Trigger rental charge computation"
RULE "Trigger rental charge computation": 
   I /\ rentalBasicCharge;rentalBasicCharge~
     /\ rentalPenaltyCharge;rentalPenaltyCharge~
     /\ rentalLocationPenaltyCharge;rentalLocationPenaltyCharge~ 
|- (    rentalBasicCharge;arg1~ 
     /\ rentalPenaltyCharge;arg2~
     /\ rentalLocationPenaltyCharge;arg3~
   );V
VIOLATION (TXT "{EX} NewStruct;CompRentalCharge" -- atom generated automatically (with time stamp)
               ,TXT ";arg1;CompRentalCharge;_NEW;Amount;", SRC rentalBasicCharge
               ,TXT ";arg2;CompRentalCharge;_NEW;Amount;", SRC rentalPenaltyCharge
               ,TXT ";arg3;CompRentalCharge;_NEW;Amount;", SRC rentalLocationPenaltyCharge
           )

-- Compute the result whenever a computation exists
ROLE ExecEngine MAINTAINS "Compute rental charge"
RULE "Compute rental charge": I[CompRentalCharge] |- computedRentalCharge;computedRentalCharge~
VIOLATION (TXT "{EX} CompRentalCharge"
               , TXT ";computedRentalCharge;CompRentalCharge;", SRC I, TXT ";Amount"
               , TXT ";", SRC arg1
               , TXT ";", SRC arg2
               , TXT ";", SRC arg3
          )
ENDPROCESS
-----------------------------------------------------------
PROCESS "Compute number of regular days (period)"
RELATION earliestDate[DateDifferencePlusOne*Date] [UNI,TOT]
RELATION latestDate[DateDifferencePlusOne*Date] [UNI,TOT]
RELATION computedRentalPeriod[DateDifferencePlusOne*NumberOfDays] [UNI]
RULE "Uniqueness of period (plus one) computations": latestDate;latestDate~ /\ earliestDate;earliestDate~ |- I[DateDifferencePlusOne]

-- Create a computation when there is a need for it
ROLE ExecEngine MAINTAINS "Trigger projected rental period computation" -- Result = 1 + MAX(0, (Contracted end date - Contracted start date))
RULE "Trigger projected rental period computation": rcStartDate~;rcEndDate |- earliestDate~;latestDate
VIOLATION (TXT "{EX} NewStruct;DateDifferencePlusOne" -- atom generated automatically (with time stamp)
               ,TXT ";earliestDate;DateDifferencePlusOne;_NEW;Date;", SRC I
               ,TXT ";latestDate;DateDifferencePlusOne;_NEW;Date;", TGT I
           )

ROLE ExecEngine MAINTAINS "Trigger rental period computation" -- Result = 1 + MAX(0, (Actual end date - Actual start date))
RULE "Trigger rental period computation": rcStartDate~;rcDroppedOffDate |- earliestDate~;latestDate
VIOLATION (TXT "{EX} NewStruct;DateDifferencePlusOne" -- atom generated automatically (with time stamp)
               ,TXT ";earliestDate;DateDifferencePlusOne;_NEW;Date;", SRC I
               ,TXT ";latestDate;DateDifferencePlusOne;_NEW;Date;", TGT I
           )

-- Compute the result whenever a computation exists
ROLE ExecEngine MAINTAINS "Compute number of days in period"
RULE "Compute number of days in period": I[DateDifferencePlusOne] |- computedRentalPeriod;computedRentalPeriod~
VIOLATION (TXT "{EX} DateDifferencePlusOne" -- Result = 1 + MAX(0, (Actual end date - Actual start date))
               , TXT ";computedRentalPeriod;DateDifferencePlusOne;", SRC I, TXT ";NumberOfDays"
               , TXT ";", SRC earliestDate -- = Actual start date
               , TXT ";", SRC latestDate -- = Actual end date
          )
ENDPROCESS
-----------------------------------------------------------
PROCESS "Compute tariffed (regular or excess) charge"
RELATION ctcNrOfDays[CompTariffedCharge*NumberOfDays] [UNI,TOT]
RELATION ctcDailyAmount[CompTariffedCharge*Amount] [UNI,TOT]
RELATION computedTariffedCharge[CompTariffedCharge*Amount] [UNI]
RULE "Uniqueness of tariffed charge computations": ctcNrOfDays;ctcNrOfDays~ /\ ctcDailyAmount;ctcDailyAmount~ |- I[CompTariffedCharge]

-- Create a computation when there is a need for it
ROLE ExecEngine MAINTAINS "Trigger projected basic charge computation"
RULE "Trigger projected basic charge computation": contractualRentalPeriod~;rcCarType;rentalTariffPerDay |- ctcNrOfDays~;ctcDailyAmount
VIOLATION (TXT "{EX} NewStruct;CompTariffedCharge" -- atom generated automatically (with time stamp)
               ,TXT ";ctcNrOfDays;CompTariffedCharge;_NEW;NumberOfDays;", SRC I
               ,TXT ";ctcDailyAmount;CompTariffedCharge;_NEW;Amount;", TGT I
           )

ROLE ExecEngine MAINTAINS "Trigger regular charge computation"
RULE "Trigger regular charge computation": rentalPeriod~;rcAssignedCar;carType;rentalTariffPerDay |- ctcNrOfDays~;ctcDailyAmount
VIOLATION (TXT "{EX} NewStruct;CompTariffedCharge" -- atom generated automatically (with time stamp)
               ,TXT ";ctcNrOfDays;CompTariffedCharge;_NEW;NumberOfDays;", SRC I
               ,TXT ";ctcDailyAmount;CompTariffedCharge;_NEW;Amount;", TGT I
           )

ROLE ExecEngine MAINTAINS "Trigger excess charge computation"
RULE "Trigger excess charge computation": rentalExcessPeriod~;rcAssignedCar;carType;excessTariffPerDay |- ctcNrOfDays~;ctcDailyAmount
VIOLATION (TXT "{EX} NewStruct;CompTariffedCharge" -- atom generated automatically (with time stamp)
               ,TXT ";ctcNrOfDays;CompTariffedCharge;_NEW;NumberOfDays;", SRC I
               ,TXT ";ctcDailyAmount;CompTariffedCharge;_NEW;Amount;", TGT I
           )

-- Compute the result whenever a computation exists
ROLE ExecEngine MAINTAINS "Compute charge based on number of days"
RULE "Compute charge based on number of days": I[CompTariffedCharge] |- computedTariffedCharge;computedTariffedCharge~
VIOLATION (TXT "{EX} CompTariffedCharge"
               , TXT ";computedTariffedCharge;CompTariffedCharge;", SRC I, TXT ";Amount"
               , TXT ";", SRC ctcNrOfDays
               , TXT ";", SRC ctcDailyAmount
          )
ENDPROCESS
-----------------------------------------------------------
PROCESS "Compute number of excess days (period)"
RELATION firstDate[DateDifference*Date] [UNI,TOT]
RELATION lastDate[DateDifference*Date] [UNI,TOT]
RELATION computedNrOfExcessDays[DateDifference*NumberOfDays] [UNI]
RULE "Uniqueness of period computations": firstDate;firstDate~ /\ lastDate;lastDate~ |- I[DateDifference]

-- Create a computation when there is a need for it
ROLE ExecEngine MAINTAINS "Trigger excess period computation" -- Result = MAX(0, (Actual end date - Contracted end date))
RULE "Trigger excess period computation": 
   I /\ rcEndDate;rcEndDate~ /\ rcDroppedOffDate;rcDroppedOffDate~
|- (rcEndDate;firstDate~ /\ rcDroppedOffDate;lastDate~);V
VIOLATION (TXT "{EX} NewStruct;DateDifference" -- atom generated automatically (with time stamp)
               ,TXT ";firstDate;DateDifference;_NEW;Date;", SRC rcEndDate
               ,TXT ";lastDate;DateDifference;_NEW;Date;", SRC rcDroppedOffDate
           )

-- Compute the result whenever a computation exists
ROLE ExecEngine MAINTAINS "Compute number of excess period days"
RULE "Compute number of excess period days": I[DateDifference] |- computedNrOfExcessDays;computedNrOfExcessDays~
VIOLATION (TXT "{EX} DateDifference"  -- Result = MAX(0, (Actual end date - Contracted end date))
               , TXT ";computedNrOfExcessDays;DateDifference;", SRC I, TXT ";NumberOfDays"
               , TXT ";", SRC firstDate
               , TXT ";", SRC lastDate
          )
ENDPROCESS
-----------------------------------------------------------
PROCESS "Distance computations"
RELATION distbranch[DistanceBetweenLocations*Branch] [TOT]
MEANING "A distance is computed relative to a branch."
RELATION distance[DistanceBetweenLocations*Distance] [UNI,TOT]
MEANING "There may be a distance between locations."

RULE "Completeness of distance table": -I[Branch] |- distbranch~;distbranch
MEANING "For all combinations of (different) branches, the distance between them is known."

ENDPROCESS
-----------------------------------------------------------
ENDCONTEXT