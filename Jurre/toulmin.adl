CONTEXT Toulmin
{- Aardige inleiding: http://dbnl.org/tekst/_taa008197601_01/_taa008197601_01_0048.php 
-}

{- Hieronder de termen die Toulmin hanteert
(Daaropvolgende Nederlandse termen zijn van Keers: "Argumentatie, redeneren, argumenteren, debatteren", Alphen a/d Rijn, 1974, p77)
Claim, Bewering (ook: Conclusie): assertions that authors would like to prove to their audience
Ground, Bewijsmateriaal (ook: Data, Fact): evidence and facts that help support a Claim, 
Warrant, Staving (ook: rechtvaardiging): an assumptions or rules that link a set of Grounds to a Claim
Backing, Ondersteuning van de staving: additional support of the warrant
Qualifier, Beperking: word that shows a claim may not be true in all circumtances (e.g. "presumably", "Some", "many")
Rebuttal, Voorbehoud: acknowledgement of another valid view of the situation (that may contradict the claim)
-}

INCLUDE "./Toulmin_TText_Module.adl"

-- EQUIVALENCE isaClaim[TText] [PROP] == I /\ groundForClaim~;groundForClaim
isaClaim :: TText * TText [PROP] -- define relation isaClaim as shorthand for I /\ groundForClaim~;groundForClaim
ROLE ExecEngine MAINTAINS "Equivalence - InsPair isaClaim"
RULE "Equivalence - InsPair isaClaim": I /\ groundForClaim~;groundForClaim |- isaClaim[TText]
VIOLATION (TXT "{EX} InsPair;isaClaim;TText;", SRC I, TXT ";TText;", TGT I)
ROLE ExecEngine MAINTAINS "Equivalence - DelPair isaClaim"
RULE "Equivalence - DelPair isaClaim": isaClaim[TText] |- I /\ groundForClaim~;groundForClaim
VIOLATION (TXT "{EX} DelPair;isaClaim;TText;", SRC I, TXT ";TText;", TGT I)

groundForClaim :: TText * TText -- SRC TText provides evidence (facts, observations, data) that justifies the claim made by TGT TText
-- EQUIVALENCE isaGround[TText] [PROP] == I /\ groundForClaim~;groundForClaim
isaGround :: TText * TText [PROP] -- define relation isaGround as shorthand for I /\ groundForClaim~;groundForClaim
ROLE ExecEngine MAINTAINS "Equivalence - InsPair isaGround"
RULE "Equivalence - InsPair isaGround": I /\ groundForClaim~;groundForClaim |- isaGround[TText]
VIOLATION (TXT "{EX} InsPair;isaGround;TText;", SRC I, TXT ";TText;", TGT I)
ROLE ExecEngine MAINTAINS "Equivalence - DelPair isaGround"
RULE "Equivalence - DelPair isaGround": isaGround[TText] |- I /\ groundForClaim~;groundForClaim
VIOLATION (TXT "{EX} DelPair;isaGround;TText;", SRC I, TXT ";TText;", TGT I)

warrantForClaim :: TText * TText -- SRC TText warrants the justification of the claim of TGT TText based on every of its grounds
-- EQUIVALENCE isaWarrant[TText] [PROP] == I /\ warrantForClaim~;warrantForClaim
isaWarrant :: TText * TText [PROP] -- define relation isaWarrant as shorthand for I /\ warrantForClaim~;warrantForClaim
ROLE ExecEngine MAINTAINS "Equivalence - InsPair isaWarrant"
RULE "Equivalence - InsPair isaWarrant": I /\ warrantForClaim~;warrantForClaim |- isaWarrant[TText]
VIOLATION (TXT "{EX} InsPair;isaWarrant;TText;", SRC I, TXT ";TText;", TGT I)
ROLE ExecEngine MAINTAINS "Equivalence - DelPair isaWarrant"
RULE "Equivalence - DelPair isaWarrant": isaWarrant[TText] |- I /\ warrantForClaim~;warrantForClaim
VIOLATION (TXT "{EX} DelPair;isaWarrant;TText;", SRC I, TXT ";TText;", TGT I)

rebuttalForClaim :: TText * TText -- SRC TText specifies exceptions where the claim of TGT TText is, or may not be justified.
-- EQUIVALENCE isaRebuttal[TText] [PROP] == I /\ rebuttalForClaim~;rebuttalForClaim
isaRebuttal :: TText * TText [PROP] -- define relation isaRebuttal as shorthand for I /\ rebuttalForClaim~;rebuttalForClaim
ROLE ExecEngine MAINTAINS "Equivalence - InsPair isaRebuttal"
RULE "Equivalence - InsPair isaRebuttal": I /\ rebuttalForClaim~;rebuttalForClaim |- isaRebuttal[TText]
VIOLATION (TXT "{EX} InsPair;isaRebuttal;TText;", SRC I, TXT ";TText;", TGT I)
ROLE ExecEngine MAINTAINS "Equivalence - DelPair isaRebuttal"
RULE "Equivalence - DelPair isaRebuttal": isaRebuttal[TText] |- I /\ rebuttalForClaim~;rebuttalForClaim
VIOLATION (TXT "{EX} DelPair;isaRebuttal;TText;", SRC I, TXT ";TText;", TGT I)

--[Copying Scopes (and trigger Scope copying)]--
scopeIsArgumentTemplate :: Scope * Scope [PROP] -- Scope contains TTexts that are a template for a Toulmin argument
argumentIsBeingInitialized :: Scope * Scope [PROP] -- Toulmin argument Scope is being constructed from its template

ROLE ExecEngine MAINTAINS "Create Argument TTexts from Argument Template"
RULE "Create Argument TTexts from Argument Template":
   ttScope;scopeIsArgumentTemplate;scopeIII;argumentIsBeingInitialized |- ttScope
VIOLATION (TXT "{EX} InsAtom;TText"
              ,TXT "{EX} InsPair;ttScope;TText;_NEW;Scope;", TGT I
              ,TXT "{EX} InsPair;ttICO;TText;_NEW;TText;", SRC I[TText]
              ,TXT "{EX} InsPair;ttName;TText;_NEW;TTName;", SRC ttName
          -- Andere attributen (moeten) worden gekopieerd door de regels uit de Inclusion service
          )
ROLE ExecEngine MAINTAINS "Argument remains 'being initialized' until all TTexts from the template have been copied"
RULE "Argument remains 'being initialized' until all TTexts from the template have been copied": 
   scopeIsArgumentTemplate;scopeIII;argumentIsBeingInitialized |- ttScope~;-(ttICO~;ttScope)
VIOLATION (TXT "{EX} DelPair;argumentIsBeingInitialized;TText;", TGT I, TXT ";TText;", TGT I)

RELATION instantiateToulminArgumentTemplateReq[Scope*ScopeID] [UNI] -- Create a copy of an existing scope, (with the newly specified ScopeID)
ROLE ExecEngine MAINTAINS "Create a new instance of a Toulmin Argument Template"
RULE "Create a new instance of a Toulmin Argument Template":
    scopeIsArgumentTemplate;instantiateToulminArgumentTemplateReq |- scopeIII;scopeID
VIOLATION (TXT "{EX} InsAtom;Scope"
              ,TXT "{EX} InsPair;scopeID;Scope;_NEW;ScopeID;", TGT I
              ,TXT "{EX} InsPair;scopeIII;Scope;", SRC I, TXT ";Scope;_NEW"
          ,TXT "{EX} DelPair;instantiateToulminArgumentTemplateReq;Scope;", SRC I, TXT ";ScopeID;", TGT I
          ,TXT "{EX} SetNavToOnCommit;/ToulminArgument/_NEW"
          )

--[Toulmin Interfaces]



INTERFACE "ToulminArgument": I[Scope] cRud BOX
    [ "Scope": I cRud BOX <CDIV>
        [ "txt:ID": TXT "ID"
        , "ID": scopeID cRUd
        , "txt:Description": TXT "Description"
        , "Description": scopeDescr cRUd
        ]
    , "Claim": ttScope~;(isaClaim-groundForClaim) INTERFACE "Claim"
    ]

INTERFACE "Claims": V[SESSION*TText] INTERFACE "Claim"
INTERFACE "Claim": isaClaim CRuD BOX <SHCOLS>
    [ "Name": ttName cRUd
    , "Value": ttValue cRUd
--  , " " : compVar~ cRud
    , "Template": ttTemplate cRUd
    , "Grounds" : groundForClaim~ LINKTO INTERFACE "TText"
    , "Warrant" : warrantForClaim~
    , "Rebuttal": rebuttalForClaim~
    , "Instance": ttInstance cRud
    ]


ENDCONTEXT