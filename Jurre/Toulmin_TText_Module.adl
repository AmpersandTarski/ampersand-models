CONTEXT Toulmin_TText_Module

--[Basics]--
INCLUDE "../TText/Scope_Basics.adl"          -- Basic stuff for Scopes
INCLUDE "../TText/TText_Basics.adl"          -- Basic stuff for (hierarchies of) TTexts
INCLUDE "../TText/TText_Placeholders.svc"    -- Services for TText Placeholder processing
--INCLUDE "../TText/TText_Descriptions.adl"    -- Extension allowing TTexts to have a TTPhrase that functions as a description
--INCLUDE "../TText/TText_ValSuppliers.adl"    -- Extension allowing placeholders to refer to so-called `TParty`s, i.e. users of the application

--[Supply, Compute and Assign TText Values (optional extensions)]--
--INCLUDE "../TText/Assignments.svc"           -- Service that keeps track of changes in TText value-assignments
--INCLUDE "../TText/Computations.svc"          -- Service that allows values of TTexts to be computed (manually (later perhaps also automatically))
--INCLUDE "../TText/TText_LoAs.adl"            -- ISO Authentication- and validation levels

--[Including stuff from one Scope into another scope]-- **RJ: If you add attributes to Scopes or TTexts, you should add appropriate Inclusion services here below**
INCLUDE "../TText/Scope_Inclusion.svc"        -- Service that enables scopes to be included in other scopes
INCLUDE "../TText/TText_Inclusion.svc"        -- Service that includes TTexts from one (source) scope into another (target) scope
--INCLUDE "../TText/TValSup_Inclusion.svc"      -- Service that includes TParty Contents from one (source) scope into another (target) scope
--INCLUDE "../TText/TText_LoAInclusion.svc"     -- Service that includes LoAs from one (source) scope into another (target) scope

--[Carbon copying stuff]-- **RJ: If you add attributes to Scopes or TTexts, you should add appropriate CarbonCopy services here below**
INCLUDE "../TText/Scope_CarbonCopy.svc"       -- Service that maintains the 'carbon copy' property of Scopes
INCLUDE "../TText/TText_CarbonCopy.svc"       -- Service that maintains the 'carbon copy' property of TTexts in a target scope
--INCLUDE "../TText/TValSup_CarbonCopy.svc"     -- Service that maintains the 'carbon copy' property of TParties in a target scope
--INCLUDE "../TText/TText_LoACarbonCopy.svc"    -- Service that maintains the 'carbon copy' property of LoAs in a target scope

--[Ownership stuff]--**RJ: If you add attributes to Scopes or TTexts, you should add appropriate ownership services here below**
--INCLUDE "../TText/TText_SIAMv4_Module.adl" -- Sessions, Identity & Access Management facilities
--INCLUDE "../TText/Scope_SIAM_Extensions.adl" -- SIAM Extensions for Scopes (e.g. Scope Ownership)
--INCLUDE "../TText/TText_SIAM_Extensions.adl" -- SIAM Extensions for TTexts (e.g. TText Ownership)
--INCLUDE "../TText/TValSup_SIAM_Extensions.adl" -- SIAM Extensions for TTexts (e.g. TText Ownership)

--[Example interfaces (optional)]--
INCLUDE "../TText/Scope_Basics.ifc"          -- Simple Interfaces for Scopes
INCLUDE "../TText/TText_Basics.ifc"          -- Simple Interfaces for TTExts
--INCLUDE "../TText/TText_ValSuppliers.ifc"    -- Simple Interfaces for Value Suppliers
--INCLUDE "../TText/Computations.ifc"          -- Simple Interfaces for doing compuations
--INCLUDE "../TText/Assignments.ifc"           -- Simple Interfaces for Assignment inspections

--[Toulmin TText attribute inclusion and carbon copying]--
-- Toulmin TText attribute: including `groundForClaim[TText*TText]`:
ROLE ExecEngine MAINTAINS "Initialize copied groundForClaim"
RULE "Initialize copied groundForClaim": (I-groundForClaim;groundForClaim~);ttICO;groundForClaim |- groundForClaim
VIOLATION (TXT "{EX}_;InsPair_;groundForClaim_;TText_;", SRC I[TText], TXT "_;TText_;", TGT I[TText])

-- Toulmin TText attribute: carbon copying `groundForClaim[TText*TText]`:
ROLE ExecEngine MAINTAINS "Create/Update copied groundForClaim"
RULE "Create/Update copied groundForClaim": ttICCO;groundForClaim |- groundForClaim
VIOLATION (TXT "{EX}_;InsPair_;groundForClaim_;TText_;", SRC I[TText], TXT "_;TText_;", TGT I[TText])
ROLE ExecEngine MAINTAINS "Update deleted groundForClaim"
RULE "Update deleted groundForClaim": ttICCO;(I-groundForClaim;groundForClaim~) |- (I-groundForClaim;groundForClaim~);ttICCO
VIOLATION (TXT "{EX}_;DelPair_;groundForClaim_;TText_;", SRC I[TText], TXT "_;TText_;", SRC groundForClaim)

-- Toulmin TText attribute: including `warrantForClaim[TText*TText]`:
ROLE ExecEngine MAINTAINS "Initialize copied warrantForClaim"
RULE "Initialize copied warrantForClaim": (I-warrantForClaim;warrantForClaim~);ttICO;warrantForClaim |- warrantForClaim
VIOLATION (TXT "{EX}_;InsPair_;warrantForClaim_;TText_;", SRC I[TText], TXT "_;TText_;", TGT I[TText])

-- Toulmin TText attribute: carbon copying `warrantForClaim[TText*TText]`:
ROLE ExecEngine MAINTAINS "Create/Update copied warrantForClaim"
RULE "Create/Update copied warrantForClaim": ttICCO;warrantForClaim |- warrantForClaim
VIOLATION (TXT "{EX}_;InsPair_;warrantForClaim_;TText_;", SRC I[TText], TXT "_;TText_;", TGT I[TText])
ROLE ExecEngine MAINTAINS "Update deleted warrantForClaim"
RULE "Update deleted warrantForClaim": ttICCO;(I-warrantForClaim;warrantForClaim~) |- (I-warrantForClaim;warrantForClaim~);ttICCO
VIOLATION (TXT "{EX}_;DelPair_;warrantForClaim_;TText_;", SRC I[TText], TXT "_;TText_;", SRC warrantForClaim)

-- Toulmin TText attribute: including `rebuttalForClaim[TText*TText]`:
ROLE ExecEngine MAINTAINS "Initialize copied rebuttalForClaim"
RULE "Initialize copied rebuttalForClaim": (I-rebuttalForClaim;rebuttalForClaim~);ttICO;rebuttalForClaim |- rebuttalForClaim
VIOLATION (TXT "{EX}_;InsPair_;rebuttalForClaim_;TText_;", SRC I[TText], TXT "_;TText_;", TGT I[TText])

-- Toulmin TText attribute: carbon copying `rebuttalForClaim[TText*TText]`:
ROLE ExecEngine MAINTAINS "Create/Update copied rebuttalForClaim"
RULE "Create/Update copied rebuttalForClaim": ttICCO;rebuttalForClaim |- rebuttalForClaim
VIOLATION (TXT "{EX}_;InsPair_;rebuttalForClaim_;TText_;", SRC I[TText], TXT "_;TText_;", TGT I[TText])
ROLE ExecEngine MAINTAINS "Update deleted rebuttalForClaim"
RULE "Update deleted rebuttalForClaim": ttICCO;(I-rebuttalForClaim;rebuttalForClaim~) |- (I-rebuttalForClaim;rebuttalForClaim~);ttICCO
VIOLATION (TXT "{EX}_;DelPair_;rebuttalForClaim_;TText_;", SRC I[TText], TXT "_;TText_;", SRC rebuttalForClaim)

ENDCONTEXT