CONTEXT EURentWEBSITEInterfaces IN ENGLISH
------------------------------------------------------------
{- The EURent Website specifies interfaces that are to be used 
by Customers and/or anonymous users. EURent employees have their
own website.
On the EURent (customer) website, users can:
1. Register themselves (i.e. create a Customer account)
   after which they are automatically logged in with that account
   and may (continue to) create a rental.
2. Login (with a Customer account).
   after which they can view the rentals that they have requestd
   (as well as historical ones).
3. Apply for a rental (i.e.: create a new rental,
   i.e. fill in the required fields, and submit the request).
   Applying for a rental requires you to register yourself, 
   or use an existing account.
This functionality is partly provided by the SIAM module
as well as other modules (that are INCLUDEd as appropriate)
-}

--[Customer Accounts]---------------------------------------
CONCEPT Customer "an Account that is used by customers of EURent"
CLASSIFY Customer ISA Account
ROLE ExecEngine MAINTAINS "All Customer accounts have the (default) role 'Customer'"
RULE "All Customer accounts have the (default) role 'Customer'": 
  I[Customer] |- accAllowedRoles;'Customer';accAllowedRoles~
VIOLATION (TXT "{EX} InsPair;accAllowedRoles;Account;", SRC I, TXT ";Role;Customer"
          ,TXT "{EX} InsPair;accDefaultRoles;Account;", SRC I, TXT ";Role;Customer"
          )

RELATION custDrivingLicense[Customer*DrivingLicense] [UNI]

ROLE ExecEngine MAINTAINS "Default value for Driving License"
RULE "Default value for Driving License":
  (I-(rcDrivingLicense;rcDrivingLicense~));rcAuthorAcc;I[Customer];custDrivingLicense |- rcDrivingLicense
VIOLATION (TXT "{EX} InsPair;rcDrivingLicense;RentalCase;", SRC I, TXT ";DrivingLicense;", TGT I)

--[Rental creation]----------------------------------------

RELATION sessionRCCreateReq[SESSION*SESSION] [PROP] -- User has requested the creation of a new rental.

ROLE ExecEngine MAINTAINS "Create a car rental upon request"
RULE "Create a car rental upon request": sessionRCCreateReq |- sessionStartRC;sessionStartRC~
VIOLATION (TXT "{EX} NewStruct;RentalCase"
          ,TXT ";sessionStartRC;SESSION;", SRC I, TXT ";RentalCase;_NEW"
          )

ROLE ExecEngine MAINTAINS "Reset rental creation request"
RULE "Reset rental creation request": sessionStartRC |- (I-sessionRCCreateReq);sessionStartRC
VIOLATION (TXT "{EX} DelPair;sessionRCCreateReq;SESSION;", SRC I, TXT ";SESSION;", SRC I)

ROLE ExecEngine MAINTAINS "Auto delete unpromised session rentals from expired sessions" -- Kill rentals that are not 'born' when the mother dies...
RULE "Auto delete unpromised session rentals from expired sessions": 
   I[RentalCase]-rentalHasBeenPromised |- sessionStartRC~;sessionStartRC
VIOLATION (TXT "{EX} DelAtom;RentalCase;", SRC I)

--[Starting a Rental Case]----------------------------------

RELATION sessionStartRC[SESSION*RentalCase] [INJ,UNI] -- The 'current' rental case that is in the process of being started.
RELATION sessionCustomerRef[SESSION*PersonRef] [UNI] -- Search input: the PersonRef of the renter and/or driver
RELATION sessionDrivingLicense[SESSION*DrivingLicense] [UNI] -- Search input: the Driving license (to be) associated with the current rental.

RELATION rcStartSelectReq[RentalCase*RentalCase] [PROP] -- Request for the making a RentalCase 'current', that is in the startup phase.
ROLE ExecEngine MAINTAINS "Handle rcStartSelectReq if it is valid"
RULE "Handle rcStartSelectReq if it is valid": 
   "_SESSION"[SESSION];V;(rcStartSelectReq-rentalHasBeenStarted) |- sessionStartRC;(I-rcStartSelectReq)
VIOLATION (TXT "{EX} InsPair;sessionStartRC;SESSION;", SRC I, TXT ";RentalCase;", TGT I
          ,TXT "{EX} DelPair;rcStartSelectReq;RentalCase;", TGT I, TXT ";RentalCase;", TGT I
          ,TXT "{EX} DelPair;sessionCustomerRef;SESSION;", SRC I, TXT ";PersonRef;", SRC sessionCustomerRef
          ,TXT "{EX} DelPair;sessionDrivingLicense;SESSION;", SRC I, TXT ";DrivingLicense;", SRC sessionDrivingLicense
          )
ROLE ExecEngine MAINTAINS "Clear rcStartSelectReq if it is invalid"
RULE "Clear rcStartSelectReq if it is invalid":
   "_SESSION"[SESSION];V;(rcStartSelectReq /\ rentalHasBeenStarted) |- -V
VIOLATION (TXT "{EX} DelPair;rcStartSelectReq;RentalCase;", TGT I, TXT ";RentalCase;", TGT I
          ,TXT "{EX} DelPair;sessionCustomerRef;SESSION;", SRC I, TXT ";PersonRef;", SRC sessionCustomerRef
          ,TXT "{EX} DelPair;sessionDrivingLicense;SESSION;", SRC I, TXT ";DrivingLicense;", SRC sessionDrivingLicense
          )

-- The following property is a request to delete the link between `_SESSION` and the current rental-to-be-started.
RELATION sessionRCDelReq[SESSION*SESSION] [PROP] -- This property can be set from an INTERFACE
ROLE ExecEngine MAINTAINS "Deselect a 'starting' rental case as the current case in a session"
RULE "Deselect a 'starting' rental case as the current case in a session": 
   "_SESSION";sessionRCDelReq /\ sessionStartRC;sessionStartRC~ |- -V
VIOLATION (TXT "{EX} DelPair;sessionStartRC;SESSION;", SRC I, TXT ";RentalCase;", TGT I
          ,TXT "{EX} DelPair;sessionRCDelReq;SESSION;", SRC I, TXT ";SESSION;", SRC I
          )

ROLE ExecEngine MAINTAINS "Clear sessionStartRC in Customer sessions"
RULE "Clear sessionStartRC in Customer sessions": 
   ("_SESSION" /\ sessionAccount;I[Customer];sessionAccount~);sessionStartRC |- sessionStartRC;(I-rentalHasBeenPromised)
VIOLATION (TXT "{EX} DelPair;sessionStartRC;SESSION;", SRC I, TXT ";RentalCase;", TGT I
          ,TXT "{EX} DelPair;sessionRCDelReq;SESSION;", SRC I, TXT ";SESSION;", SRC I
          )

ROLE ExecEngine MAINTAINS "Clear sessionStartRC"
RULE "Clear sessionStartRC": 
   "_SESSION";sessionStartRC |- sessionStartRC;(I-rentalHasBeenStarted)
VIOLATION (TXT "{EX} DelPair;sessionStartRC;SESSION;", SRC I, TXT ";RentalCase;", TGT I
          ,TXT "{EX} DelPair;sessionRCDelReq;SESSION;", SRC I, TXT ";SESSION;", SRC I
          )

--[Dropping off rentals]----------------------------------------------

RELATION sessionStopRC[SESSION*RentalCase] [INJ,UNI] -- The 'current' rental case that is in the process of being started.
RELATION sessionCarID[SESSION*LicensePlate] [UNI] -- Search input: the license plate of the car to be dropped off
RELATION sessionCustomerRef[SESSION*PersonRef] [UNI] -- Search input: the PersonRef of the renter and/or driver
RELATION sessionDrivingLicense[SESSION*DrivingLicense] [UNI] -- Search input: the Driving license (to be) associated with the current rental.

RELATION rcStopSelectReq[RentalCase*RentalCase] [PROP] -- Request for the making a RentalCase 'current', that is in the drop-off phase.
ROLE ExecEngine MAINTAINS "Handle rcStopSelectReq if it is valid"
RULE "Handle rcStopSelectReq if it is valid": 
   "_SESSION"[SESSION];V;(rcStopSelectReq /\ (rentalHasBeenStarted-rentalHasBeenEnded)) |- sessionStopRC;(I-rcStopSelectReq)
VIOLATION (TXT "{EX} InsPair;sessionStopRC;SESSION;", SRC I, TXT ";RentalCase;", TGT I
          ,TXT "{EX} DelPair;rcStopSelectReq;RentalCase;", TGT I, TXT ";RentalCase;", TGT I
          ,TXT "{EX} DelPair;sessionCarID;SESSION;", SRC I, TXT ";LicensePlate;", SRC sessionCarID
          ,TXT "{EX} DelPair;sessionCustomerRef;SESSION;", SRC I, TXT ";PersonRef;", SRC sessionCustomerRef
          ,TXT "{EX} DelPair;sessionDrivingLicense;SESSION;", SRC I, TXT ";DrivingLicense;", SRC sessionDrivingLicense
          )
ROLE ExecEngine MAINTAINS "Clear rcStopSelectReq if it is invalid"
RULE "Clear rcStopSelectReq if it is invalid":
   "_SESSION"[SESSION];V;(rcStopSelectReq - (rentalHasBeenStarted-rentalHasBeenEnded)) |- -V
VIOLATION (TXT "{EX} DelPair;rcStopSelectReq;RentalCase;", TGT I, TXT ";RentalCase;", TGT I
          ,TXT "{EX} DelPair;sessionCarID;SESSION;", SRC I, TXT ";LicensePlate;", SRC sessionCarID
          ,TXT "{EX} DelPair;sessionCustomerRef;SESSION;", SRC I, TXT ";PersonRef;", SRC sessionCustomerRef
          ,TXT "{EX} DelPair;sessionDrivingLicense;SESSION;", SRC I, TXT ";DrivingLicense;", SRC sessionDrivingLicense
          )

-- The following property is a request to delete the link between `_SESSION` and the current rental-to-be-dropped-off.
RELATION sessionRCDelReq[SESSION*SESSION] [PROP] -- This property can be set from an INTERFACE
ROLE ExecEngine MAINTAINS "Deselect a 'drop-off' rental case as the current case in a session"
RULE "Deselect a 'drop-off' rental case as the current case in a session": 
   "_SESSION";sessionRCDelReq /\ sessionStopRC;sessionStopRC~ |- -V
VIOLATION (TXT "{EX} DelPair;sessionStopRC;SESSION;", SRC I, TXT ";RentalCase;", TGT I
          ,TXT "{EX} DelPair;sessionRCDelReq;SESSION;", SRC I, TXT ";SESSION;", SRC I
          )

ROLE ExecEngine MAINTAINS "Clear sessionStopRC"
RULE "Clear sessionStopRC": 
   "_SESSION";sessionStopRC |- sessionStopRC;(I-rentalHasBeenEnded)
VIOLATION (TXT "{EX} DelPair;sessionStopRC;SESSION;", SRC I, TXT ";RentalCase;", TGT I
          ,TXT "{EX} DelPair;sessionRCDelReq;SESSION;", SRC I, TXT ";SESSION;", SRC I
          )

--[Rental Authoring]----------------------------------------

{- **RULE BELOW MAY BE (OR HAS BEEN) TEMPORARILY COMMENTED OUT FOR DEBUGGING PURPOSES** 
RULE "A Rental authored by a Customer must list the Customer as the Renter":
  I[Customer];rcAuthorAcc~;rcRenter |- accPersonRef
-}
RELATION rcAuthorAcc[RentalCase*Account] [UNI] -- This can be the account of a Customer or an Employee
ROLE ExecEngine MAINTAINS "Set author account of rental case"
RULE "Set author account of rental case":
  (I-(rcAuthorAcc;rcAuthorAcc~));sessionStartRC~;sessionAccount |- rcAuthorAcc
VIOLATION (TXT "{EX} InsPair;rcAuthorAcc;RentalCase;", SRC I, TXT ";Account;", TGT I)

ROLE ExecEngine MAINTAINS "Default PersonRef for Driver"
RULE "Default PersonRef for Driver": 
  (I-(rcDriver;rcDriver~));rcAuthorAcc;I[Customer];accPersonRef |- rcDriver
VIOLATION (TXT "{EX} InsPair;rcDriver;RentalCase;", SRC I, TXT ";PersonRef;", TGT I)

ROLE ExecEngine MAINTAINS "Default PersonRef for Renter"
RULE "Default PersonRef for Renter": 
  (I-(rcRenter;rcRenter~));rcAuthorAcc;I[Customer];accPersonRef |- rcRenter
VIOLATION (TXT "{EX} InsPair;rcRenter;RentalCase;", SRC I, TXT ";PersonRef;", TGT I)

ROLE ExecEngine MAINTAINS "Removal of redundant Customer accounts"
RULE "Removal of redundant Customer accounts": 
  I[Customer] |-    accPersonRef;(rcDriver \/ rcRenter)~;V[RentalCase*Customer]
                 \/ rcAuthorAcc~;rcAuthorAcc
                 \/ sessionAccount~;sessionAccount
VIOLATION (TXT "{EX} DelAtom;Customer;", SRC I)

--[Rental work items and statuses]-------------------------

INCLUDE "EURent Workitems.adl"         -- Facility that enables editing workitems in 1 place
INCLUDE "EURent Statuses.adl"          -- Facility that enables editing status messages in 1 place

--[Signaling rules for field completion]-------------------
RELATION rcSig[RentalCase*RentalCase] [PROP] -- Use RentalCase signalling only if one or more fields are filled in.
{-
ROLE ExecEngine MAINTAINS "InsPair rcSig"
RULE "InsPair rcSig":  -- see https://github.com/AmpersandTarski/Ampersand/issues/579)
   I[RentalCase] /\ V;"_SESSION";(V[SESSION*Branch]-sessionBranch);V /\ 
   (  rcDrivingLicense;rcDrivingLicense~
   \/ rcPickupBranch;rcPickupBranch~
   \/ rcDropOffBranch;rcDropOffBranch~
-- \/ rcStartDate;rcStartDate~
   \/ rcEndDate;rcEndDate~
   \/ rcCarType;rcCarType~
   ) |- rcSig
VIOLATION (TXT "{EX} InsPair;rcSig;RentalCase;", SRC I, TXT ";RentalCase;", TGT I)

ROLE ExecEngine MAINTAINS "DelPair rcSig"
RULE "DelPair rcSig": -- see https://github.com/AmpersandTarski/Ampersand/issues/579)
rcSig
|- I[RentalCase] /\ V;"_SESSION";(V[SESSION*Branch]-sessionBranch);V /\ 
   (  rcDrivingLicense;rcDrivingLicense~
   \/ rcPickupBranch;rcPickupBranch~
   \/ rcDropOffBranch;rcDropOffBranch~
-- \/ rcStartDate;rcStartDate~
   \/ rcEndDate;rcEndDate~
   \/ rcCarType;rcCarType~
   )
VIOLATION (TXT "{EX} DelPair;rcSig;RentalCase;", SRC I, TXT ";RentalCase;", TGT I)
-}
ROLE ExecEngine MAINTAINS "Required field: Driver"
RULE "Required field: Driver"          : I /\ rcDriver;rcDriver~ |- rcSig
VIOLATION (TXT "{EX} InsPair;rcSig;RentalCase;", SRC I, TXT ";RentalCase;", TGT I)

ROLE ExecEngine MAINTAINS "Required field: Driving license"
RULE "Required field: Driving license" : I /\ rcDrivingLicense;rcDrivingLicense~ |- rcSig
VIOLATION (TXT "{EX} InsPair;rcSig;RentalCase;", SRC I, TXT ";RentalCase;", TGT I)

ROLE ExecEngine MAINTAINS "Required field: Renter"
RULE "Required field: Renter"          : I /\ rcRenter;rcRenter~ |- rcSig
VIOLATION (TXT "{EX} InsPair;rcSig;RentalCase;", SRC I, TXT ";RentalCase;", TGT I)

ROLE ExecEngine MAINTAINS "Required field: Pick-up branch"
RULE "Required field: Pick-up branch"  : I /\ rcPickupBranch;rcPickupBranch~ |- rcSig
VIOLATION (TXT "{EX} InsPair;rcSig;RentalCase;", SRC I, TXT ";RentalCase;", TGT I)

ROLE ExecEngine MAINTAINS "Required field: Drop-off branch"
RULE "Required field: Drop-off branch" : I /\ rcDropOffBranch;rcDropOffBranch~ |- rcSig
VIOLATION (TXT "{EX} InsPair;rcSig;RentalCase;", SRC I, TXT ";RentalCase;", TGT I)

ROLE ExecEngine MAINTAINS "Required field: Start date"
RULE "Required field: Start date"      : I /\ rcStartDate;rcStartDate~ |- rcSig
VIOLATION (TXT "{EX} InsPair;rcSig;RentalCase;", SRC I, TXT ";RentalCase;", TGT I)

ROLE ExecEngine MAINTAINS "Required field: End date"
RULE "Required field: End date"        : I /\ rcEndDate;rcEndDate~ |- rcSig
VIOLATION (TXT "{EX} InsPair;rcSig;RentalCase;", SRC I, TXT ";RentalCase;", TGT I)

ROLE ExecEngine MAINTAINS "Required field: Car type"
RULE "Required field: Car type"        : I /\ rcCarType;rcCarType~ |- rcSig
VIOLATION (TXT "{EX} InsPair;rcSig;RentalCase;", SRC I, TXT ";RentalCase;", TGT I)

ROLE ExecEngine MAINTAINS "DelPair rcSig"
RULE "DelPair rcSig": -- strange formulation relates to https://github.com/AmpersandTarski/Ampersand/issues/579)
  rcSig |- -( -(rcRenter;rcRenter~) 
           /\ -(rcDriver;rcDriver~)
           /\ -(rcDrivingLicense;rcDrivingLicense~)
           /\ -(rcPickupBranch;rcPickupBranch~)
           /\ -(rcDropOffBranch;rcDropOffBranch~)
           /\ -(rcStartDate;rcStartDate~)
           /\ -(rcEndDate;rcEndDate~)
           /\ -(rcCarType;rcCarType~)
           )
VIOLATION (TXT "{EX} DelPair;rcSig;RentalCase;", SRC I, TXT ";RentalCase;", TGT I)

-----------------------------------------------------------
ENDCONTEXT