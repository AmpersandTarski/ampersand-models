CONTEXT "MPTrx_BasicIfc" IN ENGLISH

--[Copying MPTrxs (and trigger MPTrx copying)]--
{-It is not obvious what the attributes of a newly created target `MPTrx` should be.
This holds in particular for the `mptrxIsaCasus` attribute,
which determines whether or not the MPTrx serves as a template (example)
or as a real working case.
To facilitate the creation of different MPTrx-flavours, we define a set of 'request'-relations
which, when populaed, will act as requests to create a target MPTrx of a particular flavour:
- `mptrxCreateTemplateReq` requests that the new target MPTrx 
  is a template (sets `mptrxIsaCasus`);
- `mptrxCreateCasusReq` requests that the new target MPTrx 
  is a casus (clears `mptrxIsaCasus`);
The set of requests can easily be expanded by adding rules 
in the application that uses this module.-}
RELATION mptrxCreateCasusReq[MPTrx*ScopeID] [UNI] -- Create a Casus (with the specified ID) based on an existing MPTrx
ROLE ExecEngine MAINTAINS "Create a new casus (non-template) from an existing MPTrx"
RULE "Create a new casus (non-template) from an existing MPTrx": mptrxCreateCasusReq |- scopeIII;scopeID
VIOLATION (TXT "{EX} NewStruct;MPTrx"
              ,TXT ";scopeID;Scope;_NEW;ScopeID;", TGT I
              ,TXT ";scopeIII;Scope;", SRC I[Scope], TXT ";Scope;_NEW"
              ,TXT ";mptrxIsaCasus;MPTrx;_NEW;MPTrx;_NEW"
          ,TXT "{EX} DelPair;mptrxCreateCasusReq;MPTrx;", SRC I[MPTrx], TXT ";ScopeID;", TGT I
          )

{- One could argue that the following two relation and rule 
should be moved to some INTERFACE-context. 
One argument would be that the [UNI] constraint is only there 
to make such INTERFACEs work nicely.-}
RELATION mptrxCreateTemplateReq[MPTrx*ScopeID] [UNI] -- MPTrx is being copied to another MPTrx that has (another) ScopeID
ROLE ExecEngine MAINTAINS "Create a new template (non-casus) from an existing MPTrx"
RULE "Create a new template (non-casus) from an existing MPTrx": mptrxCreateTemplateReq |- scopeIII;scopeID
VIOLATION (TXT "{EX} NewStruct;MPTrx"
              ,TXT ";scopeID;Scope;_NEW;ScopeID;", TGT I
              ,TXT ";scopeIII;Scope;", SRC I[Scope], TXT ";Scope;_NEW"
          ,TXT "{EX} DelPair;mptrxCreateTemplateReq;MPTrx;", SRC I[MPTrx], TXT ";ScopeID;", TGT I
          )

--[Overviews]--

INTERFACE "Transactions": '_SESSION'[SESSION];sessionAccount cRud TABS
   [ "My cases": 
      (tPartyAcc~;{-tParty-}ttScope \/ scopeOwner~);mptrxIsaCasus cRud  -- maintain (non-owned) Scopes in which the user participates
      INTERFACE "ShowMPTrxPartySummary"
   , "Cases I might join": 
      ( V;(I[TParty]-tPartyAcc;tPartyAcc~);ttScope  -- Cases with 'free' TParty positions
       - (tPartyAcc~;ttScope \/ scopeOwner~) -- except cases in which the user is already a TParty or owner
      );mptrxIsaCasus cRud -- and the case cannot be a template.
      INTERFACE "ShowMPTrxPartySummary"

    , "Cases I may join":
      ( ( V;(I-tPartyReqdOrg;tPartyReqdOrg~) -- TParties that do not require a specific organization
        \/ accOrg;tPartyReqdOrg~  -- as well as TParties that require an organization which the sessionaccount satisfies
        ) -- ... are the TParties that the user is allowed to play 
        ; -- Now we look for cases with free positions for such parties:
        (I[TParty]-tPartyAcc;tPartyAcc~);ttScope  -- Cases with 'free' TParty positions
        - (tPartyAcc~;ttScope \/ scopeOwner~) -- except cases in which the user is already a TParty or owner
      );mptrxIsaCasus cRud -- and the case cannot be a template.
      INTERFACE "ShowMPTrxPartySummary"
   , "Templates I own": 
      scopeOwner~;(I[MPTrx]-mptrxIsaCasus) cRuD
      INTERFACE "ShowMPTrxTemplateSummary"
   , "Templates I do not own": 
      (V[Account*MPTrx]-scopeOwner~);(I[MPTrx]-mptrxIsaCasus) cRud
      INTERFACE "ShowMPTrxTemplateSummary"
   ]

INTERFACE "My Profile": '_SESSION'[SESSION];sessionAccount cRud TABS
   [ "MPTrx templates": 
      scopeOwner~;(I-mptrxIsaCasus) CRuD -- Create and/or maintain my templates
      INTERFACE "CreateOrEditMyMPTrxTemplate"
   ]

--[MPTrxs/Scopes]--
INTERFACE "ShowMPTrxPartySummary": -- Summary for (un)owned MPTrxs (including templates)
   mptrxIsaCasus cRud BOX <ROWSNL>
   [ "Summary": I[MPTrx] cRud INTERFACE "ShowMPTrxSummary"
   , "Parties" : {-tParty-}ttScope~ cRud INTERFACE "TPartyManagement" -- <TPartyManagement>
   ]

INTERFACE "ShowMPTrxTemplateSummary": I[MPTrx]-mptrxIsaCasus BOX <SHCOLS>
   [ "MPTrx" :  I[MPTrx] cRud -- LINKTO INTERFACE "MPTrxCasus" -- (non)editing template interface
   , "Description" : scopeDescr cRud
   , "Subject/Object" : mptrxObjName cRud
   , "Create new MPTrx (ID)": mptrxCreateCasusReq cRUd -- Create a copy that is not a template
   ]

INTERFACE "EditMPTrxSummary": -- Summary for owned MPTrxs (including templates)
   I[MPTrx] /\ scopeOwner;sessionAccount~;'_SESSION';V[SESSION*MPTrx] cRud BOX <ROWSNL>
   [ "Summary": I COLS
      [ "MPTrx": I[MPTrx] cRud LINKTO INTERFACE "MPTrxCasus"
      , "Case name" : scopeID cRud
      , "Object" : mptrxObjName cRud 
      , "Description" : scopeDescr cRUd
      , "Owner" : scopeOwner cRud
   -- , "Save as template (ID)": mptrxCreateTemplateReq cRUd -- Create a copy that is a template
   -- , "New case (ID)": mptrxCreateCasusReq   cRUd -- Create a copy that is not a template
   -- , "Copy to (ID)": scopeCarbonCopyReq   cRUd -- Create a carbon copy (maintain 'template' property)
      , "Status" : I[MPTrx] cRud <MPTrxStatus> --! genereert foutief met: INTERFACE "MPTrxStatus" Deze INTERFACE wordt met cRud aangeroepen (zie positie 32 op deze regel) en heeft zelf ook een cRud op toplevel; toch laat hij (hier) een vakje laat zien waar je kunt aanvullen. 
      ]
   , "Parties" : {-tParty-}ttScope~ cRud INTERFACE "TPartyManagement" -- <TPartyManagement>
   ]

INTERFACE "New MPTrx": I[MPTrx] CRud INTERFACE "CreateOrEditMyMPTrxTemplate"
INTERFACE "CreateOrEditMyMPTrxTemplate": -- Define/edit a MPTrx / template that I own
   (I[MPTrx]-mptrxIsaCasus) /\ scopeOwner;sessionAccount~;'_SESSION';V[SESSION*MPTrx] cRuD COLS 
   [ "MPTrx template": I cRud LINKTO INTERFACE "MPTrx(TemplateOwnedByUser)"
   , "Name/ID": scopeID cRUd -- needed in case a new template is being created
   , "Description" : scopeDescr cRUd
-- , "My role(s)" : I[MPTrx];{-tParty-}ttScope~ cRud INTERFACE "TPartyManagement" -- <TPartyManagement>
-- , "Create new template (ID)": mptrxCreateTemplateReq cRUd -- Create a copy that is a template
-- , "Create new MPTrx (ID)": mptrxCreateCasusReq   cRUd -- Create a copy that is not a template
-- , "Copy to (ID)": scopeCarbonCopyReq   cRUd -- Create a carbon copy (maintain 'template' property)
-- , "Convert template to MPTrx?": I[MPTrx] cRUd
   ]

--[Individual MPTrx templates]--
INTERFACE "MPTrx(TemplateOwnedByUser)": 
   I[MPTrx] /\ scopeOwner;sessionAccount~;'_SESSION';V[SESSION*MPTrx] cRuD TABS
   [ "MPTrx Definition": I[MPTrx] cRud BOX <ROWSNL>
      [ "MPTrxs": I cRud INTERFACE "EditMPTrxSummary"
      , "My concerns": ttScope~;I[Concern] cRuD 
         INTERFACE "SpecifyOwnedConcerns" -- The INTERFACE selects the concerns owned by the user
      , "Others": ttScope~;(I[Concern] /\ ttOwner;-I;sessionAccount~;'_SESSION';V[SESSION*Concern]) cRud 
         INTERFACE "ShowUnOwnedConcerns" -- Any concern can be viewed
      ]
   , "TParties": {-tParty-}ttScope~ cRud COLS
      [ "Name" : {-tParty-}ttName cRud
      , "Description" : {-tParty-}ttDescr cRUd
      , "Required org" : tPartyReqdOrg cRUd
      ]   
   , "Data Management/Semantics":    -- Select the TTexts may be (re)defined, which are:
            (  ttScope~;I[Variable]  -- Variables (i.e. TTexts in an MPTrx, not being Concerns)
            /\ V[MPTrx*SESSION];'_SESSION';sessionAccount;ttOwner~  -- that are owned by the user
            ) --;ttIsUsedBy~  -- and that use TTexts.
            cRud BOX <SHCOLS>
      [ "Name" : ttName cRud -- We do not allow for name changes (yet), as this requires an update of all ttTemplate's in which it is used.
      , "Value supplier" : ttValSupName cRUd
      , "LoA" : ttReqdLoA cRUd -- supplier required authentication level
--    , "Vlvl" : ttReqdLoV cRUd -- TText reuqired validation level
      , "Specification" : ttTemplate cRUd
      , "Prm" : ttPromise cRUd <TTextCheckbox> -- evt. nog een template met uitleg over 'Prm'
      , "Acc" : ttAccept cRUd <TTextCheckbox> -- evt. nog een template met uitleg over 'Acc'
      , "Needed for" : ttIsUsedBy cRud LINKTO INTERFACE "SpecifyOwnedVariables"
      ]
   ]

--[Individual MPTrx instances]--
INTERFACE "MPTrxCasus": mptrxIsaCasus cRud TABS
--$ Each TAB has a line with 'ShowScope' because editing stuff in sub-tabs resets the focus which makes the interface unworkable.
   [ "Parties" : I[MPTrx] cRud BOX <ROWSNL> 
      [ "Transaction": I cRud INTERFACE "ShowMPTrxSummary"
      , "Parties": {-tParty-}ttScope~ cRud INTERFACE "TPartyManagement" -- <TPartyManagement>
      ]
   , "TTexts" : I[MPTrx] cRud BOX <ROWSNL> -- These are only TTexts that the user must supply values for
      [ "Transaction": I cRud INTERFACE "ShowMPTrxSummary"
      , "TTexts to be valuated": I cRud INTERFACE "EvaluatableTTexts"
      , "Only show unevaluatable TTexts if they exist":
           I /\ ttScope~;
                (I[TText]-I[Concern]);V[TText*SESSION];'_SESSION'
                ;(  sessionAuthISOLevel;-isoLevelGTE;ttReqdLoA~
                 /\ sessionAccount;tPartyAcc~;ttValSupplier~
                 )
                ;ttScope cRud BOX <ROWSNL>
         [ "Current authentication level": V[MPTrx*SESSION];'_SESSION' cRud ROWS [ "You are authenticated at level" : sessionAuthISOLevel cRud <ShowISOLevel> ]
         , "Unevaluatable TTexts": I cRud INTERFACE "UnEvaluatableTTexts"
         ]
      ]
   , "Evaluate Concerns" : I[MPTrx] cRud BOX <ROWSNL> -- These are concerns the user must evaluate
      [ "Transaction": I cRud INTERFACE "ShowMPTrxSummary"
      , "Concerns" : ttScope~ cRuD INTERFACE "EvaluateConcern"
      ]
   , "Data transfers/Privacy" : I[MPTrx] cRud BOX <ROWSNL> 
      [ "Transaction": I cRud INTERFACE "ShowMPTrxSummary"
--      , "Data transfers" : I[MPTrx] cRud INTERFACE "ShowDataTransfers"
      ]
   , "Manage Concerns" : I[MPTrx] cRud BOX <ROWSNL> -- These are concerns owned by the user in his capacity as a TParty
      [ "Transaction": I cRud INTERFACE "ShowMPTrxSummary"
      , "My Seat(s)" : {-tParty-}ttScope~;(I /\ tPartyAcc;sessionAccount~;'_SESSION';V) cRud ROWS
         [ "TParty": I
         , "Concerns": tPartyAcc;ttOwner~;I[Concern] CRuD INTERFACE "SpecifyOwnedConcerns" -- The INTERFACE selects the concerns owned by the user
--         , "Include" : tPartyImportAgr cRUd
{-       , "Included template(s)":
         scopeIII~;(  (scopeOwner;sessionAccount~ \/ scopeOrg;sessionOrg~);'_SESSION';V 
                     /\ (I-mptrxIsaCasus)
                     ) cRud BOX <SHCOLS>
            [ "Transaction ID" : scopeID cRud
            , "Description" : scopeDescr cRud
            , "Owner" : scopeOwner cRud
            ] --}
         ]
--    , "Include template": (ttScope~;tPartyOrg /\ V;'_SESSION';sessionOrg)  tPartyImportAgr
      ]
   ]

--[TParties - seat management]--
INTERFACE "SpecifyTParty" FOR User: I[TParty] cRud BOX <ROWSNL>
   [ "TParties I own": (I /\ V;'_SESSION';sessionAccount;tPartyOwner~) cRud BOX <SHCOLS>
      [ "Name": {-tParty-}ttName cRUd
      , "Description": {-tParty-}ttDescr cRUd
      , "Required org": tPartyReqdOrg cRUd -- (One of) the(se) organization(s) that can take this seat.
      , "Concerns" : ttValSupplier~;I[Concern] cRUd INTERFACE "SpecifyOwnedConcerns"
      , "TTexts": ttValSupplier~;(I[TText]-I[Concern]) cRud INTERFACE "SpecifyOwnedVariables"
      ]
   , "TParties I do not own": (I /\ V;'_SESSION';sessionAccount;-I;tPartyOwner~) cRud BOX <SHCOLS>
      [ "Name": {-tParty-}ttName cRud
      , "Description": {-tParty-}ttDescr cRud
      , "Required org": tPartyReqdOrg cRud
      ]
   ]

POPULATION PopOverText CONTAINS [ "You are not in one of the required organizations" ] REPRESENT PopOverText TYPE ALPHANUMERIC
INTERFACE "TPartyManagement" FOR User: I[TParty] cRud BOX <SHCOLS>
   [ " ": I cRud BOX <COLSNL> -- Buttons
      [  "Claim": -- user can claim (occupy) a seat if...
            I-(tPartyAcc;tPartyAcc~)  -- the seat is not occupied
            /\ ( (I-(tPartyReqdOrg;tPartyReqdOrg~)) -- and either no specific organization is required for this TParty
               \/ V;'_SESSION';sessionOrg;tPartyReqdOrg~ -- or the user is in (one of) the required organization(s).
               )
            cRud BOX <PropBtnSuccess> [ "property": tPartyClaimSeatReq cRUd, "popovertext": {-tParty-}ttName cRUd ]
      , "Leave": -- user can leave a seat if... 
            I /\ tPartyAcc;sessionAccount~;'_SESSION';V[SESSION*TParty] -- (s)he occupies that seat
            cRud BOX <PropBtnWarning> [ "property": tPartyLeaveSeatReq cRUd, "popovertext": {-tParty-}ttName cRUd ]
      , "Kick": -- user can kick another user off a seat if...
            I /\ V;'_SESSION';sessionAccount;tPartyOwner~ -- the user owns the seat
              /\ tPartyAcc;-sessionAccount~;'_SESSION';V[SESSION*TParty] -- and the seat is occupied by another user
            cRud BOX <PropBtnDanger> [ "property" : tPartyLeaveSeatReq  cRUd, "popovertext": {-tParty-}ttName cRUd ]
      , "Reserved": -- user cannot claim the empty seat, because he does not belong to a required organization
            I-(tPartyAcc;tPartyAcc~)  -- the seat is not occupied
            /\ tPartyReqdOrg;tPartyReqdOrg~ -- and the seat requires someone from a specific organization
            /\ V;'_SESSION';-(sessionOrg;tPartyReqdOrg~) -- and the user is not of such an organization.
            cRud BOX <PropBtnLink> [ "property": tPartyLeaveSeatReq cRUd, "popovertext": V;'You are not in one of the required organizations'[PopOverText] cRUd ]
      ]
   , "Occupied by": tPartyAcc cRud
   , "Name": {-tParty-}ttName cRud
   , "Description": {-tParty-}ttDescr cRud
   ]

--[Concerns]--
INTERFACE "SpecifyOwnedConcerns": (I[Concern] /\ V;'_SESSION';sessionAccount;ttOwner~) CRud BOX <SHCOLS>
   [ "Concern" : ttName cRUd -- rough description of the concern
   , "of SHR": ttValSupName cRUd -- SHR that decides whether or not the concern is addressed
   , "Specification" : ttTemplate cRUd -- criteria by which SHR decides whether or not the concern is addressed
   , "Prm" : ttPromise cRUd <TTextCheckbox> -- evt. nog een template met uitleg over 'Prm'
   , "Acc" : ttAccept cRUd <TTextCheckbox> -- evt. nog een template met uitleg over 'Acc'
   , "Criteria/TTexts" : ttIsUsedBy~ cRud BOX <COLSNL> -- ttIsUsedBy :: TText * TText [IRF,...
      [ "Var" : I cRud LINKTO INTERFACE "SpecifyOwnedVariables"
      , "suptext" : V;'SHR:'[IfcText] cRud
      , "Supplier" : ttValSupName cRUd
      , "loatext" : V;'LOA:'[IfcText] cRud
      , "RqLoA" : ttReqdLoA cRUd
      ]
--    , "Owner" : ttOwner cRud -- This is automatically filled in to be the session user
   ]
   POPULATION IfcText CONTAINS [ "SHR:", "LOA:"]

INTERFACE "ShowUnOwnedConcerns": 
   (I[Concern] /\ V;'_SESSION';sessionAccount;-I;ttOwner~) cRud BOX <SHCOLS>
   [ "Concern" : ttName cRud -- rough description of the concern
   , "of SHR": ttValSupName cRud -- SHR that decides whether or not the concern is addressed
   , "Specification" : ttTemplate cRud -- criteria by which SHR decides whether or not the concern is addressed
   , "Prm" : ttPromise cRud <TTextCheckbox> -- evt. nog een template met uitleg over 'Prm'
   , "Acc" : ttAccept cRud <TTextCheckbox> -- evt. nog een template met uitleg over 'Acc'
   , "Editor" : ttOwner cRud
   ]

INTERFACE "EvaluateConcern":
   I[Concern] /\ ttValSupplier;tPartyAcc;sessionAccount~;'_SESSION';V[SESSION*Concern] cRud 
   BOX <SCOLS>
   [ "Concern": I[Concern] cRud
   , "Satisfied?" : concIsAddressed cRUd <TTextCheckbox>
   , "Specification" : I[Concern] cRud <TTextShowInstance>
   , "PAVS": I[Concern] cRud <PAVS> -- Promise, Accept, Valid, Satisfied
   ] 

--[TTexts]--

INTERFACE "SpecifyOwnedVariables": I[Variable] cRuD BOX <ROWSNL>
   [  "Owned vars" : I /\ V[TText*SESSION];'_SESSION';sessionAccount;ttOwner~ cRud BOX <SHCOLS>
      [ "TText" : ttName cRud -- rough description of the concern
      , "SHR (Eval)": ttValSupName cRUd -- SHR that decides whether or not the concern is addressed
      , "Specification" : ttTemplate cRUd -- criteria by which SHR decides whether or not the concern is addressed
   -- , "Defined by" : ttOwner cRud -- This is automatically filled in to be the session user
      , "Reqd LoA" : ttReqdLoA cRUd
   -- , "Reqd Validation": ttReqdLoV cRUd
      , "Needed by" : ttIsUsedBy cRud
      , "Needs" : ttIsUsedBy~ cRud
      ]
   , "Unowned vars" : I - (V[TText*SESSION];'_SESSION';sessionAccount;ttOwner~) cRud BOX <ROWSNL>
      [ "Error" : V;'You cannot specify this TText because you are not its owner.'[ErrMsg]
      ]
   ]
POPULATION ErrMsg CONTAINS [ "You cannot specify this TText because you are not its owner." ]

INTERFACE "ShowUnownedTTexts": 
   (I[TText]-I[Concern]) /\ V[TText*SESSION];'_SESSION';sessionAccount;-I;ttOwner~ cRud BOX <SHCOLS>
   [ "TText" : ttName cRud -- rough description of the concern
   , "SHR (Eval)": ttValSupName cRud -- SHR that decides whether or not the concern is addressed
   , "Specification" : ttTemplate cRud -- criteria by which SHR decides whether or not the concern is addressed
-- , "Defined by" : ttOwner cRud
-- , "Reqd LoA" : ttReqdLoA cRud <ShowISOLevel>
-- , "Reqd Validation": ttReqdLoV cRud
-- , "Needed by" : ttIsUsedBy cRud
-- , "Needs" : ttIsUsedBy~ cRud
   ]

REPRESENT StrongText TYPE ALPHANUMERIC
INTERFACE "EvaluatableTTexts": I[MPTrx] cRud BOX <ROWSNL>
   [ "Headerline 1": V;'TTexts that can be filled in'[StrongText] cRud <STRONG>
   , "TTexts that can be filled in": 
        ttScope~ -- All TTexts in the MPTrx
           ;(  (I[TText]-I[Concern]) -- with the property that they are not a concern
            /\ V[TText*SESSION];'_SESSION'  -- and the user is authenticated with a LoA that is
               ;(  sessionAuthISOLevel;isoLevelGTE;ttReqdLoA~ -- sufficiently large to allow editing
                /\ sessionAccount;tPartyAcc~;ttValSupplier~ -- and the user is the SHR that must provide the value
            )   )
--      ;(I/\compVar;compVar~) -- for which there is a Computation
--      ;(I- compVar~;compVar) -- for which there is NOT a Computation
        cRud BOX <SCOLS>
      [ "TText": I[TText] cRud
      , "Specification": I[TText] cRud <TTextShowInstance>
      , "Value": ttValue cRUd
      , "PAVS": I[TText] cRud <PAVS> -- Promise, Accept, Valid, Satisfied
   -- , "Validity level": ttActualLoV cRUd
   -- , "Required level": ttReqdLoV cRud
      , "Reqd LoA": ttReqdLoA cRud <ShowISOLevel>
      ] 
   ]
POPULATION StrongText CONTAINS [ "TTexts that can be filled in" ]

INTERFACE "UnEvaluatableTTexts": -- Unevaluatable because TParty LoA is too low
   ttScope~;(I[TText]-I[Concern]);V[TText*SESSION];'_SESSION'
   ;(  sessionAuthISOLevel;-isoLevelGTE;ttReqdLoA~
    /\ sessionAccount;tPartyAcc~;ttValSupplier~
    ) cRud BOX <SCOLS>
   [ "LoA required": ttReqdLoA cRud <ShowISOLevelRed>
   , "for TText": I[TText] cRud
-- , "Value": ttValue cRud
   , "Specification" : I[TText] cRud <TTextShowInstance>
   , "PAVS": I[TText] cRud <PAVS> -- Promise, Accept, Valid, Satisfied
   ] 

--[Computations]--
INTERFACE "Computations": I[Computation] cRud COLS
   [ "Result": compRes cRUd
   , "Specification": compVar cRud <TTextShowInstance>
-- , "Arguments": compArgs cRud
   ]         

--[Viewing stuff]--
INTERFACE "ShowMPTrxSummary": I[MPTrx] cRud COLS
   [ "MPTrx" :  I[MPTrx] cRud LINKTO INTERFACE "MPTrxCasus"
   , "Description" : scopeDescr cRud
   , "Owner" : scopeOwner cRud
   , "Status" : I[MPTrx] cRud <MPTrxStatus> --! genereert foutief met: cRud INTERFACE "MPTrxStatus" - zie beschrijving bij INTERFACE "ShowMPTrxPartySummary"
   , "My Auth.Level" : V[MPTrx*SESSION];'_SESSION' cRud BOX <COLSNL> 
      [ "ALvl": sessionAuthISOLevel cRud <ShowISOLevel> ]
   ]

--! Onderstaande INTERFACE gaat fout - zie beschrijving bij INTERFACE "ShowMPTrxPartySummary"
INTERFACE "MPTrxStatus": I[MPTrx] cRud BOX <ROWSNL>
   [ "Status": -- We have a casus in which the user is a TParty
         (mptrxIsaCasus /\ V;'_SESSION';sessionAccount;tPartyAcc~;{-tParty-}ttScope)
         ;(    (I-mptrxIsPromisable               );V[MPTrx*MPTrxStatus];'Progressing' -- -p
            \/ (mptrxIsPromisable -mptrxIsAcceptable);V[MPTrx*MPTrxStatus];'Promised'  --  p /\ -a
            \/ (mptrxIsPromisable/\mptrxIsAcceptable);V[MPTrx*MPTrxStatus];'Accepted'  --  p /\  a
          )
         \/ -- We have a casus in which the user is not a TParty
            (mptrxIsaCasus-(V;'_SESSION';sessionAccount;tPartyAcc~;{-tParty-}ttScope))
            ;V[MPTrx*MPTrxStatus];'Hidden - you are not a TParty'
         \/ -- We have a template
            (I-mptrxIsaCasus);V;'Template'[MPTrxStatus] cRud
   ] REPRESENT MPTrxStatus TYPE ALPHANUMERIC
POPULATION MPTrxStatus CONTAINS [ "Template", "Hidden - you are not a TParty", "Progressing", "Promised", "Accepted" ]

{--[Show Data Transfers]--
INTERFACE "ShowDataTransfers": I[MPTrx] cRud BOX <BoxView1>
   [ "Transmit":
      dtrfAgr~ /\ V;'_SESSION';sessionAccount;(tPartyAcc~;dtrfSrcSH~ /\ -I;tPartyAcc~;dtrfTgtSH~) cRud BOX --<COLSNL>
      [ "To" : dtrfTgtSH;tPartyAcc cRud <ShowToTPartyColon>
      , "Contents" : dtrfVar cRud <Showvar> --! hier met transparency-tools op inhaken.
      ]         
   , "Receive":
      dtrfAgr~ /\ V;'_SESSION';sessionAccount;(tPartyAcc~;dtrfTgtSH~ /\ -I;tPartyAcc~;dtrfSrcSH~) cRud BOX --<COLSNL>
      [ "From" : dtrfSrcSH;tPartyAcc cRud <ShowFromTPartyColon>
      , "Contents" : dtrfVar cRud <Showvar>
      , "Status" : V[DataTransfer*MPTrxStatus];'Template'
      ]
   , "Local":
      dtrfAgr~ /\ V;'_SESSION';sessionAccount;tPartyAcc~;(dtrfSrcSH /\ dtrfTgtSH)~ cRud BOX --<COLSNL>
      [ "Contents" : dtrfVar cRud <Showvar>
      ]
   ] --}

ENDCONTEXT