CONTEXT MirrorMe IN ENGLISH MARKDOWN -- This version has been compiled with Ampersand v3.5.0[branch_#228:44da3d6], build time: 08-Apr-16 08:36:09 West-Europa (zomertijd)


 --! Note: this file needs the PHP-function `ParseTermText` to be included as an ExecEngine extension !--

INCLUDE "MirrorMe_TTextMod.adl"

--INCLUDE "MirrorMe.xlsx" -- NOTE: if you include Excel files, create the prototype with the `--dev` option so that any work (e.g. the creation of Assignments) will be done at installation time

-- CLASSIFY Case ISA TTScope
-- ttTopLevel = claimProperty

    RELATION class[TText*Concept] [UNI] -- The type/class of the value of the TText
    RELATION legalGround[TText*LegalGround] -- The (legal) reason for wanting the TText
    RELATION evidence[TText*Evidence] -- Evidence to underpin the validity of the TTValue


PATTERN Arguments
    PURPOSE CONCEPT TText
    {+If people make claims, they do observations, and they will reason about them.
    In order to decide whether a claim is true, statements are organised in a structure that represents the argument.
    The concept "statement" is used to represent claims, observations, and all other utterances that can be considered true or false.
    Statements and Claims are modeled/implemented as TTexts. 
    +}
    PURPOSE RELATION claimant[TText*Actor] REF "http://www.thefreedictionary.com/claimant"
    {+ Let us treat a statement made by an individual as as a claim of that individual that the statement is true.
    For this reason, each individual who makes the claim can be registered in the relation "claimant".
    The `claimant` 'claims' (a) the validity of the `ttTemplate` and (b) the veracity of `ttValue`.
    Thus, the `claimaint` is solely authorized to change `ttValue` and `ttTemplate`.
    +}
    RELATION claimant[TText*Actor]
    MEANING "A claimant is the party that makes a claim, especially one that is legally cognizable."

    RELATION object[Claim*LegalThing] [UNI] -- het onderwerp van de onenigheid.

    RELATION owner[TTScope*Actor] [UNI] -- the Actor that is the claimant of all toplevel TTexts.
    MEANING IN ENGLISH "the Actor that is the claimant of all toplevel TTexts."
    RELATION created[TTScope*Moment] [UNI]
    MEANING IN DUTCH "De applicatie kan een moment registeren als het moment waarop de zaak is aangemaakt."
    MEANING IN ENGLISH "The application can register a moment as the time a case has been created."


{-The following code depends on a login mechanism. Revive when it is active
    RULE sessionAuthor : (I[TText]#'_SESSION'[SESSION]);ingelogd |- madeBy;V
    MEANING "Every statement must must be stated by someone. If not, the application will assign the user of the current session as the person who made the statement."
    VIOLATION ( TXT "{EX} InsPair;madeBy;TText;", SRC I, TXT ";Actor;" , TGT I
              , TXT "{EX} InsPair;observed;TText;", SRC I, TXT ";Moment;{php}date(DATE_ISO8601)" -- Current date in ISO 8601 date format
              )
    ROLE ExecEngine MAINTAINS sessionAuthor

    RULE caseAuthor : V[TTScope*SESSION];'_SESSION';ingelogd |- owner;V
    MEANING "Every case must have an owner. If not, the application will assign the user of the current session as the initial owner."
    VIOLATION ( TXT "{EX} InsPair;owner;TTScope;", SRC I, TXT ";Actor;" , TGT I
              , TXT "{EX} InsPair;created;TTScope;", SRC I, TXT ";Moment;{php}date(DATE_ISO8601)" -- Current date in ISO 8601 date format
              )
    ROLE ExecEngine MAINTAINS caseAuthor
-}
ENDPATTERN

PURPOSE PATTERN Validity
    {+In order to talk about true and false statements in a precise way, we need the idea of contexts.
    +}
    PATTERN Validity
    PURPOSE RELATION true[TText*TTScope] -- The truth of the TText value (as decided by its claimant) is accepted by the owner of the TTScope
    {+Consider the statement "John has blond hair". If this statement is known to be true in some context `c`,
    the tuple ("John has blond hair", c) can exist in the relation `true`.
    However, if this tuple is not in the relation `true`, it does not follow that John does not have blond hair.
    The truth of the TText value (as decided by its claimant) is accepted by the owner of the TTScope
    +}
    RELATION true[TText*TTScope] [UNI]
    MEANING "A statement that is considered true within a context is registered in the relation `true`."

    PURPOSE RELATION false[TText*TTScope] -- The truth of the TText value (as decided by its claimant) is rejected by the owner of the TTScope
    {+The relation `false` is dual to `true`.
    +}
    RELATION false[TText*TTScope] [UNI]
    MEANING "A statement that is considered false within a context is registered in the relation `false`."

    RELATION valid[TText*TTScope] [UNI] -- The validity (not: veracity) the TText value (as decided by its claimant) is accepted by the owner of the TTScope
    MEANING "Statements that are valid within a case are registered in the relation `valid`."
    PURPOSE RULE TrueFalseValid
    {+It makes no sense to consider a statement true or false, if it is not valid.
    Therefore, validity is considered a necessary condition for truth or falsehood.
    +}
    RULE TrueFalseValid : true \/ false |- valid
    MEANING "A statement can be true or false in a context only if it is valid within that context."

    REPRESENT Moment TYPE DATETIME
    PURPOSE RELATION observed[TText*Moment]
    {+For reconstructing events, it can be necessary to administer the moment an observation or a claim is made.
    For this reason, we use the relation "observed".
    +}
    RELATION observed[TText*Moment] [UNI]
    MEANING IN DUTCH "De applicatie kan een moment registeren als tijdstip waarop een bewering is gedaan."
    MEANING IN ENGLISH "The application can register a moment as the time a statement has been made."

ENDPATTERN


--[INTERFACE]--

INTERFACE "TTexts": V[SESSION*TText] CRuD BOX <SHCOLS>
   [ "zaak" : ttScope CRUD
   , "name" : ttName cRud
   , "value" : ttValue cRud
   , "instance" : ttInstance cRud
   , template : ttTemplate cRUD
   ]

INTERFACE "Scope": I[Scope] CRud BOX
   [ "TTexts": ttScope~ CRud COLS
     [ "name" : ttName cRud
     , "value" : ttValue cRud
     , "instance" : ttInstance cRud
     , template : ttTemplate cRUD
     ]
   ]



-----------------------------------------------------------
ENDCONTEXT