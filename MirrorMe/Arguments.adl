CONTEXT Arguments IN ENGLISH
INCLUDE "Login.adl"
INCLUDE "Login.xlsx"
INCLUDE "TermTexts.adl" --Ding van Rieks, maar aangepast voor MirrorMe
INCLUDE "TermTexts.xlsx"

PATTERN Arguments
    RELATION supports[Argument*Statement] [UNI]
    MEANING IN DUTCH "De applicatie registreert van elk argument de onderbouwde bewering."
    MEANING IN ENGLISH "Of every argument, the application registers the supported statement."
    RELATION reason[Argument*Statement] [UNI]
    MEANING IN DUTCH "De applicatie registreert de reden van elk argument."
    MEANING IN ENGLISH "The application registers the reason of every argument."
    RELATION arg[Statement*Term] [UNI]
    MEANING IN DUTCH "De applicatie dient een bewering als vrije tekst in een invoerveld te accepteren."
    MEANING IN ENGLISH "The application must accept a statement in an input field as free text."
    RELATION ofClaim[Claim*Argument]  -- ofClaim = states;(supports~;reason)*;reason~
    MEANING IN DUTCH "De applicatie kan een willekeurig aantal argumenten aan een claim koppelen."
    MEANING IN ENGLISH "The application can associate an arbitrary number of arguments with a claim."
    RELATION legalGround[Argument*LegalGround]
    MEANING IN DUTCH "De applicatie dient juridische gronden van een argument te registreren."
    MEANING IN ENGLISH "The application must register legal grounds of an argument."
    REPRESENT LegalGround TYPE ALPHANUMERIC

    RULE addPhrase : arg |- V;phrasing
    VIOLATION ( TXT "{EX} NewStruct;Statement"
              , TXT ";phrasing;Statement;_NEW;Term;" , TGT I
              )
    ROLE ExecEngine MAINTAINS addPhrase

    RULE addSupport : arg;phrasing~ |- supports~;reason
    VIOLATION ( TXT "{EX} NewStruct;Argument"
              , TXT ";supports;Argument;_NEW;Statement;" , SRC I
              , TXT ";reason;Argument;_NEW;Statement;" , TGT I
              , TXT ";ofClaim;Claim;", SRC (states\/ofClaim;(reason\/supports))~, TXT ";Argument;_NEW"
              )
    ROLE ExecEngine MAINTAINS addSupport

    RULE clearArg : supports~;reason |- -(arg;phrasing~)
    VIOLATION ( TXT "{EX} DelPair;arg;Statement;", SRC I, TXT ";Term;", SRC arg )
    ROLE ExecEngine MAINTAINS clearArg

    RULE TOTsupports : I |- supports;supports~
    MEANING IN DUTCH "De applicatie dient een argument te verwijderen zodra de bewering, die door het argument onderbouwd wordt, wegvalt."
    MEANING IN ENGLISH "The application must remove an argument as soon as the statement that is supported by the argument ceases to exists."
    VIOLATION ( TXT "{EX} DelAtom;Argument;", SRC I )
    ROLE ExecEngine MAINTAINS TOTsupports

    RULE TOTreason : I |- reason;reason~
    MEANING IN DUTCH "De applicatie dient een argument te verwijderen zodra de reden ervan wegvalt."
    MEANING IN ENGLISH "The application must remove an argument as soon as its reason no longer exists."
    VIOLATION ( TXT "{EX} DelAtom;Argument;", SRC I )
    ROLE ExecEngine MAINTAINS TOTreason


    RELATION madeBy[Statement*Account] [UNI]
    MEANING IN DUTCH "De applicatie kan een account registeren als persoon, die een bewering heeft gedaan."
    MEANING IN ENGLISH "The application can register an account as the person who has made a statement."
    RELATION moment[Statement*Moment] [UNI]
    MEANING IN DUTCH "De applicatie kan een moment registeren als tijdstip waarop een bewering is gedaan."
    MEANING IN ENGLISH "The application can register a moment as the time a statement has been made."
    REPRESENT Moment TYPE DATE
    RELATION phrasing[Statement*Term] [UNI]
    MEANING IN DUTCH "De applicatie kan de precieze formulering van een bewering als tekst registeren."
    MEANING IN ENGLISH "The application can register the exact phrasing of a statement as text."
    
    RELATION evidence[Statement*Document]
    MEANING IN DUTCH "De applicatie kan registeren welk document als bewijsmiddel gekoppeld is aan een bewering."
    MEANING IN ENGLISH "The application can register which document is used as evidence to substantiate a statement."

    RELATION case[Claim*Case] [UNI]
    MEANING IN DUTCH "Van elke claim kan de applicatie registeren in welke zaak (`Case`) die claim wordt onderbouwd."
    MEANING IN ENGLISH "Of every claim, the application can register the `Case` in which that claim is substantiated."
    RELATION states[Claim*Statement] [UNI]
    MEANING IN DUTCH "De applicatie kan de bewering (`Statement`) registeren die een claim karakteriseert."
    MEANING IN ENGLISH "The application can register a `Statement` that characterizes a claim."
    RELATION object[Claim*LegalThing] [UNI]

    RELATION caseType[Case*CaseType] [UNI]
    MEANING IN DUTCH "De applicatie kan de zaaksoort (`CaseType`) registeren om de zaak in een categorie in te delen."
    MEANING IN ENGLISH "The application can register a `CaseType` to categorize the case."
    RELATION owner[Case*Account] [UNI] -- must not be TOT to give the Exec-Engine time to compute the owner.
    MEANING IN DUTCH "De applicatie kan een account registeren als eigenaar van een zaak."
    MEANING IN ENGLISH "The application can register one account as the owner of a case."
    RELATION created[Case*Moment] [UNI]
    MEANING IN DUTCH "De applicatie kan een moment registeren als het moment waarop de zaak is aangemaakt."
    MEANING IN ENGLISH "The application can register a moment as the time a case has been created."
    RELATION claims[Case*Term]
    MEANING IN DUTCH "De applicatie kan een willekeurig aantal teksten registreren als claim in een gegeven zaak."
    MEANING IN ENGLISH "The application can register any number of texts as a claim in a given case."

    RULE sessionAuthor : (I[Statement]#'_SESSION'[SESSION]);ingelogd |- madeBy;V
    MEANING "Every statement must must be stated by someone. If not, the application will assign the user of the current session as the person who made the statement."
    VIOLATION ( TXT "{EX} InsPair;madeBy;Statement;", SRC I, TXT ";Account;" , TGT I
              , TXT "{EX} InsPair;moment;Statement;", SRC I, TXT ";Moment;{php}date(DATE_ISO8601)" -- Current date in ISO 8601 date format
              )
    ROLE ExecEngine MAINTAINS sessionAuthor

    RULE addStatement : claims~;owner |- phrasing~;madeBy
    MEANING "For each claim of owner `p` there exists a statement with identical phrasing, which is made by `p`."
    VIOLATION ( TXT "{EX} NewStruct;Statement"
              , TXT ";phrasing;Statement;_NEW;Term;" , SRC I
              , TXT ";madeBy;Statement;_NEW;Account;" , TGT I
              )
    ROLE ExecEngine MAINTAINS addStatement

    RULE addClaim : claims;phrasing~ |- case~;states
    MEANING "For each statement that is phrased as a claim in a particular case, there must be a `Claim` that registers this statement."
    VIOLATION ( TXT "{EX} NewStruct;Claim"
              , TXT ";case;Claim;_NEW;Case;" , SRC I
              , TXT ";states;Claim;_NEW;Statement;" , TGT I
              )
    ROLE ExecEngine MAINTAINS addClaim

    RULE caseAuthor : V[Case*SESSION];'_SESSION';ingelogd |- owner;V
    MEANING "Every case must have an owner. If not, the application will assign the user of the current session as the initial owner."
    VIOLATION ( TXT "{EX} InsPair;owner;Case;", SRC I, TXT ";Account;" , TGT I
              , TXT "{EX} InsPair;created;Case;", SRC I, TXT ";Moment;{php}date(DATE_ISO8601)" -- Current date in ISO 8601 date format
              )
    ROLE ExecEngine MAINTAINS caseAuthor

ENDPATTERN

INTERFACE "Zaken" : '_SESSION';ingelogd
TABS [ Zaken2 : owner~ INTERFACE "Zaak"
     , Zaken : owner~
       COLS [ type : caseType
            , claims : case~;states INTERFACE "Redeneerstap"
            ]
     ]

INTERFACE "Redeneerstap" (arg, reason, legalGround) : I[Statement]
TABS [ "Onderbouwing" : I
     ROWS [ "argumenten:" : supports~
            COLS [ bewering : reason
                 , grond : legalGround
                 ]
          ]
     , "Draagt bij aan" : I
     ROWS [ "argument voor:" : reason~
            COLS [ bewering : supports
                 , grond : legalGround
                 ]
          ]
     ]

VIEW Argument : Argument(reason;phrasing;critShowText)
VIEW Statement : Statement(phrasing;critShowText)
--VIEW Claim : Claim(states;phrasing;critShowText)

INTERFACE "Nieuwe Zaak" (caseType, claims, object) : I[Case]
TABS [ "Bewijsvoering" : I
     COLS [ "te bewijzen"     : claims INTERFACE "Term"
          , claims : case~
            COLS [ betreft : object
                 , uitspraak : states;phrasing INTERFACE "Term"
                 ]
          ]
     , "Variables": V[Case*Variable] cRud COLS
        [ "Name" : varName cRud
        , "Value" : varValue cRUd
        , "ShowValue" : varShowValue cRud
        , "Term" : varTerm cRud
        , "ShowTerm" : varShowTerm cRud
        ]
     ,  "Zaakgegevens" : I
     COLS [ "aangemaakt door" : owner
          , "aangemaakt op"   : created
          , "type zaak"       : caseType
          ]
     ]
INTERFACE "Term" : I[Term] COLS
      [ "Term definition" : critText cRUd
      , "Term as shown" : critShowText cRud
      ]
INTERFACE "Zaak" : I[Case] /\ (owner;ingelogd~;'_SESSION';ingelogd;owner~) 
  BOX [
        id : I
      , "claims1" : case~;states
      , "claims"  : claims INTERFACE "Term"
      ]
ENDCONTEXT