CONTEXT Pega
INCLUDE "PegaConceptualModel.ifc"

PURPOSE CONCEPT DataClass
{+Data classes are used to represent objects such as a person Customer, Vendor in a Pega application.
Each data class contains properties and other rules that describe the behavior of the object represented.
+}
CONCEPT DataClass	"A data class is a concrete class used to represent a data object."
PURPOSE CONCEPT DataType
{+Data types define and hold data for your application.
For example, a Customer data type might be used to manage customer contact information.
It might include the customer's name, email, phone number, and so on.
Data types are managed using the Data Explorer.
+}
CONCEPT DataType	"Data types define the structure of data."

PURPOSE CONCEPT AggregateProperty
{+An aggregate property stores more than a single value, such as a Value List, Page List, Value Group or Page Group, or a page that can contain a Java object. These are similar to arrays, repeating groups, unordered sets or collections found in other development tools.
+}
CONCEPT AggregateProperty	"An aggregate property is a property that can store multiple values."

PURPOSE CONCEPT Activity
{+An activity is the sequential processing unit of the Pega 7 Platform system. An activity consists of one or more steps. Each step can call a Pega 7 Platform method, transfer control to another activity, or execute custom inline Java.
+}
CONCEPT Activity "An activity defines a sequence, selection or iteration of steps."

PURPOSE CONCEPT Case
{+A case is a primary unit of work in an application.
You can manually create, or instantiate, a case in an end user portal or through forms in an application.
Your application can automatically create a case when a parent case is created,
or email is sent to an account that is associated with the starting process of a parent case.
In legacy systems, cases are commonly referred to as work items or work objects.
+}
CONCEPT Case "A case is an instance of a case type."
CONCEPT CaseID	"A case ID is a permanent, external identifier of a case."
PURPOSE RELATION caseID[Case*CaseID]
{+A case ID is a permanent, external identifier of a case.
The case ID is unique throughout the system.
It has an optional prefix, a number, and an optional suffix.
+}

PURPOSE CONCEPT "operator"
{+An operator is the object that represents a user in the system.
It is implemented as an instance of the the Data-Admin-Operator-ID class.
To view a list of the available operators, open the Designer Studio > Org & Security > Organization > Operators landing page."
+}
CONCEPT "operator"	"An operator is an object that stores the user name, password, and other identifying information for an application user."

PURPOSE CONCEPT AccessRole
{+An access role is used to grant or deny access to specific user groups through the Access of Role to Object and Access Deny rule types.+}
CONCEPT AccessRole "An access role is a rule, which defines the classes that a user can view, update, and delete."
PURPOSE CONCEPT Application
{+An application is a business solution that automates work flows in your organization.
Multiple, unrelated applications can be hosted in the same system.
You create an application by running the New Application wizard.
An application rule is an instance of the Rule-Application rule type, which is part of the Application Definition category.
+}
CONCEPT Application	"An application is a rule that defines a set of ruleset versions added as a unit to a user's ruleset list."
PURPOSE CONCEPT "AttachmentCategory"
{+An attachment category restricts user operations on an attachment, based on privileges, when conditions, or attachment types.
You can create attachment categories for your cases in Case Designer.
+}
CONCEPT "AttachmentCategory"	"An attachment category is a rule, which controls the security of attachments in your application."
CONCEPT "Access of Role to Object" "A Access of Role to Object rule is a rule that "
PURPOSE CONCEPT BinaryFile
{+Binary file rules store data in a Base64 format to support endian-independent, character-set independent processing.
They are meant for non-text data, such as images and PDF documents.
When extracted or downloaded, the file is reconverted to its original format.
+}
CONCEPT BinaryFile "A Binary File is a rule, which identifies static content files that contain information in a non-text format."
PURPOSE CONCEPT CaseType
{+A case type represents work in your application that follows a life cycle, or path, to completion.
Each case type has a hierarchical structure and can include attachments that provide relevant details about the work that you are processing.
Instances of case types are called cases.
+}
CONCEPT CaseType "A Case Type is a rule, which establishes how to create a case, including the relationship between the case and any parent or child case."
PURPOSE CONCEPT Category
{+A category defines an organizational framework for reports displayed in the Report Browser.
Each category consists of a label and an owner type,
which exposes the category to a specific audience, either an individual user, a group of users, or all users.
Categories are used in the Application Explorer, My Rules, Records Explorer, Rules Explorer (in versions of Pega prior to 7.1), attachments and reports to enhance navigation."
+}
CONCEPT Category "A Category is a rule, which systematically groups rule types and data types."
PURPOSE CONCEPT Class
{+A class defines capabilities such as properties, activities, and HTML forms that are available to other, subordinate classes, or to instances of the class.
Classes are organized into a hierarchy, where the system searches the class hierarchy from the current class upwards when looking for a rule to apply."
+}
CONCEPT "Class" "A Class is a rule, which is a collection of rules or other objects."
PURPOSE CONCEPT Connector
{+On a flow diagram, a connector is a line that connects two shapes.
Typically, connectors leaving an assignment shape represent flow actions.
Other connectors might link to a When condition rule.
A connector is a programmatic component that defines and implements an interface between a Pega 7 Platform application that is acting as a client, and an external system that is acting as a server.
A connector is implemented by any of the rule types in the Integration Connectors category.
The Connector and Metadata wizard assists in developing connectors without entering class rules, properties, or connector rules.
You can also create SOAP, REST, and SAP connectors directly from the Connectors landing page.
+}
CONCEPT Connector	"A connector is a rule, which allows an application, acting as a client, to interact with an external system or database."
PURPOSE CONCEPT DataTransform
{+A data transform is a rule used to set default values for properties on a clipboard page, copy one clipboard page to another, map properties from one page to another, append properties from one Page List property to another, and iterate over pages in a Page List property to map data on each page. These rules define a sequence of steps, and are executed in order, except when a conditional action, such as a when condition or a transition action, is encountered.
+}
CONCEPT DataTransform "A data transform is a rule, which provides a mapping of properties on pages to (other) properties on (other) pages."
PURPOSE CONCEPT Flow
{+A flow models a business process in your application by using graphical shapes and connectors to define a sequence of events.
You can edit a flow in Case Designer or Process Modeler.
+}
PURPOSE CONCEPT DeclarativeRule
{+A declarative rule describes how the system automatically computes the value of a property using values of one or more other properties.
Pega provides six types of declarative records: Constraints, Declare Expressions, Declare OnChange, Declare Trigger, Declare Index and Data Pages (Declare Pages in PRPC 6.3 and earlier versions).
Unlike other types of rules, declarative rules are not called explicitly.
+}
CONCEPT DeclarativeRule	"A declarative rule computes the value of a property automatically."
CONCEPT "Flow" "A Flow is a rule, which defines the sequences of events that may occur when a flow is being executed in a graphical diagram."
PURPOSE CONCEPT FlowAction
{+A flow action displays a task or a choice, such as Approve or Reject, to users when they run flows.
The two types of flow actions are connector flow actions and local flow actions.
You can edit flow actions in the Process Modeler or Case Designer.
+}
CONCEPT FlowAction "A Flow Action is a rule, which defines actions to be executed when users run a flow."
CONCEPT Library	"A library is a rule that contains a set of related function rules."
PURPOSE CONCEPT Portal
{+Portals provide intuitive, results-focused workspaces
that support developers with the Designer Studio, and users that manage cases with the Case Manager and mobile portals.
Information in a user's access group, referencing a portal rule (Rule-Portal rule type),
governs the appearance and functions of the portals that are available to that user.
+}
CONCEPT Portal "A Portal is a rule, which defines the workspace of a user."
PURPOSE CONCEPT Property
{+Each property can be associated with a value and has a mode and type.
The property mode, such as Single Value or Page List, defines the structure that is used to store the property value.
The property type, such as Text or Date, defines the format and allowable characters in the property value.
+}
CONCEPT Property "A Property is a rule, which defines the format and visual presentation of data in an application."
PURPOSE CONCEPT Property
{+Each property can be associated with a value and has a mode and type.
The property mode, such as Single Value or Page List, defines the structure that is used to store the property value.
The property type, such as Text or Date, defines the format and allowable characters in the property value.
+}
PURPOSE CONCEPT ReportDefinition
{+A report definition generates an SQL query that retrieves and sorts information
from the PegaRULES database, an external database, or an Elasticsearch index,
and displays the results in a variety of formats.
The two types of report definition reports are summarized reports and list reports.
+}
CONCEPT ReportDefinition "A Report Definition is a rule, which defines a report definition report"
PURPOSE RELATION scope[Rule*Class]
{+Each rule has a scope, which is the class in which that rule is visible.
You specify the scope of a rule in the Apply to field.
The class you select determines how extensively you can use the rule — within one case type, or across case types.
+}

PURPOSE CONCEPT RuleSet
{+A RuleSet identifies, stores, and manages the set of rules that define an application or a major portion of an application. A ruleset contains rule instances, which are divided into ruleset versions to support version management. A ruleset is identified in the system by the ruleset name, which is an instance of the Rule-RuleSet-Name rule type.
+}
CONCEPT RuleSet "A RuleSet is a set of rules."
CONCEPT "RuleSet Version" "A RuleSet Version is a rule, which "
PURPOSE RELATION elem[Rule*RuleSet]
{+The ruleset is the container for the rule.
The ruleset identifies, stores, and manages the set of rules that define an application or a major portion of an application.
+}

CONCEPT "Section" "A Section is a rule, which "
PURPOSE CONCEPT ServiceLevel
{+A service level is an expectation of performance for completion of a task or case.
Service levels establish two time intervals \"a goal and a deadline\" that define when a task or case should be completed, the goal and when the task or case must be completed, the deadline.
A service level for a case is defined as part of the case.
A service level for an assignment is defined with a service level rule.
It includes one or two time intervals, known as goals and deadlines.
Goals and deadlines indicate the expected or targeted turnaround time for the assignment or time to resolution for the case.
+}
CONCEPT ServiceLevel	"A service level is a rule that defines the time interval required to complete an assignment."
PURPOSE CONCEPT ServiceLevelAgreement
{+To standardize how you resolve work in your application is done in a service level agreement (SLA).
You can apply a service-level agreement to cases, stages, steps, flows, and assignments."

+}
CONCEPT ServiceLevelAgreement "A Service Level Agreement is a rule, which defines intervals of time for goals and deadlines."
PURPOSE CONCEPT ServiceLevel
{+A shortcut rule is an efficient way to view, run, and share reports based on report categories.
Report shortcuts are typically created and managed automatically in response to user actions, but application developers can create them, too."
+}
CONCEPT Shortcut "A Shortcut is a rule, which defines report shortcuts."
PURPOSE CONCEPT Skin
{+A Skin defines an application's responsive behavior and formatting, such as colors, fonts, images, and layout, of portals, cases, rule forms, and reports."
+}
CONCEPT Skin "A skin is a rule, which generates the styling (Cascading Style Sheet) for an application."
PURPOSE CONCEPT "TextFile"
{+A text file is used in an application, to provide the security, inheritance versioning and deployment benefits of rule resolution for a file."
+}
CONCEPT "TextFile"	"A text file is a rule, which stores static HTML, XML, Cascading Style Sheet, DHTML and JavaScript script files."
PURPOSE CONCEPT ValidateRule
{+A validate rule provides the means to check property values against one or more expected values, and return an error message if the property value does not match the expected value.
+}
CONCEPT ValidateRule	"A validate rule is a rule, which restricts user inputs by comparing the entered properties with a set of conditions."
CONCEPT WhenRule	"A when rule is a decision rule that defines a true-false test based on comparing one or more property values with constant values or with other property values."
PURPOSE CONCEPT WorkParty
{+A work party represents a person, business, or organization that is involved in a case.
A work party receives correspondence, such as email, and can be an active or passive participant based on its role.
Work parties are added to a case as it is processed.
You can list and configure supported work parties in Case Designer.
+}
CONCEPT WorkParty "A work party rule is a rule that adds a person, business, or organization to a case."

CONCEPT AccessGroup "An access group is a group of users that have access to one specific application."
CONCEPT OperatorRecord "An operator record contains the information of one specific user for authorizing logings and access to applications."

PURPOSE CONCEPT FlowShape
{+A flow shape represents a task that is accomplished as part of a business process.
Flow shapes are differentiated by color, symbol, and name.
You add standard, advanced, and smart shapes to a flow by using Process Modeler.
+}
CONCEPT FlowShape "A flow shape is a graphical element of a flow, which represents a task that is accomplished as part of a business process."
PURPOSE CONCEPT Control
{+A control is used for both displaying and accepting user input.
Standard controls are preferred over custom controls.
+}
CONCEPT Control	"A control is a a screen element (aka widget) and a rule, which dictates how properties appear on user forms, correspondence and other HTML forms."
CONCEPT Section "A section is an area of a standard user form that is incorporated on a harness form. The appearance, behavior, and contents of a section are defined by a section rule (Rule-HTML-Section rule type). Structurally, a section consists of one or more layouts and embedded sections."

PURPOSE CONCEPT "form"
{+Use Case Designer to define the visual presentation of a form.
+}
CONCEPT "Form"	"A form displays information or collects input from users as they create, update, and resolve cases in your application."

PURPOSE RELATION uses[DynamicLayout*Format]
{+A dynamic layout uses a format to organize UI elements on the screen.
+}
PURPOSE RELATION configured[Breakpoint*Format]
{+A format can have breakpoints to control the responsive behaviour of UI elements on the screen.
+}

PURPOSE CONCEPT Layout
{+Pega provides several types of layouts that dictate how controls are arrayed."
+}
CONCEPT Layout	"A layout is a portion of a section rule, used to organize the labels, fields, and other controls that comprise the user interface."
PURPOSE CONCEPT DynamicLayout
{+Dynamic layouts separate content and presentation.
You add content, such as properties, controls, dynamic containers, and other sections, to a dynamic layout within a section.
You set the presentation of that content by using dynamic layout formats specified in the skin.
+}
CONCEPT DynamicLayout	"A dynamic layout is a DIV-based layout that allows for the flexible display of content."
PURPOSE CONCEPT DataPage
{+A data page provides an abstraction between the application and data layers.
The application does not need to change if the source from which the data page is fed changes.
+}
CONCEPT DataPage	"A collection of data to be used in an application."
PURPOSE RELATION layout[Section*Layout] REF "Essentials pg. 301"
{+Sections use Layouts that organize the controls in a series of rows and columns.
Each cell within a layout can contain a control.
You can configure many layout designs
+}
PURPOSE RELATION belongsTo[UserInterface*Class] REF "Using Pega 7"
{+In the application explorer, if you expand a class, you will see that a class can have one user interface.
+}
PURPOSE CONCEPT Portal REF "Essentials pg. 301"
{+Every Pega UI is built inside a portal rule. The main purpose of a portal rule is to set up workspaces for users.
+}
PURPOSE CONCEPT Harness REF "Essentials pg. 301"
{+Harnesses frame the work areas in which users process cases.
A harness provides tools that let users manage the assignment process.
Harnesses give users the ability to cancel, save, or submit their work.
While working in the assignment, users can transfer their assignments to other users,
attach files to the case, or send email correspondence.
+}


PURPOSE RELATION controls[Section*Control]
{+Pega provides rules called controls that you add to a section to help users interact with the form.
+}
PURPOSE RELATION reached[Case*Assignment]
{+uitstaande vraag.
+}
PURPOSE RELATION caseType[Stage*CaseType]
{+
+}
PURPOSE RELATION caseType[View*CaseType]
{+
+}
PURPOSE RELATION stage[Process*Stage]
{+
+}
PURPOSE RELATION elem[Step*Process]
{+
+}
PURPOSE RELATION flowShape[Step*FlowShape]
{+Steps are represented by flow shapes to visualize a process in the Process Modeler, which is part of the Designer.
+}
PURPOSE RELATION performableBy[Process*Role]
{+
+}
PURPOSE RELATION flowRule[Process*FlowRule]
{+A flow rule provides a visual method for modeling a process in your application using shapes and connectors to define a sequence of events.
+}
PURPOSE RELATION role[Operator*Role]
{+
+}
PURPOSE RELATION stepView[Step*View]
{+
+}
PURPOSE RELATION queued[Step*WorkQueue]
{+
+}
PURPOSE RELATION queue[AccessRight*WorkQueue]
{+
+}
PURPOSE RELATION grantee[AccessRight*Operator]
{+
+}
PURPOSE RELATION personalQ[Operator*WorkQueue]
{+
+}
--PURPOSE RELATION [*Goal]
--{+
--+}
--PURPOSE RELATION [*Deadline]
--{+
--+}
--PURPOSE RELATION [*PassedDeadline]
--{+
--+}
PURPOSE RELATION changeStage[Step*Stage]
{+
+}
PURPOSE RELATION workStatus[Case*Status] REF "Essentials pg 97"
{+Adding work statuses and instructions keeps the user informed about a case.
By using these options, you can help users complete their work more productively.
At any given moment in time, a case has a status.
+}
--PURPOSE RELATION [Step*Instruction]
--{+
--+}
--PURPOSE RELATION [Step*]
--{+
--+}
--PURPOSE RELATION [*]
--{+
--+}


ENDCONTEXT